/********************************************************************************
** Form generated from reading UI file 'mips.ui'
**
** Created by: Qt User Interface Compiler version 6.7.1
**
** WARNING! All changes made in this file will be lost when recompiling UI file!
********************************************************************************/

#ifndef UI_MIPS_H
#define UI_MIPS_H

#include <QtCore/QVariant>
#include <QtGui/QAction>
#include <QtWidgets/QApplication>
#include <QtWidgets/QCheckBox>
#include <QtWidgets/QComboBox>
#include <QtWidgets/QFrame>
#include <QtWidgets/QGroupBox>
#include <QtWidgets/QLabel>
#include <QtWidgets/QLineEdit>
#include <QtWidgets/QMainWindow>
#include <QtWidgets/QMenu>
#include <QtWidgets/QMenuBar>
#include <QtWidgets/QPushButton>
#include <QtWidgets/QRadioButton>
#include <QtWidgets/QStatusBar>
#include <QtWidgets/QTabWidget>
#include <QtWidgets/QTextEdit>
#include <QtWidgets/QToolBar>
#include <QtWidgets/QWidget>
#include "qcustomplot.h"

QT_BEGIN_NAMESPACE

class Ui_MIPS
{
public:
    QAction *actionAbout;
    QAction *actionClear;
    QAction *actionOpen;
    QAction *actionSave;
    QAction *actionProgram_MIPS;
    QAction *actionSave_current_MIPS_firmware;
    QAction *actionSet_bootloader_boot_flag;
    QAction *actionMIPS_commands;
    QAction *actionHelp;
    QAction *actionMessage_repeat;
    QAction *actionGet_file_from_MIPS;
    QAction *actionSend_file_to_MIPS;
    QAction *actionRead_EEPROM;
    QAction *actionWrite_EEPROM;
    QAction *actionRead_ARB_FLASH;
    QAction *actionWrite_ARB_FLASH;
    QAction *actionARB_upload;
    QAction *actionSelect;
    QAction *actionScripting;
    QAction *actionProperties;
    QAction *actionProgram_RFmega;
    QWidget *centralWidget;
    QTabWidget *tabMIPS;
    QWidget *System;
    QLabel *lblMIPSimage;
    QLabel *lblMIPSconfigTitle;
    QLabel *lblMIPSconfig;
    QPushButton *pbConnect;
    QPushButton *pbConfigure;
    QPushButton *pbDisconnect;
    QLabel *lblMIPSconfigTitle_2;
    QLabel *lblMIPSconnectionNotes;
    QPushButton *pbSearchandConnect;
    QComboBox *comboSystems;
    QLabel *lblSystems;
    QComboBox *comboMIPSnetNames;
    QWidget *Terminal;
    QWidget *ADC;
    QCustomPlot *ADCdata;
    QGroupBox *gbADCdigitizer;
    QLabel *label_194;
    QLineEdit *leSADCCHAN;
    QLineEdit *leSADCRATE;
    QLabel *label_195;
    QLabel *label_196;
    QLabel *label_197;
    QLineEdit *leSADCSAMPS;
    QLineEdit *leSADCVECTS;
    QPushButton *pbADCinit;
    QPushButton *pbADCtrigger;
    QPushButton *pbADCabort;
    QCheckBox *chkADCzoomX;
    QCheckBox *chkADCzoomY;
    QWidget *DigitalIO;
    QGroupBox *gbDigitalOut;
    QCheckBox *chkSDIO_A;
    QCheckBox *chkSDIO_B;
    QCheckBox *chkSDIO_C;
    QCheckBox *chkSDIO_D;
    QCheckBox *chkSDIO_E;
    QCheckBox *chkSDIO_F;
    QCheckBox *chkSDIO_G;
    QCheckBox *chkSDIO_H;
    QCheckBox *chkSDIO_L;
    QCheckBox *chkSDIO_P;
    QCheckBox *chkSDIO_J;
    QCheckBox *chkSDIO_I;
    QCheckBox *chkSDIO_N;
    QCheckBox *chkSDIO_M;
    QCheckBox *chkSDIO_K;
    QCheckBox *chkSDIO_O;
    QGroupBox *gbDigitalIn;
    QCheckBox *chkGDIO_Q;
    QCheckBox *chkGDIO_R;
    QCheckBox *chkGDIO_U;
    QCheckBox *chkGDIO_V;
    QCheckBox *chkGDIO_T;
    QCheckBox *chkGDIO_W;
    QCheckBox *chkGDIO_S;
    QCheckBox *chkGDIO_X;
    QPushButton *pbTrigHigh;
    QPushButton *pbTrigLow;
    QPushButton *pbTrigPulse;
    QPushButton *pbDIOupdate;
    QGroupBox *gbFreqGen;
    QLabel *label_84;
    QLineEdit *leSFREQ;
    QLabel *label_85;
    QLabel *label_86;
    QLineEdit *leSWIDTH;
    QLabel *label_87;
    QLabel *label_88;
    QLineEdit *Burst;
    QPushButton *pbRFgenerate;
    QGroupBox *groupBox;
    QPushButton *pbUPsmall;
    QPushButton *pbUPlarge;
    QPushButton *pbDOWNsmall;
    QPushButton *pbDOWNlarge;
    QPushButton *pbSelect;
    QCheckBox *chkRemoteNav;
    QWidget *DCbias;
    QGroupBox *gbDCbias1;
    QLineEdit *leSDCB_1;
    QLineEdit *leSDCB_2;
    QLineEdit *leSDCB_3;
    QLineEdit *leSDCB_4;
    QLineEdit *leSDCB_5;
    QLineEdit *leSDCB_6;
    QLineEdit *leSDCB_7;
    QLineEdit *leSDCB_8;
    QLineEdit *leGDCBV_1;
    QLineEdit *leGDCBV_2;
    QLineEdit *leGDCBV_3;
    QLineEdit *leGDCBV_4;
    QLineEdit *leGDCBV_5;
    QLineEdit *leGDCBV_6;
    QLineEdit *leGDCBV_7;
    QLineEdit *leGDCBV_8;
    QLabel *label;
    QLabel *label_2;
    QLabel *label_3;
    QLabel *label_4;
    QLabel *label_5;
    QLabel *label_6;
    QLabel *label_7;
    QLabel *label_8;
    QLabel *label_9;
    QLabel *label_10;
    QLabel *label_11;
    QLabel *label_12;
    QLabel *label_13;
    QLineEdit *leGDCMIN_1;
    QLineEdit *leGDCMAX_1;
    QLineEdit *leSDCBOF_1;
    QLabel *label_14;
    QLineEdit *leGRP1;
    QLabel *label_198;
    QLineEdit *leGRP2;
    QLineEdit *leGRP3;
    QLineEdit *leGRP4;
    QLineEdit *leGRP5;
    QLineEdit *leGRP6;
    QLineEdit *leGRP7;
    QLineEdit *leGRP8;
    QPushButton *pbDCbiasUpdate;
    QGroupBox *gbDCbias2;
    QLineEdit *leSDCB_9;
    QLineEdit *leSDCB_10;
    QLineEdit *leSDCB_11;
    QLineEdit *leSDCB_12;
    QLineEdit *leSDCB_13;
    QLineEdit *leSDCB_14;
    QLineEdit *leSDCB_15;
    QLineEdit *leSDCB_16;
    QLineEdit *leGDCBV_9;
    QLineEdit *leGDCBV_10;
    QLineEdit *leGDCBV_11;
    QLineEdit *leGDCBV_12;
    QLineEdit *leGDCBV_13;
    QLineEdit *leGDCBV_14;
    QLineEdit *leGDCBV_15;
    QLineEdit *leGDCBV_16;
    QLabel *label_15;
    QLabel *label_16;
    QLabel *label_17;
    QLabel *label_18;
    QLabel *label_19;
    QLabel *label_20;
    QLabel *label_21;
    QLabel *label_22;
    QLabel *label_23;
    QLabel *label_24;
    QLabel *label_25;
    QLabel *label_26;
    QLabel *label_27;
    QLineEdit *leGDCMIN_9;
    QLineEdit *leGDCMAX_9;
    QLineEdit *leSDCBOF_9;
    QLabel *label_28;
    QLineEdit *leGRP16;
    QLineEdit *leGRP11;
    QLineEdit *leGRP15;
    QLineEdit *leGRP12;
    QLineEdit *leGRP13;
    QLabel *label_199;
    QLineEdit *leGRP14;
    QLineEdit *leGRP9;
    QLineEdit *leGRP10;
    QLineEdit *leGCHAN_DCB;
    QLabel *label_29;
    QCheckBox *chkPowerEnable;
    QCheckBox *chkDCBautoUpdate;
    QGroupBox *gbDCbias3;
    QLineEdit *leSDCB_17;
    QLineEdit *leSDCB_18;
    QLineEdit *leSDCB_19;
    QLineEdit *leSDCB_20;
    QLineEdit *leSDCB_21;
    QLineEdit *leSDCB_22;
    QLineEdit *leSDCB_23;
    QLineEdit *leSDCB_24;
    QLineEdit *leGDCBV_17;
    QLineEdit *leGDCBV_18;
    QLineEdit *leGDCBV_19;
    QLineEdit *leGDCBV_20;
    QLineEdit *leGDCBV_21;
    QLineEdit *leGDCBV_22;
    QLineEdit *leGDCBV_23;
    QLineEdit *leGDCBV_24;
    QLabel *label_124;
    QLabel *label_125;
    QLabel *label_126;
    QLabel *label_127;
    QLabel *label_128;
    QLabel *label_129;
    QLabel *label_130;
    QLabel *label_131;
    QLabel *label_132;
    QLabel *label_162;
    QLabel *label_186;
    QLabel *label_187;
    QLabel *label_188;
    QLineEdit *leGDCMIN_17;
    QLineEdit *leGDCMAX_17;
    QLineEdit *leSDCBOF_17;
    QLabel *label_189;
    QLabel *label_200;
    QLineEdit *leGRP18;
    QLineEdit *leGRP19;
    QLineEdit *leGRP22;
    QLineEdit *leGRP21;
    QLineEdit *leGRP20;
    QLineEdit *leGRP17;
    QLineEdit *leGRP23;
    QLineEdit *leGRP24;
    QWidget *ARB;
    QTabWidget *tabARB;
    QWidget *TwaveMode;
    QGroupBox *gbARBtwaveParms;
    QLineEdit *leSWFREQ;
    QLabel *label_115;
    QLineEdit *leSWFVRNG;
    QLineEdit *leSWFVAUX;
    QLineEdit *leSWFVOFF;
    QLabel *label_116;
    QLabel *label_117;
    QLabel *label_118;
    QLabel *label_119;
    QLabel *label_120;
    QLabel *label_121;
    QLabel *label_122;
    QLabel *label_123;
    QComboBox *comboSWFTYP;
    QRadioButton *rbSWFDIR_FWD;
    QRadioButton *rbSWFDIR_REV;
    QLabel *label_185;
    QComboBox *comboARBmodule;
    QGroupBox *gbDualOutput;
    QLabel *label_190;
    QLineEdit *leSARBOFFA;
    QLabel *label_191;
    QLineEdit *leSARBOFFB;
    QLabel *label_192;
    QLabel *label_193;
    QPushButton *pbEditARBwf;
    QGroupBox *gbARBcompressor;
    QLabel *label_133;
    QGroupBox *gbARBtiming;
    QLabel *label_142;
    QLabel *label_143;
    QLabel *label_144;
    QLabel *label_145;
    QLineEdit *leSARBCTD;
    QLabel *label_146;
    QLineEdit *leSARBCTC;
    QLineEdit *leSARBCTN;
    QLineEdit *leSARBCTNC;
    QLabel *label_147;
    QLabel *label_148;
    QLabel *label_149;
    QPushButton *pbARBforceTrigger;
    QLabel *label_150;
    QLineEdit *leSARBCTBL;
    QGroupBox *gbARBmode;
    QRadioButton *rbSARBCMODE_NORMAL;
    QRadioButton *rbSARBCMODE_COMPRESS;
    QGroupBox *gbARBswitch;
    QRadioButton *rbSARBCSW_CLOSE;
    QRadioButton *rbSARBCSW_OPEN;
    QLineEdit *leSARBCORDER;
    QPushButton *pbARBtwaveUpdate;
    QCheckBox *chkARBautoUpdate;
    QWidget *ARBmode;
    QGroupBox *gbARBmodule1;
    QLineEdit *leSWFREQ_1;
    QLabel *label_89;
    QLineEdit *leSWFVRNG_1;
    QLabel *label_90;
    QLineEdit *leSWFVAUX_1;
    QLabel *label_91;
    QLabel *label_92;
    QLineEdit *leSWFVOFF_1;
    QLineEdit *leSARBBUF_1;
    QLineEdit *leSARBNUM_1;
    QLabel *label_93;
    QLabel *label_94;
    QGroupBox *groupBox_2;
    QLineEdit *leLevel;
    QLabel *label_95;
    QLineEdit *leChan;
    QLabel *label_96;
    QPushButton *pbSetChannel;
    QLabel *label_97;
    QGroupBox *groupBox_3;
    QLabel *label_98;
    QLineEdit *leRangeLevel;
    QLabel *label_99;
    QLabel *label_100;
    QLineEdit *leRangeStart;
    QLineEdit *leRangeStop;
    QLineEdit *leRangeChan;
    QLabel *label_101;
    QPushButton *pbSetRangeChannel;
    QPushButton *pbARBtrigger;
    QPushButton *pbARBupdate;
    QPushButton *pbARBviewLog;
    QPushButton *pbARBclearLog;
    QGroupBox *gbARBmodule2;
    QLineEdit *leSWFREQ_2;
    QLabel *label_102;
    QLineEdit *leSWFVRNG_2;
    QLabel *label_103;
    QLineEdit *leSWFVAUX_2;
    QLabel *label_104;
    QLabel *label_105;
    QLineEdit *leSWFVOFF_2;
    QLineEdit *leSARBBUF_2;
    QLineEdit *leSARBNUM_2;
    QLabel *label_106;
    QLabel *label_107;
    QGroupBox *groupBox_5;
    QLineEdit *leLevel_2;
    QLabel *label_108;
    QLineEdit *leChan_2;
    QLabel *label_109;
    QPushButton *pbSetChannel_2;
    QLabel *label_110;
    QGroupBox *groupBox_6;
    QLabel *label_111;
    QLineEdit *leRangeLevel_2;
    QLabel *label_112;
    QLabel *label_113;
    QLineEdit *leRangeStart_2;
    QLineEdit *leRangeStop_2;
    QLineEdit *leRangeChan_2;
    QLabel *label_114;
    QPushButton *pbSetRangeChannel_2;
    QPushButton *pbARBtrigger_2;
    QWidget *Twave;
    QGroupBox *gbTwaveCH1;
    QLabel *label_37;
    QLabel *label_38;
    QLabel *label_39;
    QLabel *label_40;
    QLabel *label_41;
    QLineEdit *leSTWF_1;
    QLineEdit *leSTWSEQ_1;
    QLineEdit *leSTWPV_1;
    QLineEdit *leSTWG1V_1;
    QLineEdit *leSTWG2V_1;
    QLabel *label_42;
    QLabel *label_43;
    QLabel *label_44;
    QLabel *label_45;
    QRadioButton *rbSTWDIR_1_FWD;
    QRadioButton *rbSTWDIR_1_REV;
    QGroupBox *gbTwaveCH2;
    QLabel *label_55;
    QLabel *label_56;
    QLabel *label_57;
    QLabel *label_58;
    QLabel *label_64;
    QLineEdit *leSTWF_2;
    QLineEdit *leSTWSEQ_2;
    QLineEdit *leSTWPV_2;
    QLineEdit *leSTWG1V_2;
    QLineEdit *leSTWG2V_2;
    QLabel *label_65;
    QLabel *label_66;
    QLabel *label_67;
    QLabel *label_68;
    QRadioButton *rbSTWDIR_2_FWD;
    QRadioButton *rbSTWDIR_2_REV;
    QPushButton *pbTwaveUpdate;
    QTabWidget *tabTWoption;
    QWidget *tabCompressor;
    QGroupBox *gbMode;
    QRadioButton *rbSTWCMODE_NORMAL;
    QRadioButton *rbSTWCMODE_COMPRESS;
    QGroupBox *gbSwitch;
    QRadioButton *rbSTWCSW_CLOSE;
    QRadioButton *rbSTWCSW_OPEN;
    QGroupBox *gbTiming;
    QLabel *label_46;
    QLabel *label_47;
    QLabel *label_48;
    QLabel *label_49;
    QLineEdit *leSTWCTD;
    QLabel *label_52;
    QLineEdit *leSTWCTC;
    QLineEdit *leSTWCTN;
    QLineEdit *leSTWCTNC;
    QLabel *label_53;
    QLabel *label_54;
    QLabel *label_69;
    QLabel *label_50;
    QLineEdit *leSTWCORDER;
    QPushButton *pbTwaveForceTrigger;
    QLineEdit *leSTWCTBL;
    QLabel *label_51;
    QWidget *tabSweep;
    QGroupBox *gbTWsweepCH1;
    QLabel *label_70;
    QLineEdit *leSTWSSTRT_1;
    QLabel *label_71;
    QLabel *label_72;
    QLineEdit *leSTWSSTP_1;
    QLabel *label_73;
    QLineEdit *leSTWSTM_1;
    QLabel *label_74;
    QLabel *label_75;
    QLabel *label_76;
    QLineEdit *leGTWSTA_1;
    QPushButton *pbTWsweepCH1start;
    QPushButton *pbTWsweepCH1stop;
    QLabel *label_134;
    QLineEdit *leSTWSSTRTV_1;
    QLineEdit *leSTWSSTPV_1;
    QLabel *label_135;
    QGroupBox *gbTWsweepCH2;
    QLabel *label_77;
    QLineEdit *leSTWSSTRT_2;
    QLabel *label_78;
    QLabel *label_79;
    QLineEdit *leSTWSSTP_2;
    QLabel *label_80;
    QLineEdit *leSTWSTM_2;
    QLabel *label_81;
    QLabel *label_82;
    QLabel *label_83;
    QLineEdit *leGTWSTA_2;
    QPushButton *pbTWsweepCH2start;
    QPushButton *pbTWsweepCH2stop;
    QLineEdit *leSTWSSTRTV_2;
    QLineEdit *leSTWSSTPV_2;
    QLabel *label_136;
    QLabel *label_137;
    QPushButton *pbTWsweepStart;
    QPushButton *pbTWsweepStop;
    QCheckBox *chkSweepExtTrig;
    QWidget *RFdriver;
    QLabel *label_59;
    QComboBox *comboRFchan;
    QGroupBox *gbRFparms;
    QLabel *label_60;
    QLabel *label_61;
    QLabel *label_62;
    QLabel *label_63;
    QLineEdit *leSRFFRQ;
    QLineEdit *leSRFDRV;
    QLineEdit *leGRFPPVP;
    QLineEdit *leGRFPPVN;
    QLineEdit *leGRFPWR;
    QLabel *label_184;
    QPushButton *pbAutoTune;
    QPushButton *pbAutoRetune;
    QPushButton *pbUpdateRF;
    QWidget *FAIMS;
    QGroupBox *gbFAIMS_RF;
    QCheckBox *chkFMenable;
    QLineEdit *leSFMDRV;
    QLabel *label_153;
    QLabel *label_154;
    QLabel *label_155;
    QLabel *label_156;
    QLineEdit *leGFMPWR;
    QLineEdit *leGFMPV;
    QLineEdit *leGFMNV;
    QLineEdit *leSFMSP;
    QLabel *label_214;
    QRadioButton *rbSFMLOCK_FALSE;
    QRadioButton *rbSFMLOCK_TRUE;
    QPushButton *pbFAIMSautoTune;
    QPushButton *pbFAIMSautoTuneAbort;
    QLabel *lblTuneState;
    QLineEdit *leGFMTSTAT;
    QCheckBox *chkNegTune;
    QGroupBox *gbFAIMS_DC;
    QLineEdit *leSFMBIAS;
    QLabel *label_157;
    QLabel *label_158;
    QLabel *label_159;
    QLineEdit *leGFMBIASA;
    QLabel *label_160;
    QLabel *label_161;
    QLineEdit *leGFMCVA;
    QLineEdit *leSFMCV;
    QLineEdit *leGFMOFFA;
    QLineEdit *leSFMOFF;
    QLabel *lblCurtianV;
    QLineEdit *leSHV_1;
    QLineEdit *leGHVV_1;
    QCheckBox *chkCurtianIndEna;
    QCheckBox *chkCurtianEna;
    QTabWidget *tabScanMode;
    QWidget *CVparking;
    QFrame *frmCVparking;
    QGroupBox *gbCurrentValues;
    QLabel *label_140;
    QLabel *label_141;
    QLabel *label_151;
    QLabel *label_152;
    QLineEdit *leFMstatus;
    QLineEdit *leFMelasped;
    QLineEdit *leFMcvVolts;
    QLineEdit *leFMbiasVolts;
    QLabel *label_163;
    QLineEdit *leFMcompound;
    QLabel *label_139;
    QPushButton *pbFMloadCSV;
    QPushButton *pbFMstart;
    QComboBox *comboFMtrig;
    QTextEdit *textCVparkList;
    QLabel *label_138;
    QWidget *LinearScan;
    QGroupBox *gbLinearScan;
    QLineEdit *leSFMCVSTART;
    QLabel *label_201;
    QLabel *label_202;
    QLabel *label_203;
    QLabel *label_204;
    QLineEdit *leSFMCVEND;
    QLineEdit *leSFMDUR;
    QLineEdit *leSFMLOOPS;
    QLabel *label_205;
    QPushButton *pbFMstartLinear;
    QComboBox *comboFMlinearTrig;
    QLabel *label_212;
    QPushButton *pbFMabortLinear;
    QLabel *label_213;
    QLabel *label_218;
    QComboBox *comboFMlinearTrigOut;
    QWidget *StepScan;
    QGroupBox *gbStepScan;
    QLineEdit *leSFMCVSTART_;
    QLabel *label_206;
    QLabel *label_207;
    QLabel *label_208;
    QLabel *label_209;
    QLineEdit *leSFMCVEND_;
    QLineEdit *leSFMSTPTM;
    QLineEdit *leSFMSTEPS;
    QLineEdit *leSFMLOOPS_;
    QLabel *label_211;
    QLabel *label_210;
    QPushButton *pbFMstartStep;
    QComboBox *comboFMstepTrig;
    QPushButton *pbFMabortStep;
    QLabel *label_215;
    QLabel *label_216;
    QLabel *label_219;
    QComboBox *comboFMstepTrigOut;
    QLineEdit *LogFile;
    QLabel *label_217;
    QPushButton *pbSelectLogFile;
    QWidget *Filament;
    QGroupBox *gpFilament1;
    QCheckBox *chkEnableFilament1;
    QLineEdit *leSFLI_1;
    QLineEdit *leGFLAI_1;
    QLineEdit *leGFLASV_1;
    QLineEdit *leSFLSV_1;
    QLineEdit *leGFLV_1;
    QLineEdit *leGFLPWR_1;
    QLabel *label_164;
    QLabel *label_165;
    QLabel *label_166;
    QLabel *label_167;
    QLabel *label_168;
    QLabel *label_169;
    QLabel *label_170;
    QLabel *label_171;
    QLabel *label_172;
    QLabel *label_173;
    QGroupBox *gpFilament2;
    QCheckBox *chkEnableFilament2;
    QLineEdit *leSFLI_2;
    QLineEdit *leGFLAI_2;
    QLineEdit *leGFLASV_2;
    QLineEdit *leSFLSV_2;
    QLineEdit *leGFLV_2;
    QLineEdit *leGFLPWR_2;
    QLabel *label_174;
    QLabel *label_175;
    QLabel *label_176;
    QLabel *label_177;
    QLabel *label_178;
    QLabel *label_179;
    QLabel *label_180;
    QLabel *label_181;
    QLabel *label_182;
    QLabel *label_183;
    QWidget *PSG;
    QGroupBox *gbPulseSequence;
    QPushButton *pbLoadFromFile;
    QPushButton *pbEditCurrent;
    QPushButton *pbCreateNew;
    QPushButton *pbSaveToFile;
    QGroupBox *gbSequenceGenerationControl;
    QComboBox *comboClock;
    QLabel *label_30;
    QLabel *label_31;
    QComboBox *comboTrigger;
    QLabel *label_32;
    QLineEdit *leExternClock;
    QPushButton *pbDownload;
    QPushButton *pbViewTable;
    QPushButton *pbTrigger;
    QLabel *label_33;
    QLineEdit *leSequenceNumber;
    QCheckBox *chkAutoAdvance;
    QGroupBox *groupBox_4;
    QLabel *label_34;
    QLabel *label_35;
    QLabel *label_36;
    QLineEdit *leTimePoint;
    QLineEdit *leChannel;
    QLineEdit *leValue;
    QPushButton *pbRead;
    QPushButton *pbWrite;
    QPushButton *pbVisPulseSequence;
    QPushButton *pbExitTableMode;
    QMenuBar *menuBar;
    QMenu *menuAbout;
    QMenu *menuTerminal;
    QMenu *menuFile;
    QMenu *menuTools;
    QToolBar *mainToolBar;
    QStatusBar *statusBar;

    void setupUi(QMainWindow *MIPS)
    {
        if (MIPS->objectName().isEmpty())
            MIPS->setObjectName("MIPS");
        MIPS->resize(797, 649);
        actionAbout = new QAction(MIPS);
        actionAbout->setObjectName("actionAbout");
        actionClear = new QAction(MIPS);
        actionClear->setObjectName("actionClear");
        actionOpen = new QAction(MIPS);
        actionOpen->setObjectName("actionOpen");
        actionSave = new QAction(MIPS);
        actionSave->setObjectName("actionSave");
        actionProgram_MIPS = new QAction(MIPS);
        actionProgram_MIPS->setObjectName("actionProgram_MIPS");
        actionSave_current_MIPS_firmware = new QAction(MIPS);
        actionSave_current_MIPS_firmware->setObjectName("actionSave_current_MIPS_firmware");
        actionSet_bootloader_boot_flag = new QAction(MIPS);
        actionSet_bootloader_boot_flag->setObjectName("actionSet_bootloader_boot_flag");
        actionMIPS_commands = new QAction(MIPS);
        actionMIPS_commands->setObjectName("actionMIPS_commands");
        actionHelp = new QAction(MIPS);
        actionHelp->setObjectName("actionHelp");
        actionMessage_repeat = new QAction(MIPS);
        actionMessage_repeat->setObjectName("actionMessage_repeat");
        actionGet_file_from_MIPS = new QAction(MIPS);
        actionGet_file_from_MIPS->setObjectName("actionGet_file_from_MIPS");
        actionSend_file_to_MIPS = new QAction(MIPS);
        actionSend_file_to_MIPS->setObjectName("actionSend_file_to_MIPS");
        actionRead_EEPROM = new QAction(MIPS);
        actionRead_EEPROM->setObjectName("actionRead_EEPROM");
        actionWrite_EEPROM = new QAction(MIPS);
        actionWrite_EEPROM->setObjectName("actionWrite_EEPROM");
        actionRead_ARB_FLASH = new QAction(MIPS);
        actionRead_ARB_FLASH->setObjectName("actionRead_ARB_FLASH");
        actionWrite_ARB_FLASH = new QAction(MIPS);
        actionWrite_ARB_FLASH->setObjectName("actionWrite_ARB_FLASH");
        actionARB_upload = new QAction(MIPS);
        actionARB_upload->setObjectName("actionARB_upload");
        actionSelect = new QAction(MIPS);
        actionSelect->setObjectName("actionSelect");
        actionScripting = new QAction(MIPS);
        actionScripting->setObjectName("actionScripting");
        actionProperties = new QAction(MIPS);
        actionProperties->setObjectName("actionProperties");
        actionProgram_RFmega = new QAction(MIPS);
        actionProgram_RFmega->setObjectName("actionProgram_RFmega");
        centralWidget = new QWidget(MIPS);
        centralWidget->setObjectName("centralWidget");
        tabMIPS = new QTabWidget(centralWidget);
        tabMIPS->setObjectName("tabMIPS");
        tabMIPS->setGeometry(QRect(-5, 15, 796, 586));
        tabMIPS->setTabShape(QTabWidget::Rounded);
        System = new QWidget();
        System->setObjectName("System");
        lblMIPSimage = new QLabel(System);
        lblMIPSimage->setObjectName("lblMIPSimage");
        lblMIPSimage->setGeometry(QRect(20, 30, 261, 121));
        lblMIPSimage->setPixmap(QPixmap(QString::fromUtf8(":/Images/MIPS.jpg")));
        lblMIPSimage->setScaledContents(true);
        lblMIPSconfigTitle = new QLabel(System);
        lblMIPSconfigTitle->setObjectName("lblMIPSconfigTitle");
        lblMIPSconfigTitle->setGeometry(QRect(320, 25, 241, 31));
        lblMIPSconfig = new QLabel(System);
        lblMIPSconfig->setObjectName("lblMIPSconfig");
        lblMIPSconfig->setGeometry(QRect(410, 100, 331, 331));
        lblMIPSconfig->setAlignment(Qt::AlignLeading|Qt::AlignLeft|Qt::AlignTop);
        pbConnect = new QPushButton(System);
        pbConnect->setObjectName("pbConnect");
        pbConnect->setGeometry(QRect(60, 280, 181, 32));
        pbConfigure = new QPushButton(System);
        pbConfigure->setObjectName("pbConfigure");
        pbConfigure->setGeometry(QRect(60, 170, 181, 32));
        pbDisconnect = new QPushButton(System);
        pbDisconnect->setObjectName("pbDisconnect");
        pbDisconnect->setGeometry(QRect(60, 350, 181, 32));
        lblMIPSconfigTitle_2 = new QLabel(System);
        lblMIPSconfigTitle_2->setObjectName("lblMIPSconfigTitle_2");
        lblMIPSconfigTitle_2->setGeometry(QRect(65, 205, 176, 31));
        lblMIPSconnectionNotes = new QLabel(System);
        lblMIPSconnectionNotes->setObjectName("lblMIPSconnectionNotes");
        lblMIPSconnectionNotes->setGeometry(QRect(320, 55, 431, 486));
        QFont font;
        font.setFamilies({QString::fromUtf8("MS Shell Dlg 2")});
        font.setPointSize(8);
        font.setBold(true);
        lblMIPSconnectionNotes->setFont(font);
        lblMIPSconnectionNotes->setMidLineWidth(0);
        lblMIPSconnectionNotes->setWordWrap(true);
        pbSearchandConnect = new QPushButton(System);
        pbSearchandConnect->setObjectName("pbSearchandConnect");
        pbSearchandConnect->setGeometry(QRect(60, 315, 181, 32));
        comboSystems = new QComboBox(System);
        comboSystems->setObjectName("comboSystems");
        comboSystems->setGeometry(QRect(65, 445, 171, 26));
        lblSystems = new QLabel(System);
        lblSystems->setObjectName("lblSystems");
        lblSystems->setGeometry(QRect(70, 390, 191, 46));
        lblSystems->setWordWrap(true);
        comboMIPSnetNames = new QComboBox(System);
        comboMIPSnetNames->setObjectName("comboMIPSnetNames");
        comboMIPSnetNames->setGeometry(QRect(65, 245, 171, 26));
        comboMIPSnetNames->setEditable(true);
        comboMIPSnetNames->setInsertPolicy(QComboBox::InsertAtTop);
        comboMIPSnetNames->setModelColumn(0);
        tabMIPS->addTab(System, QString());
        lblMIPSconfigTitle_2->raise();
        lblMIPSimage->raise();
        lblMIPSconfigTitle->raise();
        lblMIPSconfig->raise();
        pbConnect->raise();
        pbConfigure->raise();
        pbDisconnect->raise();
        lblMIPSconnectionNotes->raise();
        pbSearchandConnect->raise();
        comboSystems->raise();
        lblSystems->raise();
        comboMIPSnetNames->raise();
        Terminal = new QWidget();
        Terminal->setObjectName("Terminal");
        tabMIPS->addTab(Terminal, QString());
        ADC = new QWidget();
        ADC->setObjectName("ADC");
        ADCdata = new QCustomPlot(ADC);
        ADCdata->setObjectName("ADCdata");
        ADCdata->setGeometry(QRect(230, 30, 551, 386));
        gbADCdigitizer = new QGroupBox(ADC);
        gbADCdigitizer->setObjectName("gbADCdigitizer");
        gbADCdigitizer->setGeometry(QRect(10, 20, 211, 231));
        label_194 = new QLabel(gbADCdigitizer);
        label_194->setObjectName("label_194");
        label_194->setGeometry(QRect(10, 40, 61, 16));
        leSADCCHAN = new QLineEdit(gbADCdigitizer);
        leSADCCHAN->setObjectName("leSADCCHAN");
        leSADCCHAN->setGeometry(QRect(90, 40, 101, 21));
        leSADCRATE = new QLineEdit(gbADCdigitizer);
        leSADCRATE->setObjectName("leSADCRATE");
        leSADCRATE->setGeometry(QRect(90, 70, 101, 21));
        label_195 = new QLabel(gbADCdigitizer);
        label_195->setObjectName("label_195");
        label_195->setGeometry(QRect(10, 100, 61, 16));
        label_196 = new QLabel(gbADCdigitizer);
        label_196->setObjectName("label_196");
        label_196->setGeometry(QRect(10, 130, 61, 16));
        label_197 = new QLabel(gbADCdigitizer);
        label_197->setObjectName("label_197");
        label_197->setGeometry(QRect(10, 70, 61, 16));
        leSADCSAMPS = new QLineEdit(gbADCdigitizer);
        leSADCSAMPS->setObjectName("leSADCSAMPS");
        leSADCSAMPS->setGeometry(QRect(90, 100, 101, 21));
        leSADCVECTS = new QLineEdit(gbADCdigitizer);
        leSADCVECTS->setObjectName("leSADCVECTS");
        leSADCVECTS->setGeometry(QRect(90, 130, 101, 21));
        pbADCinit = new QPushButton(gbADCdigitizer);
        pbADCinit->setObjectName("pbADCinit");
        pbADCinit->setGeometry(QRect(0, 160, 101, 32));
        pbADCtrigger = new QPushButton(gbADCdigitizer);
        pbADCtrigger->setObjectName("pbADCtrigger");
        pbADCtrigger->setGeometry(QRect(100, 160, 101, 32));
        pbADCabort = new QPushButton(gbADCdigitizer);
        pbADCabort->setObjectName("pbADCabort");
        pbADCabort->setGeometry(QRect(0, 190, 201, 32));
        chkADCzoomX = new QCheckBox(ADC);
        chkADCzoomX->setObjectName("chkADCzoomX");
        chkADCzoomX->setGeometry(QRect(20, 360, 161, 20));
        chkADCzoomY = new QCheckBox(ADC);
        chkADCzoomY->setObjectName("chkADCzoomY");
        chkADCzoomY->setGeometry(QRect(20, 330, 161, 20));
        tabMIPS->addTab(ADC, QString());
        DigitalIO = new QWidget();
        DigitalIO->setObjectName("DigitalIO");
        gbDigitalOut = new QGroupBox(DigitalIO);
        gbDigitalOut->setObjectName("gbDigitalOut");
        gbDigitalOut->setGeometry(QRect(35, 25, 191, 286));
        chkSDIO_A = new QCheckBox(gbDigitalOut);
        chkSDIO_A->setObjectName("chkSDIO_A");
        chkSDIO_A->setGeometry(QRect(25, 35, 50, 20));
        chkSDIO_A->setIconSize(QSize(31, 31));
        chkSDIO_B = new QCheckBox(gbDigitalOut);
        chkSDIO_B->setObjectName("chkSDIO_B");
        chkSDIO_B->setGeometry(QRect(25, 65, 50, 20));
        chkSDIO_C = new QCheckBox(gbDigitalOut);
        chkSDIO_C->setObjectName("chkSDIO_C");
        chkSDIO_C->setGeometry(QRect(25, 95, 50, 20));
        chkSDIO_D = new QCheckBox(gbDigitalOut);
        chkSDIO_D->setObjectName("chkSDIO_D");
        chkSDIO_D->setGeometry(QRect(25, 125, 50, 20));
        chkSDIO_E = new QCheckBox(gbDigitalOut);
        chkSDIO_E->setObjectName("chkSDIO_E");
        chkSDIO_E->setGeometry(QRect(25, 155, 50, 20));
        chkSDIO_F = new QCheckBox(gbDigitalOut);
        chkSDIO_F->setObjectName("chkSDIO_F");
        chkSDIO_F->setGeometry(QRect(25, 185, 50, 20));
        chkSDIO_G = new QCheckBox(gbDigitalOut);
        chkSDIO_G->setObjectName("chkSDIO_G");
        chkSDIO_G->setGeometry(QRect(25, 215, 50, 20));
        chkSDIO_H = new QCheckBox(gbDigitalOut);
        chkSDIO_H->setObjectName("chkSDIO_H");
        chkSDIO_H->setGeometry(QRect(25, 245, 50, 20));
        chkSDIO_L = new QCheckBox(gbDigitalOut);
        chkSDIO_L->setObjectName("chkSDIO_L");
        chkSDIO_L->setGeometry(QRect(125, 125, 50, 20));
        chkSDIO_P = new QCheckBox(gbDigitalOut);
        chkSDIO_P->setObjectName("chkSDIO_P");
        chkSDIO_P->setGeometry(QRect(125, 245, 50, 20));
        chkSDIO_J = new QCheckBox(gbDigitalOut);
        chkSDIO_J->setObjectName("chkSDIO_J");
        chkSDIO_J->setGeometry(QRect(125, 65, 50, 20));
        chkSDIO_I = new QCheckBox(gbDigitalOut);
        chkSDIO_I->setObjectName("chkSDIO_I");
        chkSDIO_I->setGeometry(QRect(125, 35, 50, 20));
        chkSDIO_N = new QCheckBox(gbDigitalOut);
        chkSDIO_N->setObjectName("chkSDIO_N");
        chkSDIO_N->setGeometry(QRect(125, 185, 50, 20));
        chkSDIO_M = new QCheckBox(gbDigitalOut);
        chkSDIO_M->setObjectName("chkSDIO_M");
        chkSDIO_M->setGeometry(QRect(125, 155, 50, 20));
        chkSDIO_K = new QCheckBox(gbDigitalOut);
        chkSDIO_K->setObjectName("chkSDIO_K");
        chkSDIO_K->setGeometry(QRect(125, 95, 50, 20));
        chkSDIO_O = new QCheckBox(gbDigitalOut);
        chkSDIO_O->setObjectName("chkSDIO_O");
        chkSDIO_O->setGeometry(QRect(125, 215, 50, 20));
        gbDigitalIn = new QGroupBox(DigitalIO);
        gbDigitalIn->setObjectName("gbDigitalIn");
        gbDigitalIn->setGeometry(QRect(300, 25, 166, 286));
        chkGDIO_Q = new QCheckBox(gbDigitalIn);
        chkGDIO_Q->setObjectName("chkGDIO_Q");
        chkGDIO_Q->setEnabled(false);
        chkGDIO_Q->setGeometry(QRect(20, 35, 126, 20));
        QPalette palette;
        QBrush brush(QColor(0, 0, 0, 255));
        brush.setStyle(Qt::SolidPattern);
        palette.setBrush(QPalette::Active, QPalette::WindowText, brush);
        palette.setBrush(QPalette::Active, QPalette::Text, brush);
        QBrush brush1(QColor(0, 0, 0, 128));
        brush1.setStyle(Qt::NoBrush);
#if QT_VERSION >= QT_VERSION_CHECK(5, 12, 0)
        palette.setBrush(QPalette::Active, QPalette::PlaceholderText, brush1);
#endif
        palette.setBrush(QPalette::Inactive, QPalette::WindowText, brush);
        palette.setBrush(QPalette::Inactive, QPalette::Text, brush);
        QBrush brush2(QColor(0, 0, 0, 128));
        brush2.setStyle(Qt::NoBrush);
#if QT_VERSION >= QT_VERSION_CHECK(5, 12, 0)
        palette.setBrush(QPalette::Inactive, QPalette::PlaceholderText, brush2);
#endif
        palette.setBrush(QPalette::Disabled, QPalette::WindowText, brush);
        palette.setBrush(QPalette::Disabled, QPalette::Text, brush);
        QBrush brush3(QColor(0, 0, 0, 128));
        brush3.setStyle(Qt::NoBrush);
#if QT_VERSION >= QT_VERSION_CHECK(5, 12, 0)
        palette.setBrush(QPalette::Disabled, QPalette::PlaceholderText, brush3);
#endif
        chkGDIO_Q->setPalette(palette);
        chkGDIO_Q->setCheckable(true);
        chkGDIO_R = new QCheckBox(gbDigitalIn);
        chkGDIO_R->setObjectName("chkGDIO_R");
        chkGDIO_R->setEnabled(false);
        chkGDIO_R->setGeometry(QRect(20, 65, 126, 20));
        QPalette palette1;
        palette1.setBrush(QPalette::Active, QPalette::WindowText, brush);
        palette1.setBrush(QPalette::Inactive, QPalette::WindowText, brush);
        palette1.setBrush(QPalette::Disabled, QPalette::WindowText, brush);
        chkGDIO_R->setPalette(palette1);
        chkGDIO_R->setCheckable(true);
        chkGDIO_U = new QCheckBox(gbDigitalIn);
        chkGDIO_U->setObjectName("chkGDIO_U");
        chkGDIO_U->setEnabled(false);
        chkGDIO_U->setGeometry(QRect(20, 155, 50, 20));
        QPalette palette2;
        palette2.setBrush(QPalette::Active, QPalette::WindowText, brush);
        palette2.setBrush(QPalette::Inactive, QPalette::WindowText, brush);
        palette2.setBrush(QPalette::Disabled, QPalette::WindowText, brush);
        chkGDIO_U->setPalette(palette2);
        chkGDIO_V = new QCheckBox(gbDigitalIn);
        chkGDIO_V->setObjectName("chkGDIO_V");
        chkGDIO_V->setEnabled(false);
        chkGDIO_V->setGeometry(QRect(20, 185, 50, 20));
        QPalette palette3;
        palette3.setBrush(QPalette::Active, QPalette::WindowText, brush);
        palette3.setBrush(QPalette::Inactive, QPalette::WindowText, brush);
        palette3.setBrush(QPalette::Disabled, QPalette::WindowText, brush);
        chkGDIO_V->setPalette(palette3);
        chkGDIO_T = new QCheckBox(gbDigitalIn);
        chkGDIO_T->setObjectName("chkGDIO_T");
        chkGDIO_T->setEnabled(false);
        chkGDIO_T->setGeometry(QRect(20, 125, 50, 20));
        QPalette palette4;
        palette4.setBrush(QPalette::Active, QPalette::WindowText, brush);
        palette4.setBrush(QPalette::Inactive, QPalette::WindowText, brush);
        palette4.setBrush(QPalette::Disabled, QPalette::WindowText, brush);
        chkGDIO_T->setPalette(palette4);
        chkGDIO_W = new QCheckBox(gbDigitalIn);
        chkGDIO_W->setObjectName("chkGDIO_W");
        chkGDIO_W->setEnabled(false);
        chkGDIO_W->setGeometry(QRect(20, 215, 50, 20));
        QPalette palette5;
        palette5.setBrush(QPalette::Active, QPalette::WindowText, brush);
        palette5.setBrush(QPalette::Inactive, QPalette::WindowText, brush);
        palette5.setBrush(QPalette::Disabled, QPalette::WindowText, brush);
        chkGDIO_W->setPalette(palette5);
        chkGDIO_S = new QCheckBox(gbDigitalIn);
        chkGDIO_S->setObjectName("chkGDIO_S");
        chkGDIO_S->setEnabled(false);
        chkGDIO_S->setGeometry(QRect(20, 95, 50, 20));
        QPalette palette6;
        palette6.setBrush(QPalette::Active, QPalette::WindowText, brush);
        palette6.setBrush(QPalette::Inactive, QPalette::WindowText, brush);
        palette6.setBrush(QPalette::Disabled, QPalette::WindowText, brush);
        chkGDIO_S->setPalette(palette6);
        chkGDIO_X = new QCheckBox(gbDigitalIn);
        chkGDIO_X->setObjectName("chkGDIO_X");
        chkGDIO_X->setEnabled(false);
        chkGDIO_X->setGeometry(QRect(20, 245, 50, 20));
        QPalette palette7;
        palette7.setBrush(QPalette::Active, QPalette::WindowText, brush);
        palette7.setBrush(QPalette::Active, QPalette::Text, brush);
        palette7.setBrush(QPalette::Active, QPalette::ButtonText, brush);
        QBrush brush4(QColor(255, 255, 255, 255));
        brush4.setStyle(Qt::SolidPattern);
        palette7.setBrush(QPalette::Active, QPalette::Base, brush4);
        palette7.setBrush(QPalette::Active, QPalette::HighlightedText, brush);
        QBrush brush5(QColor(0, 0, 0, 128));
        brush5.setStyle(Qt::NoBrush);
#if QT_VERSION >= QT_VERSION_CHECK(5, 12, 0)
        palette7.setBrush(QPalette::Active, QPalette::PlaceholderText, brush5);
#endif
        palette7.setBrush(QPalette::Inactive, QPalette::WindowText, brush);
        palette7.setBrush(QPalette::Inactive, QPalette::Text, brush);
        palette7.setBrush(QPalette::Inactive, QPalette::ButtonText, brush);
        palette7.setBrush(QPalette::Inactive, QPalette::Base, brush4);
        palette7.setBrush(QPalette::Inactive, QPalette::HighlightedText, brush);
        QBrush brush6(QColor(0, 0, 0, 128));
        brush6.setStyle(Qt::NoBrush);
#if QT_VERSION >= QT_VERSION_CHECK(5, 12, 0)
        palette7.setBrush(QPalette::Inactive, QPalette::PlaceholderText, brush6);
#endif
        palette7.setBrush(QPalette::Disabled, QPalette::WindowText, brush);
        palette7.setBrush(QPalette::Disabled, QPalette::Text, brush);
        palette7.setBrush(QPalette::Disabled, QPalette::ButtonText, brush);
        palette7.setBrush(QPalette::Disabled, QPalette::Base, brush4);
        palette7.setBrush(QPalette::Disabled, QPalette::HighlightedText, brush);
        QBrush brush7(QColor(0, 0, 0, 128));
        brush7.setStyle(Qt::NoBrush);
#if QT_VERSION >= QT_VERSION_CHECK(5, 12, 0)
        palette7.setBrush(QPalette::Disabled, QPalette::PlaceholderText, brush7);
#endif
        chkGDIO_X->setPalette(palette7);
        pbTrigHigh = new QPushButton(DigitalIO);
        pbTrigHigh->setObjectName("pbTrigHigh");
        pbTrigHigh->setGeometry(QRect(520, 15, 221, 32));
        pbTrigLow = new QPushButton(DigitalIO);
        pbTrigLow->setObjectName("pbTrigLow");
        pbTrigLow->setGeometry(QRect(520, 50, 221, 32));
        pbTrigPulse = new QPushButton(DigitalIO);
        pbTrigPulse->setObjectName("pbTrigPulse");
        pbTrigPulse->setGeometry(QRect(520, 85, 221, 32));
        pbDIOupdate = new QPushButton(DigitalIO);
        pbDIOupdate->setObjectName("pbDIOupdate");
        pbDIOupdate->setGeometry(QRect(520, 285, 216, 32));
        gbFreqGen = new QGroupBox(DigitalIO);
        gbFreqGen->setObjectName("gbFreqGen");
        gbFreqGen->setGeometry(QRect(35, 325, 701, 106));
        label_84 = new QLabel(gbFreqGen);
        label_84->setObjectName("label_84");
        label_84->setGeometry(QRect(20, 35, 76, 16));
        leSFREQ = new QLineEdit(gbFreqGen);
        leSFREQ->setObjectName("leSFREQ");
        leSFREQ->setGeometry(QRect(115, 35, 113, 21));
        label_85 = new QLabel(gbFreqGen);
        label_85->setObjectName("label_85");
        label_85->setGeometry(QRect(235, 40, 26, 16));
        label_86 = new QLabel(gbFreqGen);
        label_86->setObjectName("label_86");
        label_86->setGeometry(QRect(20, 65, 76, 16));
        leSWIDTH = new QLineEdit(gbFreqGen);
        leSWIDTH->setObjectName("leSWIDTH");
        leSWIDTH->setGeometry(QRect(115, 60, 113, 21));
        label_87 = new QLabel(gbFreqGen);
        label_87->setObjectName("label_87");
        label_87->setGeometry(QRect(235, 65, 36, 16));
        label_88 = new QLabel(gbFreqGen);
        label_88->setObjectName("label_88");
        label_88->setGeometry(QRect(445, 40, 116, 16));
        Burst = new QLineEdit(gbFreqGen);
        Burst->setObjectName("Burst");
        Burst->setGeometry(QRect(565, 35, 113, 21));
        pbRFgenerate = new QPushButton(gbFreqGen);
        pbRFgenerate->setObjectName("pbRFgenerate");
        pbRFgenerate->setGeometry(QRect(560, 65, 113, 32));
        groupBox = new QGroupBox(DigitalIO);
        groupBox->setObjectName("groupBox");
        groupBox->setGeometry(QRect(520, 120, 221, 161));
        pbUPsmall = new QPushButton(groupBox);
        pbUPsmall->setObjectName("pbUPsmall");
        pbUPsmall->setEnabled(false);
        pbUPsmall->setGeometry(QRect(140, 45, 50, 26));
        pbUPlarge = new QPushButton(groupBox);
        pbUPlarge->setObjectName("pbUPlarge");
        pbUPlarge->setEnabled(false);
        pbUPlarge->setGeometry(QRect(140, 20, 50, 26));
        pbDOWNsmall = new QPushButton(groupBox);
        pbDOWNsmall->setObjectName("pbDOWNsmall");
        pbDOWNsmall->setEnabled(false);
        pbDOWNsmall->setGeometry(QRect(140, 105, 50, 26));
        pbDOWNlarge = new QPushButton(groupBox);
        pbDOWNlarge->setObjectName("pbDOWNlarge");
        pbDOWNlarge->setEnabled(false);
        pbDOWNlarge->setGeometry(QRect(140, 130, 50, 26));
        pbSelect = new QPushButton(groupBox);
        pbSelect->setObjectName("pbSelect");
        pbSelect->setEnabled(false);
        pbSelect->setGeometry(QRect(130, 75, 71, 26));
        chkRemoteNav = new QCheckBox(groupBox);
        chkRemoteNav->setObjectName("chkRemoteNav");
        chkRemoteNav->setGeometry(QRect(20, 50, 86, 51));
        tabMIPS->addTab(DigitalIO, QString());
        DCbias = new QWidget();
        DCbias->setObjectName("DCbias");
        gbDCbias1 = new QGroupBox(DCbias);
        gbDCbias1->setObjectName("gbDCbias1");
        gbDCbias1->setEnabled(true);
        gbDCbias1->setGeometry(QRect(10, 60, 241, 426));
        leSDCB_1 = new QLineEdit(gbDCbias1);
        leSDCB_1->setObjectName("leSDCB_1");
        leSDCB_1->setGeometry(QRect(90, 60, 71, 21));
        leSDCB_2 = new QLineEdit(gbDCbias1);
        leSDCB_2->setObjectName("leSDCB_2");
        leSDCB_2->setGeometry(QRect(90, 90, 71, 21));
        leSDCB_3 = new QLineEdit(gbDCbias1);
        leSDCB_3->setObjectName("leSDCB_3");
        leSDCB_3->setGeometry(QRect(90, 120, 71, 21));
        leSDCB_4 = new QLineEdit(gbDCbias1);
        leSDCB_4->setObjectName("leSDCB_4");
        leSDCB_4->setGeometry(QRect(90, 150, 71, 21));
        leSDCB_5 = new QLineEdit(gbDCbias1);
        leSDCB_5->setObjectName("leSDCB_5");
        leSDCB_5->setGeometry(QRect(90, 180, 71, 21));
        leSDCB_6 = new QLineEdit(gbDCbias1);
        leSDCB_6->setObjectName("leSDCB_6");
        leSDCB_6->setGeometry(QRect(90, 210, 71, 21));
        leSDCB_7 = new QLineEdit(gbDCbias1);
        leSDCB_7->setObjectName("leSDCB_7");
        leSDCB_7->setGeometry(QRect(90, 240, 71, 21));
        leSDCB_8 = new QLineEdit(gbDCbias1);
        leSDCB_8->setObjectName("leSDCB_8");
        leSDCB_8->setGeometry(QRect(90, 270, 71, 21));
        leGDCBV_1 = new QLineEdit(gbDCbias1);
        leGDCBV_1->setObjectName("leGDCBV_1");
        leGDCBV_1->setGeometry(QRect(165, 60, 71, 21));
        leGDCBV_1->setReadOnly(true);
        leGDCBV_2 = new QLineEdit(gbDCbias1);
        leGDCBV_2->setObjectName("leGDCBV_2");
        leGDCBV_2->setGeometry(QRect(165, 90, 71, 21));
        leGDCBV_2->setReadOnly(true);
        leGDCBV_3 = new QLineEdit(gbDCbias1);
        leGDCBV_3->setObjectName("leGDCBV_3");
        leGDCBV_3->setGeometry(QRect(165, 120, 71, 21));
        leGDCBV_3->setReadOnly(true);
        leGDCBV_4 = new QLineEdit(gbDCbias1);
        leGDCBV_4->setObjectName("leGDCBV_4");
        leGDCBV_4->setGeometry(QRect(165, 150, 71, 21));
        leGDCBV_4->setReadOnly(true);
        leGDCBV_5 = new QLineEdit(gbDCbias1);
        leGDCBV_5->setObjectName("leGDCBV_5");
        leGDCBV_5->setGeometry(QRect(165, 180, 71, 21));
        leGDCBV_5->setReadOnly(true);
        leGDCBV_6 = new QLineEdit(gbDCbias1);
        leGDCBV_6->setObjectName("leGDCBV_6");
        leGDCBV_6->setGeometry(QRect(165, 210, 71, 21));
        leGDCBV_6->setReadOnly(true);
        leGDCBV_7 = new QLineEdit(gbDCbias1);
        leGDCBV_7->setObjectName("leGDCBV_7");
        leGDCBV_7->setGeometry(QRect(165, 240, 71, 21));
        leGDCBV_7->setReadOnly(true);
        leGDCBV_8 = new QLineEdit(gbDCbias1);
        leGDCBV_8->setObjectName("leGDCBV_8");
        leGDCBV_8->setGeometry(QRect(165, 270, 71, 21));
        leGDCBV_8->setReadOnly(true);
        label = new QLabel(gbDCbias1);
        label->setObjectName("label");
        label->setGeometry(QRect(10, 60, 50, 20));
        label_2 = new QLabel(gbDCbias1);
        label_2->setObjectName("label_2");
        label_2->setGeometry(QRect(10, 90, 50, 20));
        label_3 = new QLabel(gbDCbias1);
        label_3->setObjectName("label_3");
        label_3->setGeometry(QRect(10, 120, 50, 20));
        label_4 = new QLabel(gbDCbias1);
        label_4->setObjectName("label_4");
        label_4->setGeometry(QRect(10, 150, 50, 20));
        label_5 = new QLabel(gbDCbias1);
        label_5->setObjectName("label_5");
        label_5->setGeometry(QRect(10, 180, 50, 20));
        label_6 = new QLabel(gbDCbias1);
        label_6->setObjectName("label_6");
        label_6->setGeometry(QRect(10, 210, 50, 20));
        label_7 = new QLabel(gbDCbias1);
        label_7->setObjectName("label_7");
        label_7->setGeometry(QRect(10, 240, 50, 20));
        label_8 = new QLabel(gbDCbias1);
        label_8->setObjectName("label_8");
        label_8->setGeometry(QRect(10, 270, 50, 20));
        label_9 = new QLabel(gbDCbias1);
        label_9->setObjectName("label_9");
        label_9->setGeometry(QRect(95, 30, 61, 26));
        label_10 = new QLabel(gbDCbias1);
        label_10->setObjectName("label_10");
        label_10->setGeometry(QRect(165, 30, 76, 26));
        label_11 = new QLabel(gbDCbias1);
        label_11->setObjectName("label_11");
        label_11->setGeometry(QRect(10, 335, 231, 26));
        label_12 = new QLabel(gbDCbias1);
        label_12->setObjectName("label_12");
        label_12->setGeometry(QRect(30, 365, 96, 20));
        label_13 = new QLabel(gbDCbias1);
        label_13->setObjectName("label_13");
        label_13->setGeometry(QRect(30, 390, 96, 20));
        leGDCMIN_1 = new QLineEdit(gbDCbias1);
        leGDCMIN_1->setObjectName("leGDCMIN_1");
        leGDCMIN_1->setGeometry(QRect(135, 365, 71, 21));
        leGDCMIN_1->setReadOnly(true);
        leGDCMAX_1 = new QLineEdit(gbDCbias1);
        leGDCMAX_1->setObjectName("leGDCMAX_1");
        leGDCMAX_1->setGeometry(QRect(135, 390, 71, 21));
        leGDCMAX_1->setReadOnly(true);
        leSDCBOF_1 = new QLineEdit(gbDCbias1);
        leSDCBOF_1->setObjectName("leSDCBOF_1");
        leSDCBOF_1->setGeometry(QRect(70, 300, 71, 21));
        label_14 = new QLabel(gbDCbias1);
        label_14->setObjectName("label_14");
        label_14->setGeometry(QRect(10, 300, 61, 20));
        leGRP1 = new QLineEdit(gbDCbias1);
        leGRP1->setObjectName("leGRP1");
        leGRP1->setGeometry(QRect(60, 60, 21, 21));
        label_198 = new QLabel(gbDCbias1);
        label_198->setObjectName("label_198");
        label_198->setGeometry(QRect(45, 30, 41, 26));
        leGRP2 = new QLineEdit(gbDCbias1);
        leGRP2->setObjectName("leGRP2");
        leGRP2->setGeometry(QRect(60, 90, 21, 21));
        leGRP3 = new QLineEdit(gbDCbias1);
        leGRP3->setObjectName("leGRP3");
        leGRP3->setGeometry(QRect(60, 120, 21, 21));
        leGRP4 = new QLineEdit(gbDCbias1);
        leGRP4->setObjectName("leGRP4");
        leGRP4->setGeometry(QRect(60, 150, 21, 21));
        leGRP5 = new QLineEdit(gbDCbias1);
        leGRP5->setObjectName("leGRP5");
        leGRP5->setGeometry(QRect(60, 180, 21, 21));
        leGRP6 = new QLineEdit(gbDCbias1);
        leGRP6->setObjectName("leGRP6");
        leGRP6->setGeometry(QRect(60, 210, 21, 21));
        leGRP7 = new QLineEdit(gbDCbias1);
        leGRP7->setObjectName("leGRP7");
        leGRP7->setGeometry(QRect(60, 240, 21, 21));
        leGRP8 = new QLineEdit(gbDCbias1);
        leGRP8->setObjectName("leGRP8");
        leGRP8->setGeometry(QRect(60, 270, 21, 21));
        pbDCbiasUpdate = new QPushButton(DCbias);
        pbDCbiasUpdate->setObjectName("pbDCbiasUpdate");
        pbDCbiasUpdate->setGeometry(QRect(595, 5, 121, 26));
        gbDCbias2 = new QGroupBox(DCbias);
        gbDCbias2->setObjectName("gbDCbias2");
        gbDCbias2->setEnabled(false);
        gbDCbias2->setGeometry(QRect(275, 60, 241, 426));
        leSDCB_9 = new QLineEdit(gbDCbias2);
        leSDCB_9->setObjectName("leSDCB_9");
        leSDCB_9->setGeometry(QRect(85, 60, 71, 21));
        leSDCB_10 = new QLineEdit(gbDCbias2);
        leSDCB_10->setObjectName("leSDCB_10");
        leSDCB_10->setGeometry(QRect(85, 90, 71, 21));
        leSDCB_11 = new QLineEdit(gbDCbias2);
        leSDCB_11->setObjectName("leSDCB_11");
        leSDCB_11->setGeometry(QRect(85, 120, 71, 21));
        leSDCB_12 = new QLineEdit(gbDCbias2);
        leSDCB_12->setObjectName("leSDCB_12");
        leSDCB_12->setGeometry(QRect(85, 150, 71, 21));
        leSDCB_13 = new QLineEdit(gbDCbias2);
        leSDCB_13->setObjectName("leSDCB_13");
        leSDCB_13->setGeometry(QRect(85, 180, 71, 21));
        leSDCB_14 = new QLineEdit(gbDCbias2);
        leSDCB_14->setObjectName("leSDCB_14");
        leSDCB_14->setGeometry(QRect(85, 210, 71, 21));
        leSDCB_15 = new QLineEdit(gbDCbias2);
        leSDCB_15->setObjectName("leSDCB_15");
        leSDCB_15->setGeometry(QRect(85, 240, 71, 21));
        leSDCB_16 = new QLineEdit(gbDCbias2);
        leSDCB_16->setObjectName("leSDCB_16");
        leSDCB_16->setGeometry(QRect(85, 270, 71, 21));
        leGDCBV_9 = new QLineEdit(gbDCbias2);
        leGDCBV_9->setObjectName("leGDCBV_9");
        leGDCBV_9->setGeometry(QRect(160, 60, 71, 21));
        leGDCBV_9->setReadOnly(true);
        leGDCBV_10 = new QLineEdit(gbDCbias2);
        leGDCBV_10->setObjectName("leGDCBV_10");
        leGDCBV_10->setGeometry(QRect(160, 90, 71, 21));
        leGDCBV_10->setReadOnly(true);
        leGDCBV_11 = new QLineEdit(gbDCbias2);
        leGDCBV_11->setObjectName("leGDCBV_11");
        leGDCBV_11->setGeometry(QRect(160, 120, 71, 21));
        leGDCBV_11->setReadOnly(true);
        leGDCBV_12 = new QLineEdit(gbDCbias2);
        leGDCBV_12->setObjectName("leGDCBV_12");
        leGDCBV_12->setGeometry(QRect(160, 150, 71, 21));
        leGDCBV_12->setReadOnly(true);
        leGDCBV_13 = new QLineEdit(gbDCbias2);
        leGDCBV_13->setObjectName("leGDCBV_13");
        leGDCBV_13->setGeometry(QRect(160, 180, 71, 21));
        leGDCBV_13->setReadOnly(true);
        leGDCBV_14 = new QLineEdit(gbDCbias2);
        leGDCBV_14->setObjectName("leGDCBV_14");
        leGDCBV_14->setGeometry(QRect(160, 210, 71, 21));
        leGDCBV_14->setReadOnly(true);
        leGDCBV_15 = new QLineEdit(gbDCbias2);
        leGDCBV_15->setObjectName("leGDCBV_15");
        leGDCBV_15->setGeometry(QRect(160, 240, 71, 21));
        leGDCBV_15->setReadOnly(true);
        leGDCBV_16 = new QLineEdit(gbDCbias2);
        leGDCBV_16->setObjectName("leGDCBV_16");
        leGDCBV_16->setGeometry(QRect(160, 270, 71, 21));
        leGDCBV_16->setReadOnly(true);
        label_15 = new QLabel(gbDCbias2);
        label_15->setObjectName("label_15");
        label_15->setGeometry(QRect(5, 60, 60, 20));
        label_16 = new QLabel(gbDCbias2);
        label_16->setObjectName("label_16");
        label_16->setGeometry(QRect(5, 90, 60, 20));
        label_17 = new QLabel(gbDCbias2);
        label_17->setObjectName("label_17");
        label_17->setGeometry(QRect(5, 120, 60, 20));
        label_18 = new QLabel(gbDCbias2);
        label_18->setObjectName("label_18");
        label_18->setGeometry(QRect(5, 150, 60, 20));
        label_19 = new QLabel(gbDCbias2);
        label_19->setObjectName("label_19");
        label_19->setGeometry(QRect(5, 180, 60, 20));
        label_20 = new QLabel(gbDCbias2);
        label_20->setObjectName("label_20");
        label_20->setGeometry(QRect(5, 210, 60, 20));
        label_21 = new QLabel(gbDCbias2);
        label_21->setObjectName("label_21");
        label_21->setGeometry(QRect(5, 240, 60, 20));
        label_22 = new QLabel(gbDCbias2);
        label_22->setObjectName("label_22");
        label_22->setGeometry(QRect(5, 270, 60, 20));
        label_23 = new QLabel(gbDCbias2);
        label_23->setObjectName("label_23");
        label_23->setGeometry(QRect(95, 30, 71, 26));
        label_24 = new QLabel(gbDCbias2);
        label_24->setObjectName("label_24");
        label_24->setGeometry(QRect(160, 30, 101, 26));
        label_25 = new QLabel(gbDCbias2);
        label_25->setObjectName("label_25");
        label_25->setGeometry(QRect(10, 330, 221, 26));
        label_26 = new QLabel(gbDCbias2);
        label_26->setObjectName("label_26");
        label_26->setGeometry(QRect(30, 365, 101, 20));
        label_27 = new QLabel(gbDCbias2);
        label_27->setObjectName("label_27");
        label_27->setGeometry(QRect(30, 385, 106, 20));
        leGDCMIN_9 = new QLineEdit(gbDCbias2);
        leGDCMIN_9->setObjectName("leGDCMIN_9");
        leGDCMIN_9->setGeometry(QRect(135, 360, 71, 21));
        leGDCMIN_9->setReadOnly(true);
        leGDCMAX_9 = new QLineEdit(gbDCbias2);
        leGDCMAX_9->setObjectName("leGDCMAX_9");
        leGDCMAX_9->setGeometry(QRect(135, 385, 71, 21));
        leGDCMAX_9->setReadOnly(true);
        leSDCBOF_9 = new QLineEdit(gbDCbias2);
        leSDCBOF_9->setObjectName("leSDCBOF_9");
        leSDCBOF_9->setGeometry(QRect(70, 300, 71, 21));
        label_28 = new QLabel(gbDCbias2);
        label_28->setObjectName("label_28");
        label_28->setGeometry(QRect(5, 300, 66, 21));
        leGRP16 = new QLineEdit(gbDCbias2);
        leGRP16->setObjectName("leGRP16");
        leGRP16->setGeometry(QRect(55, 270, 21, 21));
        leGRP11 = new QLineEdit(gbDCbias2);
        leGRP11->setObjectName("leGRP11");
        leGRP11->setGeometry(QRect(55, 120, 21, 21));
        leGRP15 = new QLineEdit(gbDCbias2);
        leGRP15->setObjectName("leGRP15");
        leGRP15->setGeometry(QRect(55, 240, 21, 21));
        leGRP12 = new QLineEdit(gbDCbias2);
        leGRP12->setObjectName("leGRP12");
        leGRP12->setGeometry(QRect(55, 150, 21, 21));
        leGRP13 = new QLineEdit(gbDCbias2);
        leGRP13->setObjectName("leGRP13");
        leGRP13->setGeometry(QRect(55, 180, 21, 21));
        label_199 = new QLabel(gbDCbias2);
        label_199->setObjectName("label_199");
        label_199->setGeometry(QRect(40, 30, 41, 26));
        leGRP14 = new QLineEdit(gbDCbias2);
        leGRP14->setObjectName("leGRP14");
        leGRP14->setGeometry(QRect(55, 210, 21, 21));
        leGRP9 = new QLineEdit(gbDCbias2);
        leGRP9->setObjectName("leGRP9");
        leGRP9->setGeometry(QRect(55, 60, 21, 21));
        leGRP10 = new QLineEdit(gbDCbias2);
        leGRP10->setObjectName("leGRP10");
        leGRP10->setGeometry(QRect(55, 90, 21, 21));
        leGCHAN_DCB = new QLineEdit(DCbias);
        leGCHAN_DCB->setObjectName("leGCHAN_DCB");
        leGCHAN_DCB->setGeometry(QRect(185, 20, 71, 21));
        leGCHAN_DCB->setReadOnly(true);
        label_29 = new QLabel(DCbias);
        label_29->setObjectName("label_29");
        label_29->setGeometry(QRect(15, 5, 176, 46));
        label_29->setWordWrap(true);
        chkPowerEnable = new QCheckBox(DCbias);
        chkPowerEnable->setObjectName("chkPowerEnable");
        chkPowerEnable->setGeometry(QRect(330, 5, 161, 51));
        chkDCBautoUpdate = new QCheckBox(DCbias);
        chkDCBautoUpdate->setObjectName("chkDCBautoUpdate");
        chkDCBautoUpdate->setGeometry(QRect(600, 35, 121, 20));
        gbDCbias3 = new QGroupBox(DCbias);
        gbDCbias3->setObjectName("gbDCbias3");
        gbDCbias3->setEnabled(false);
        gbDCbias3->setGeometry(QRect(535, 60, 241, 426));
        leSDCB_17 = new QLineEdit(gbDCbias3);
        leSDCB_17->setObjectName("leSDCB_17");
        leSDCB_17->setGeometry(QRect(80, 60, 71, 21));
        leSDCB_18 = new QLineEdit(gbDCbias3);
        leSDCB_18->setObjectName("leSDCB_18");
        leSDCB_18->setGeometry(QRect(80, 90, 71, 21));
        leSDCB_19 = new QLineEdit(gbDCbias3);
        leSDCB_19->setObjectName("leSDCB_19");
        leSDCB_19->setGeometry(QRect(80, 120, 71, 21));
        leSDCB_20 = new QLineEdit(gbDCbias3);
        leSDCB_20->setObjectName("leSDCB_20");
        leSDCB_20->setGeometry(QRect(80, 150, 71, 21));
        leSDCB_21 = new QLineEdit(gbDCbias3);
        leSDCB_21->setObjectName("leSDCB_21");
        leSDCB_21->setGeometry(QRect(80, 180, 71, 21));
        leSDCB_22 = new QLineEdit(gbDCbias3);
        leSDCB_22->setObjectName("leSDCB_22");
        leSDCB_22->setGeometry(QRect(80, 210, 71, 21));
        leSDCB_23 = new QLineEdit(gbDCbias3);
        leSDCB_23->setObjectName("leSDCB_23");
        leSDCB_23->setGeometry(QRect(80, 240, 71, 21));
        leSDCB_24 = new QLineEdit(gbDCbias3);
        leSDCB_24->setObjectName("leSDCB_24");
        leSDCB_24->setGeometry(QRect(80, 270, 71, 21));
        leGDCBV_17 = new QLineEdit(gbDCbias3);
        leGDCBV_17->setObjectName("leGDCBV_17");
        leGDCBV_17->setGeometry(QRect(160, 60, 71, 21));
        leGDCBV_17->setReadOnly(true);
        leGDCBV_18 = new QLineEdit(gbDCbias3);
        leGDCBV_18->setObjectName("leGDCBV_18");
        leGDCBV_18->setGeometry(QRect(160, 90, 71, 21));
        leGDCBV_18->setReadOnly(true);
        leGDCBV_19 = new QLineEdit(gbDCbias3);
        leGDCBV_19->setObjectName("leGDCBV_19");
        leGDCBV_19->setGeometry(QRect(160, 120, 71, 21));
        leGDCBV_19->setReadOnly(true);
        leGDCBV_20 = new QLineEdit(gbDCbias3);
        leGDCBV_20->setObjectName("leGDCBV_20");
        leGDCBV_20->setGeometry(QRect(160, 150, 71, 21));
        leGDCBV_20->setReadOnly(true);
        leGDCBV_21 = new QLineEdit(gbDCbias3);
        leGDCBV_21->setObjectName("leGDCBV_21");
        leGDCBV_21->setGeometry(QRect(160, 180, 71, 21));
        leGDCBV_21->setReadOnly(true);
        leGDCBV_22 = new QLineEdit(gbDCbias3);
        leGDCBV_22->setObjectName("leGDCBV_22");
        leGDCBV_22->setGeometry(QRect(160, 210, 71, 21));
        leGDCBV_22->setReadOnly(true);
        leGDCBV_23 = new QLineEdit(gbDCbias3);
        leGDCBV_23->setObjectName("leGDCBV_23");
        leGDCBV_23->setGeometry(QRect(160, 240, 71, 21));
        leGDCBV_23->setReadOnly(true);
        leGDCBV_24 = new QLineEdit(gbDCbias3);
        leGDCBV_24->setObjectName("leGDCBV_24");
        leGDCBV_24->setGeometry(QRect(160, 270, 71, 21));
        leGDCBV_24->setReadOnly(true);
        label_124 = new QLabel(gbDCbias3);
        label_124->setObjectName("label_124");
        label_124->setGeometry(QRect(5, 60, 60, 20));
        label_125 = new QLabel(gbDCbias3);
        label_125->setObjectName("label_125");
        label_125->setGeometry(QRect(5, 90, 60, 20));
        label_126 = new QLabel(gbDCbias3);
        label_126->setObjectName("label_126");
        label_126->setGeometry(QRect(5, 120, 60, 20));
        label_127 = new QLabel(gbDCbias3);
        label_127->setObjectName("label_127");
        label_127->setGeometry(QRect(5, 150, 60, 20));
        label_128 = new QLabel(gbDCbias3);
        label_128->setObjectName("label_128");
        label_128->setGeometry(QRect(5, 180, 60, 20));
        label_129 = new QLabel(gbDCbias3);
        label_129->setObjectName("label_129");
        label_129->setGeometry(QRect(5, 210, 60, 20));
        label_130 = new QLabel(gbDCbias3);
        label_130->setObjectName("label_130");
        label_130->setGeometry(QRect(5, 240, 60, 20));
        label_131 = new QLabel(gbDCbias3);
        label_131->setObjectName("label_131");
        label_131->setGeometry(QRect(5, 270, 60, 20));
        label_132 = new QLabel(gbDCbias3);
        label_132->setObjectName("label_132");
        label_132->setGeometry(QRect(85, 30, 71, 26));
        label_162 = new QLabel(gbDCbias3);
        label_162->setObjectName("label_162");
        label_162->setGeometry(QRect(160, 30, 101, 26));
        label_186 = new QLabel(gbDCbias3);
        label_186->setObjectName("label_186");
        label_186->setGeometry(QRect(10, 330, 221, 26));
        label_187 = new QLabel(gbDCbias3);
        label_187->setObjectName("label_187");
        label_187->setGeometry(QRect(30, 365, 101, 20));
        label_188 = new QLabel(gbDCbias3);
        label_188->setObjectName("label_188");
        label_188->setGeometry(QRect(30, 385, 106, 20));
        leGDCMIN_17 = new QLineEdit(gbDCbias3);
        leGDCMIN_17->setObjectName("leGDCMIN_17");
        leGDCMIN_17->setGeometry(QRect(135, 360, 71, 21));
        leGDCMIN_17->setReadOnly(true);
        leGDCMAX_17 = new QLineEdit(gbDCbias3);
        leGDCMAX_17->setObjectName("leGDCMAX_17");
        leGDCMAX_17->setGeometry(QRect(135, 385, 71, 21));
        leGDCMAX_17->setReadOnly(true);
        leSDCBOF_17 = new QLineEdit(gbDCbias3);
        leSDCBOF_17->setObjectName("leSDCBOF_17");
        leSDCBOF_17->setGeometry(QRect(70, 300, 71, 21));
        label_189 = new QLabel(gbDCbias3);
        label_189->setObjectName("label_189");
        label_189->setGeometry(QRect(5, 300, 66, 21));
        label_200 = new QLabel(gbDCbias3);
        label_200->setObjectName("label_200");
        label_200->setGeometry(QRect(35, 30, 41, 26));
        leGRP18 = new QLineEdit(gbDCbias3);
        leGRP18->setObjectName("leGRP18");
        leGRP18->setGeometry(QRect(50, 90, 21, 21));
        leGRP19 = new QLineEdit(gbDCbias3);
        leGRP19->setObjectName("leGRP19");
        leGRP19->setGeometry(QRect(50, 120, 21, 21));
        leGRP22 = new QLineEdit(gbDCbias3);
        leGRP22->setObjectName("leGRP22");
        leGRP22->setGeometry(QRect(50, 210, 21, 21));
        leGRP21 = new QLineEdit(gbDCbias3);
        leGRP21->setObjectName("leGRP21");
        leGRP21->setGeometry(QRect(50, 180, 21, 21));
        leGRP20 = new QLineEdit(gbDCbias3);
        leGRP20->setObjectName("leGRP20");
        leGRP20->setGeometry(QRect(50, 150, 21, 21));
        leGRP17 = new QLineEdit(gbDCbias3);
        leGRP17->setObjectName("leGRP17");
        leGRP17->setGeometry(QRect(50, 60, 21, 21));
        leGRP23 = new QLineEdit(gbDCbias3);
        leGRP23->setObjectName("leGRP23");
        leGRP23->setGeometry(QRect(50, 240, 21, 21));
        leGRP24 = new QLineEdit(gbDCbias3);
        leGRP24->setObjectName("leGRP24");
        leGRP24->setGeometry(QRect(50, 270, 21, 21));
        tabMIPS->addTab(DCbias, QString());
        ARB = new QWidget();
        ARB->setObjectName("ARB");
        tabARB = new QTabWidget(ARB);
        tabARB->setObjectName("tabARB");
        tabARB->setGeometry(QRect(15, 5, 761, 541));
        TwaveMode = new QWidget();
        TwaveMode->setObjectName("TwaveMode");
        gbARBtwaveParms = new QGroupBox(TwaveMode);
        gbARBtwaveParms->setObjectName("gbARBtwaveParms");
        gbARBtwaveParms->setGeometry(QRect(50, -5, 496, 221));
        leSWFREQ = new QLineEdit(gbARBtwaveParms);
        leSWFREQ->setObjectName("leSWFREQ");
        leSWFREQ->setGeometry(QRect(105, 59, 113, 21));
        label_115 = new QLabel(gbARBtwaveParms);
        label_115->setObjectName("label_115");
        label_115->setGeometry(QRect(10, 59, 71, 16));
        leSWFVRNG = new QLineEdit(gbARBtwaveParms);
        leSWFVRNG->setObjectName("leSWFVRNG");
        leSWFVRNG->setGeometry(QRect(105, 86, 113, 21));
        leSWFVAUX = new QLineEdit(gbARBtwaveParms);
        leSWFVAUX->setObjectName("leSWFVAUX");
        leSWFVAUX->setGeometry(QRect(105, 113, 113, 21));
        leSWFVOFF = new QLineEdit(gbARBtwaveParms);
        leSWFVOFF->setObjectName("leSWFVOFF");
        leSWFVOFF->setGeometry(QRect(105, 139, 113, 21));
        label_116 = new QLabel(gbARBtwaveParms);
        label_116->setObjectName("label_116");
        label_116->setGeometry(QRect(10, 87, 71, 16));
        label_117 = new QLabel(gbARBtwaveParms);
        label_117->setObjectName("label_117");
        label_117->setGeometry(QRect(10, 117, 71, 16));
        label_118 = new QLabel(gbARBtwaveParms);
        label_118->setObjectName("label_118");
        label_118->setGeometry(QRect(10, 143, 86, 16));
        label_119 = new QLabel(gbARBtwaveParms);
        label_119->setObjectName("label_119");
        label_119->setGeometry(QRect(230, 60, 31, 16));
        label_120 = new QLabel(gbARBtwaveParms);
        label_120->setObjectName("label_120");
        label_120->setGeometry(QRect(230, 88, 31, 16));
        label_121 = new QLabel(gbARBtwaveParms);
        label_121->setObjectName("label_121");
        label_121->setGeometry(QRect(230, 115, 31, 16));
        label_122 = new QLabel(gbARBtwaveParms);
        label_122->setObjectName("label_122");
        label_122->setGeometry(QRect(230, 142, 31, 16));
        label_123 = new QLabel(gbARBtwaveParms);
        label_123->setObjectName("label_123");
        label_123->setGeometry(QRect(10, 169, 86, 16));
        comboSWFTYP = new QComboBox(gbARBtwaveParms);
        comboSWFTYP->setObjectName("comboSWFTYP");
        comboSWFTYP->setGeometry(QRect(105, 164, 116, 26));
        rbSWFDIR_FWD = new QRadioButton(gbARBtwaveParms);
        rbSWFDIR_FWD->setObjectName("rbSWFDIR_FWD");
        rbSWFDIR_FWD->setGeometry(QRect(15, 194, 100, 20));
        rbSWFDIR_REV = new QRadioButton(gbARBtwaveParms);
        rbSWFDIR_REV->setObjectName("rbSWFDIR_REV");
        rbSWFDIR_REV->setGeometry(QRect(160, 194, 81, 20));
        label_185 = new QLabel(gbARBtwaveParms);
        label_185->setObjectName("label_185");
        label_185->setGeometry(QRect(10, 30, 131, 16));
        comboARBmodule = new QComboBox(gbARBtwaveParms);
        comboARBmodule->setObjectName("comboARBmodule");
        comboARBmodule->setGeometry(QRect(166, 28, 91, 26));
        gbDualOutput = new QGroupBox(gbARBtwaveParms);
        gbDualOutput->setObjectName("gbDualOutput");
        gbDualOutput->setEnabled(false);
        gbDualOutput->setGeometry(QRect(275, 35, 206, 126));
        label_190 = new QLabel(gbDualOutput);
        label_190->setObjectName("label_190");
        label_190->setGeometry(QRect(10, 45, 51, 16));
        leSARBOFFA = new QLineEdit(gbDualOutput);
        leSARBOFFA->setObjectName("leSARBOFFA");
        leSARBOFFA->setGeometry(QRect(65, 45, 113, 21));
        label_191 = new QLabel(gbDualOutput);
        label_191->setObjectName("label_191");
        label_191->setGeometry(QRect(10, 80, 51, 16));
        leSARBOFFB = new QLineEdit(gbDualOutput);
        leSARBOFFB->setObjectName("leSARBOFFB");
        leSARBOFFB->setGeometry(QRect(65, 80, 113, 21));
        label_192 = new QLabel(gbDualOutput);
        label_192->setObjectName("label_192");
        label_192->setGeometry(QRect(185, 50, 16, 16));
        label_193 = new QLabel(gbDualOutput);
        label_193->setObjectName("label_193");
        label_193->setGeometry(QRect(185, 80, 16, 16));
        pbEditARBwf = new QPushButton(gbARBtwaveParms);
        pbEditARBwf->setObjectName("pbEditARBwf");
        pbEditARBwf->setGeometry(QRect(300, 175, 146, 32));
        gbARBcompressor = new QGroupBox(TwaveMode);
        gbARBcompressor->setObjectName("gbARBcompressor");
        gbARBcompressor->setGeometry(QRect(50, 220, 651, 281));
        label_133 = new QLabel(gbARBcompressor);
        label_133->setObjectName("label_133");
        label_133->setGeometry(QRect(30, 190, 59, 16));
        gbARBtiming = new QGroupBox(gbARBcompressor);
        gbARBtiming->setObjectName("gbARBtiming");
        gbARBtiming->setGeometry(QRect(320, 30, 301, 131));
        label_142 = new QLabel(gbARBtiming);
        label_142->setObjectName("label_142");
        label_142->setGeometry(QRect(10, 25, 96, 16));
        label_143 = new QLabel(gbARBtiming);
        label_143->setObjectName("label_143");
        label_143->setGeometry(QRect(10, 50, 96, 16));
        label_144 = new QLabel(gbARBtiming);
        label_144->setObjectName("label_144");
        label_144->setGeometry(QRect(10, 75, 96, 16));
        label_145 = new QLabel(gbARBtiming);
        label_145->setObjectName("label_145");
        label_145->setGeometry(QRect(10, 100, 121, 16));
        leSARBCTD = new QLineEdit(gbARBtiming);
        leSARBCTD->setObjectName("leSARBCTD");
        leSARBCTD->setGeometry(QRect(140, 25, 113, 21));
        label_146 = new QLabel(gbARBtiming);
        label_146->setObjectName("label_146");
        label_146->setGeometry(QRect(260, 25, 26, 16));
        leSARBCTC = new QLineEdit(gbARBtiming);
        leSARBCTC->setObjectName("leSARBCTC");
        leSARBCTC->setGeometry(QRect(140, 50, 113, 21));
        leSARBCTN = new QLineEdit(gbARBtiming);
        leSARBCTN->setObjectName("leSARBCTN");
        leSARBCTN->setGeometry(QRect(140, 75, 113, 21));
        leSARBCTNC = new QLineEdit(gbARBtiming);
        leSARBCTNC->setObjectName("leSARBCTNC");
        leSARBCTNC->setGeometry(QRect(140, 100, 113, 21));
        label_147 = new QLabel(gbARBtiming);
        label_147->setObjectName("label_147");
        label_147->setGeometry(QRect(260, 50, 26, 16));
        label_148 = new QLabel(gbARBtiming);
        label_148->setObjectName("label_148");
        label_148->setGeometry(QRect(260, 75, 26, 16));
        label_149 = new QLabel(gbARBtiming);
        label_149->setObjectName("label_149");
        label_149->setGeometry(QRect(260, 100, 26, 16));
        pbARBforceTrigger = new QPushButton(gbARBcompressor);
        pbARBforceTrigger->setObjectName("pbARBforceTrigger");
        pbARBforceTrigger->setGeometry(QRect(320, 180, 311, 32));
        label_150 = new QLabel(gbARBcompressor);
        label_150->setObjectName("label_150");
        label_150->setGeometry(QRect(30, 220, 191, 16));
        leSARBCTBL = new QLineEdit(gbARBcompressor);
        leSARBCTBL->setObjectName("leSARBCTBL");
        leSARBCTBL->setGeometry(QRect(30, 240, 596, 21));
        gbARBmode = new QGroupBox(gbARBcompressor);
        gbARBmode->setObjectName("gbARBmode");
        gbARBmode->setGeometry(QRect(30, 20, 161, 81));
        rbSARBCMODE_NORMAL = new QRadioButton(gbARBmode);
        rbSARBCMODE_NORMAL->setObjectName("rbSARBCMODE_NORMAL");
        rbSARBCMODE_NORMAL->setGeometry(QRect(15, 30, 100, 20));
        rbSARBCMODE_COMPRESS = new QRadioButton(gbARBmode);
        rbSARBCMODE_COMPRESS->setObjectName("rbSARBCMODE_COMPRESS");
        rbSARBCMODE_COMPRESS->setGeometry(QRect(15, 50, 100, 20));
        gbARBswitch = new QGroupBox(gbARBcompressor);
        gbARBswitch->setObjectName("gbARBswitch");
        gbARBswitch->setGeometry(QRect(30, 100, 161, 81));
        rbSARBCSW_CLOSE = new QRadioButton(gbARBswitch);
        rbSARBCSW_CLOSE->setObjectName("rbSARBCSW_CLOSE");
        rbSARBCSW_CLOSE->setGeometry(QRect(15, 30, 100, 20));
        rbSARBCSW_OPEN = new QRadioButton(gbARBswitch);
        rbSARBCSW_OPEN->setObjectName("rbSARBCSW_OPEN");
        rbSARBCSW_OPEN->setGeometry(QRect(15, 50, 100, 20));
        leSARBCORDER = new QLineEdit(gbARBcompressor);
        leSARBCORDER->setObjectName("leSARBCORDER");
        leSARBCORDER->setGeometry(QRect(80, 190, 113, 21));
        pbARBtwaveUpdate = new QPushButton(TwaveMode);
        pbARBtwaveUpdate->setObjectName("pbARBtwaveUpdate");
        pbARBtwaveUpdate->setGeometry(QRect(575, 150, 131, 32));
        chkARBautoUpdate = new QCheckBox(TwaveMode);
        chkARBautoUpdate->setObjectName("chkARBautoUpdate");
        chkARBautoUpdate->setGeometry(QRect(595, 190, 101, 20));
        tabARB->addTab(TwaveMode, QString());
        ARBmode = new QWidget();
        ARBmode->setObjectName("ARBmode");
        gbARBmodule1 = new QGroupBox(ARBmode);
        gbARBmodule1->setObjectName("gbARBmodule1");
        gbARBmodule1->setGeometry(QRect(10, 0, 311, 491));
        leSWFREQ_1 = new QLineEdit(gbARBmodule1);
        leSWFREQ_1->setObjectName("leSWFREQ_1");
        leSWFREQ_1->setGeometry(QRect(120, 30, 131, 21));
        label_89 = new QLabel(gbARBmodule1);
        label_89->setObjectName("label_89");
        label_89->setGeometry(QRect(10, 30, 81, 16));
        leSWFVRNG_1 = new QLineEdit(gbARBmodule1);
        leSWFVRNG_1->setObjectName("leSWFVRNG_1");
        leSWFVRNG_1->setGeometry(QRect(120, 60, 131, 21));
        label_90 = new QLabel(gbARBmodule1);
        label_90->setObjectName("label_90");
        label_90->setGeometry(QRect(10, 60, 111, 16));
        leSWFVAUX_1 = new QLineEdit(gbARBmodule1);
        leSWFVAUX_1->setObjectName("leSWFVAUX_1");
        leSWFVAUX_1->setGeometry(QRect(120, 90, 131, 21));
        label_91 = new QLabel(gbARBmodule1);
        label_91->setObjectName("label_91");
        label_91->setGeometry(QRect(10, 150, 111, 16));
        label_92 = new QLabel(gbARBmodule1);
        label_92->setObjectName("label_92");
        label_92->setGeometry(QRect(10, 180, 111, 16));
        leSWFVOFF_1 = new QLineEdit(gbARBmodule1);
        leSWFVOFF_1->setObjectName("leSWFVOFF_1");
        leSWFVOFF_1->setGeometry(QRect(120, 120, 131, 21));
        leSARBBUF_1 = new QLineEdit(gbARBmodule1);
        leSARBBUF_1->setObjectName("leSARBBUF_1");
        leSARBBUF_1->setGeometry(QRect(120, 150, 131, 21));
        leSARBNUM_1 = new QLineEdit(gbARBmodule1);
        leSARBNUM_1->setObjectName("leSARBNUM_1");
        leSARBNUM_1->setGeometry(QRect(120, 180, 131, 21));
        label_93 = new QLabel(gbARBmodule1);
        label_93->setObjectName("label_93");
        label_93->setGeometry(QRect(10, 90, 111, 16));
        label_94 = new QLabel(gbARBmodule1);
        label_94->setObjectName("label_94");
        label_94->setGeometry(QRect(10, 120, 111, 16));
        groupBox_2 = new QGroupBox(gbARBmodule1);
        groupBox_2->setObjectName("groupBox_2");
        groupBox_2->setGeometry(QRect(10, 200, 281, 111));
        leLevel = new QLineEdit(groupBox_2);
        leLevel->setObjectName("leLevel");
        leLevel->setGeometry(QRect(200, 30, 51, 21));
        label_95 = new QLabel(groupBox_2);
        label_95->setObjectName("label_95");
        label_95->setGeometry(QRect(10, 60, 101, 21));
        label_95->setWordWrap(false);
        leChan = new QLineEdit(groupBox_2);
        leChan->setObjectName("leChan");
        leChan->setGeometry(QRect(110, 60, 51, 21));
        label_96 = new QLabel(groupBox_2);
        label_96->setObjectName("label_96");
        label_96->setGeometry(QRect(20, 30, 181, 20));
        pbSetChannel = new QPushButton(groupBox_2);
        pbSetChannel->setObjectName("pbSetChannel");
        pbSetChannel->setGeometry(QRect(190, 60, 71, 32));
        label_97 = new QLabel(groupBox_2);
        label_97->setObjectName("label_97");
        label_97->setGeometry(QRect(10, 80, 151, 21));
        label_97->setWordWrap(false);
        groupBox_3 = new QGroupBox(gbARBmodule1);
        groupBox_3->setObjectName("groupBox_3");
        groupBox_3->setGeometry(QRect(10, 310, 281, 131));
        label_98 = new QLabel(groupBox_3);
        label_98->setObjectName("label_98");
        label_98->setGeometry(QRect(10, 30, 181, 20));
        leRangeLevel = new QLineEdit(groupBox_3);
        leRangeLevel->setObjectName("leRangeLevel");
        leRangeLevel->setGeometry(QRect(210, 30, 51, 21));
        label_99 = new QLabel(groupBox_3);
        label_99->setObjectName("label_99");
        label_99->setGeometry(QRect(10, 60, 71, 21));
        label_99->setWordWrap(false);
        label_100 = new QLabel(groupBox_3);
        label_100->setObjectName("label_100");
        label_100->setGeometry(QRect(140, 60, 71, 21));
        label_100->setWordWrap(false);
        leRangeStart = new QLineEdit(groupBox_3);
        leRangeStart->setObjectName("leRangeStart");
        leRangeStart->setGeometry(QRect(80, 60, 51, 21));
        leRangeStop = new QLineEdit(groupBox_3);
        leRangeStop->setObjectName("leRangeStop");
        leRangeStop->setGeometry(QRect(210, 60, 51, 21));
        leRangeChan = new QLineEdit(groupBox_3);
        leRangeChan->setObjectName("leRangeChan");
        leRangeChan->setGeometry(QRect(110, 90, 51, 21));
        label_101 = new QLabel(groupBox_3);
        label_101->setObjectName("label_101");
        label_101->setGeometry(QRect(10, 90, 101, 21));
        label_101->setWordWrap(false);
        pbSetRangeChannel = new QPushButton(groupBox_3);
        pbSetRangeChannel->setObjectName("pbSetRangeChannel");
        pbSetRangeChannel->setGeometry(QRect(200, 90, 71, 32));
        pbARBtrigger = new QPushButton(gbARBmodule1);
        pbARBtrigger->setObjectName("pbARBtrigger");
        pbARBtrigger->setGeometry(QRect(60, 450, 171, 32));
        pbARBupdate = new QPushButton(ARBmode);
        pbARBupdate->setObjectName("pbARBupdate");
        pbARBupdate->setGeometry(QRect(335, 460, 91, 32));
        pbARBviewLog = new QPushButton(ARBmode);
        pbARBviewLog->setObjectName("pbARBviewLog");
        pbARBviewLog->setGeometry(QRect(335, 400, 91, 32));
        pbARBclearLog = new QPushButton(ARBmode);
        pbARBclearLog->setObjectName("pbARBclearLog");
        pbARBclearLog->setGeometry(QRect(335, 430, 91, 32));
        gbARBmodule2 = new QGroupBox(ARBmode);
        gbARBmodule2->setObjectName("gbARBmodule2");
        gbARBmodule2->setGeometry(QRect(440, 0, 311, 491));
        leSWFREQ_2 = new QLineEdit(gbARBmodule2);
        leSWFREQ_2->setObjectName("leSWFREQ_2");
        leSWFREQ_2->setGeometry(QRect(120, 30, 131, 21));
        label_102 = new QLabel(gbARBmodule2);
        label_102->setObjectName("label_102");
        label_102->setGeometry(QRect(10, 30, 81, 16));
        leSWFVRNG_2 = new QLineEdit(gbARBmodule2);
        leSWFVRNG_2->setObjectName("leSWFVRNG_2");
        leSWFVRNG_2->setGeometry(QRect(120, 60, 131, 21));
        label_103 = new QLabel(gbARBmodule2);
        label_103->setObjectName("label_103");
        label_103->setGeometry(QRect(10, 60, 111, 16));
        leSWFVAUX_2 = new QLineEdit(gbARBmodule2);
        leSWFVAUX_2->setObjectName("leSWFVAUX_2");
        leSWFVAUX_2->setGeometry(QRect(120, 90, 131, 21));
        label_104 = new QLabel(gbARBmodule2);
        label_104->setObjectName("label_104");
        label_104->setGeometry(QRect(10, 150, 111, 16));
        label_105 = new QLabel(gbARBmodule2);
        label_105->setObjectName("label_105");
        label_105->setGeometry(QRect(10, 180, 111, 16));
        leSWFVOFF_2 = new QLineEdit(gbARBmodule2);
        leSWFVOFF_2->setObjectName("leSWFVOFF_2");
        leSWFVOFF_2->setGeometry(QRect(120, 120, 131, 21));
        leSARBBUF_2 = new QLineEdit(gbARBmodule2);
        leSARBBUF_2->setObjectName("leSARBBUF_2");
        leSARBBUF_2->setGeometry(QRect(120, 150, 131, 21));
        leSARBNUM_2 = new QLineEdit(gbARBmodule2);
        leSARBNUM_2->setObjectName("leSARBNUM_2");
        leSARBNUM_2->setGeometry(QRect(120, 180, 131, 21));
        label_106 = new QLabel(gbARBmodule2);
        label_106->setObjectName("label_106");
        label_106->setGeometry(QRect(10, 90, 111, 16));
        label_107 = new QLabel(gbARBmodule2);
        label_107->setObjectName("label_107");
        label_107->setGeometry(QRect(10, 120, 111, 16));
        groupBox_5 = new QGroupBox(gbARBmodule2);
        groupBox_5->setObjectName("groupBox_5");
        groupBox_5->setGeometry(QRect(10, 200, 281, 111));
        leLevel_2 = new QLineEdit(groupBox_5);
        leLevel_2->setObjectName("leLevel_2");
        leLevel_2->setGeometry(QRect(200, 30, 51, 21));
        label_108 = new QLabel(groupBox_5);
        label_108->setObjectName("label_108");
        label_108->setGeometry(QRect(10, 60, 101, 21));
        label_108->setWordWrap(false);
        leChan_2 = new QLineEdit(groupBox_5);
        leChan_2->setObjectName("leChan_2");
        leChan_2->setGeometry(QRect(110, 60, 51, 21));
        label_109 = new QLabel(groupBox_5);
        label_109->setObjectName("label_109");
        label_109->setGeometry(QRect(20, 30, 181, 20));
        pbSetChannel_2 = new QPushButton(groupBox_5);
        pbSetChannel_2->setObjectName("pbSetChannel_2");
        pbSetChannel_2->setGeometry(QRect(190, 60, 71, 32));
        label_110 = new QLabel(groupBox_5);
        label_110->setObjectName("label_110");
        label_110->setGeometry(QRect(10, 80, 151, 21));
        label_110->setWordWrap(false);
        groupBox_6 = new QGroupBox(gbARBmodule2);
        groupBox_6->setObjectName("groupBox_6");
        groupBox_6->setGeometry(QRect(10, 310, 281, 131));
        label_111 = new QLabel(groupBox_6);
        label_111->setObjectName("label_111");
        label_111->setGeometry(QRect(10, 30, 181, 20));
        leRangeLevel_2 = new QLineEdit(groupBox_6);
        leRangeLevel_2->setObjectName("leRangeLevel_2");
        leRangeLevel_2->setGeometry(QRect(210, 30, 51, 21));
        label_112 = new QLabel(groupBox_6);
        label_112->setObjectName("label_112");
        label_112->setGeometry(QRect(10, 60, 71, 21));
        label_112->setWordWrap(false);
        label_113 = new QLabel(groupBox_6);
        label_113->setObjectName("label_113");
        label_113->setGeometry(QRect(140, 60, 71, 21));
        label_113->setWordWrap(false);
        leRangeStart_2 = new QLineEdit(groupBox_6);
        leRangeStart_2->setObjectName("leRangeStart_2");
        leRangeStart_2->setGeometry(QRect(80, 60, 51, 21));
        leRangeStop_2 = new QLineEdit(groupBox_6);
        leRangeStop_2->setObjectName("leRangeStop_2");
        leRangeStop_2->setGeometry(QRect(210, 60, 51, 21));
        leRangeChan_2 = new QLineEdit(groupBox_6);
        leRangeChan_2->setObjectName("leRangeChan_2");
        leRangeChan_2->setGeometry(QRect(110, 90, 51, 21));
        label_114 = new QLabel(groupBox_6);
        label_114->setObjectName("label_114");
        label_114->setGeometry(QRect(10, 90, 101, 21));
        label_114->setWordWrap(false);
        pbSetRangeChannel_2 = new QPushButton(groupBox_6);
        pbSetRangeChannel_2->setObjectName("pbSetRangeChannel_2");
        pbSetRangeChannel_2->setGeometry(QRect(200, 90, 71, 32));
        pbARBtrigger_2 = new QPushButton(gbARBmodule2);
        pbARBtrigger_2->setObjectName("pbARBtrigger_2");
        pbARBtrigger_2->setGeometry(QRect(60, 450, 171, 32));
        tabARB->addTab(ARBmode, QString());
        tabMIPS->addTab(ARB, QString());
        Twave = new QWidget();
        Twave->setObjectName("Twave");
        gbTwaveCH1 = new QGroupBox(Twave);
        gbTwaveCH1->setObjectName("gbTwaveCH1");
        gbTwaveCH1->setGeometry(QRect(85, 0, 256, 196));
        label_37 = new QLabel(gbTwaveCH1);
        label_37->setObjectName("label_37");
        label_37->setGeometry(QRect(15, 25, 71, 21));
        label_38 = new QLabel(gbTwaveCH1);
        label_38->setObjectName("label_38");
        label_38->setGeometry(QRect(15, 55, 71, 21));
        label_39 = new QLabel(gbTwaveCH1);
        label_39->setObjectName("label_39");
        label_39->setGeometry(QRect(15, 85, 86, 21));
        label_40 = new QLabel(gbTwaveCH1);
        label_40->setObjectName("label_40");
        label_40->setGeometry(QRect(15, 115, 71, 21));
        label_41 = new QLabel(gbTwaveCH1);
        label_41->setObjectName("label_41");
        label_41->setGeometry(QRect(15, 145, 71, 21));
        leSTWF_1 = new QLineEdit(gbTwaveCH1);
        leSTWF_1->setObjectName("leSTWF_1");
        leSTWF_1->setGeometry(QRect(105, 25, 113, 21));
        leSTWSEQ_1 = new QLineEdit(gbTwaveCH1);
        leSTWSEQ_1->setObjectName("leSTWSEQ_1");
        leSTWSEQ_1->setGeometry(QRect(105, 55, 113, 21));
        leSTWPV_1 = new QLineEdit(gbTwaveCH1);
        leSTWPV_1->setObjectName("leSTWPV_1");
        leSTWPV_1->setGeometry(QRect(105, 85, 113, 21));
        leSTWG1V_1 = new QLineEdit(gbTwaveCH1);
        leSTWG1V_1->setObjectName("leSTWG1V_1");
        leSTWG1V_1->setGeometry(QRect(105, 115, 113, 21));
        leSTWG2V_1 = new QLineEdit(gbTwaveCH1);
        leSTWG2V_1->setObjectName("leSTWG2V_1");
        leSTWG2V_1->setGeometry(QRect(105, 145, 113, 21));
        label_42 = new QLabel(gbTwaveCH1);
        label_42->setObjectName("label_42");
        label_42->setGeometry(QRect(225, 25, 26, 21));
        label_43 = new QLabel(gbTwaveCH1);
        label_43->setObjectName("label_43");
        label_43->setGeometry(QRect(225, 115, 26, 21));
        label_44 = new QLabel(gbTwaveCH1);
        label_44->setObjectName("label_44");
        label_44->setGeometry(QRect(225, 85, 26, 21));
        label_45 = new QLabel(gbTwaveCH1);
        label_45->setObjectName("label_45");
        label_45->setGeometry(QRect(225, 145, 26, 21));
        rbSTWDIR_1_FWD = new QRadioButton(gbTwaveCH1);
        rbSTWDIR_1_FWD->setObjectName("rbSTWDIR_1_FWD");
        rbSTWDIR_1_FWD->setGeometry(QRect(30, 170, 100, 20));
        rbSTWDIR_1_REV = new QRadioButton(gbTwaveCH1);
        rbSTWDIR_1_REV->setObjectName("rbSTWDIR_1_REV");
        rbSTWDIR_1_REV->setGeometry(QRect(145, 170, 100, 20));
        gbTwaveCH2 = new QGroupBox(Twave);
        gbTwaveCH2->setObjectName("gbTwaveCH2");
        gbTwaveCH2->setGeometry(QRect(425, 0, 256, 196));
        label_55 = new QLabel(gbTwaveCH2);
        label_55->setObjectName("label_55");
        label_55->setGeometry(QRect(15, 25, 71, 21));
        label_56 = new QLabel(gbTwaveCH2);
        label_56->setObjectName("label_56");
        label_56->setGeometry(QRect(15, 55, 71, 21));
        label_57 = new QLabel(gbTwaveCH2);
        label_57->setObjectName("label_57");
        label_57->setGeometry(QRect(15, 85, 86, 21));
        label_58 = new QLabel(gbTwaveCH2);
        label_58->setObjectName("label_58");
        label_58->setGeometry(QRect(15, 115, 71, 21));
        label_64 = new QLabel(gbTwaveCH2);
        label_64->setObjectName("label_64");
        label_64->setGeometry(QRect(15, 145, 71, 21));
        leSTWF_2 = new QLineEdit(gbTwaveCH2);
        leSTWF_2->setObjectName("leSTWF_2");
        leSTWF_2->setGeometry(QRect(105, 25, 113, 21));
        leSTWSEQ_2 = new QLineEdit(gbTwaveCH2);
        leSTWSEQ_2->setObjectName("leSTWSEQ_2");
        leSTWSEQ_2->setGeometry(QRect(105, 55, 113, 21));
        leSTWPV_2 = new QLineEdit(gbTwaveCH2);
        leSTWPV_2->setObjectName("leSTWPV_2");
        leSTWPV_2->setGeometry(QRect(105, 85, 113, 21));
        leSTWG1V_2 = new QLineEdit(gbTwaveCH2);
        leSTWG1V_2->setObjectName("leSTWG1V_2");
        leSTWG1V_2->setGeometry(QRect(105, 115, 113, 21));
        leSTWG2V_2 = new QLineEdit(gbTwaveCH2);
        leSTWG2V_2->setObjectName("leSTWG2V_2");
        leSTWG2V_2->setGeometry(QRect(105, 145, 113, 21));
        label_65 = new QLabel(gbTwaveCH2);
        label_65->setObjectName("label_65");
        label_65->setGeometry(QRect(225, 25, 26, 21));
        label_66 = new QLabel(gbTwaveCH2);
        label_66->setObjectName("label_66");
        label_66->setGeometry(QRect(225, 115, 26, 21));
        label_67 = new QLabel(gbTwaveCH2);
        label_67->setObjectName("label_67");
        label_67->setGeometry(QRect(225, 85, 26, 21));
        label_68 = new QLabel(gbTwaveCH2);
        label_68->setObjectName("label_68");
        label_68->setGeometry(QRect(225, 145, 26, 21));
        rbSTWDIR_2_FWD = new QRadioButton(gbTwaveCH2);
        rbSTWDIR_2_FWD->setObjectName("rbSTWDIR_2_FWD");
        rbSTWDIR_2_FWD->setGeometry(QRect(30, 170, 100, 20));
        rbSTWDIR_2_REV = new QRadioButton(gbTwaveCH2);
        rbSTWDIR_2_REV->setObjectName("rbSTWDIR_2_REV");
        rbSTWDIR_2_REV->setGeometry(QRect(145, 170, 100, 20));
        pbTwaveUpdate = new QPushButton(Twave);
        pbTwaveUpdate->setObjectName("pbTwaveUpdate");
        pbTwaveUpdate->setGeometry(QRect(330, 515, 113, 32));
        tabTWoption = new QTabWidget(Twave);
        tabTWoption->setObjectName("tabTWoption");
        tabTWoption->setGeometry(QRect(30, 205, 731, 306));
        tabCompressor = new QWidget();
        tabCompressor->setObjectName("tabCompressor");
        gbMode = new QGroupBox(tabCompressor);
        gbMode->setObjectName("gbMode");
        gbMode->setGeometry(QRect(60, 5, 161, 81));
        rbSTWCMODE_NORMAL = new QRadioButton(gbMode);
        rbSTWCMODE_NORMAL->setObjectName("rbSTWCMODE_NORMAL");
        rbSTWCMODE_NORMAL->setGeometry(QRect(15, 30, 100, 20));
        rbSTWCMODE_COMPRESS = new QRadioButton(gbMode);
        rbSTWCMODE_COMPRESS->setObjectName("rbSTWCMODE_COMPRESS");
        rbSTWCMODE_COMPRESS->setGeometry(QRect(15, 50, 100, 20));
        gbSwitch = new QGroupBox(tabCompressor);
        gbSwitch->setObjectName("gbSwitch");
        gbSwitch->setGeometry(QRect(60, 95, 161, 81));
        rbSTWCSW_CLOSE = new QRadioButton(gbSwitch);
        rbSTWCSW_CLOSE->setObjectName("rbSTWCSW_CLOSE");
        rbSTWCSW_CLOSE->setGeometry(QRect(15, 30, 100, 20));
        rbSTWCSW_OPEN = new QRadioButton(gbSwitch);
        rbSTWCSW_OPEN->setObjectName("rbSTWCSW_OPEN");
        rbSTWCSW_OPEN->setGeometry(QRect(15, 50, 100, 20));
        gbTiming = new QGroupBox(tabCompressor);
        gbTiming->setObjectName("gbTiming");
        gbTiming->setGeometry(QRect(360, 15, 301, 131));
        label_46 = new QLabel(gbTiming);
        label_46->setObjectName("label_46");
        label_46->setGeometry(QRect(10, 25, 96, 16));
        label_47 = new QLabel(gbTiming);
        label_47->setObjectName("label_47");
        label_47->setGeometry(QRect(10, 50, 96, 16));
        label_48 = new QLabel(gbTiming);
        label_48->setObjectName("label_48");
        label_48->setGeometry(QRect(10, 75, 96, 16));
        label_49 = new QLabel(gbTiming);
        label_49->setObjectName("label_49");
        label_49->setGeometry(QRect(10, 100, 121, 16));
        leSTWCTD = new QLineEdit(gbTiming);
        leSTWCTD->setObjectName("leSTWCTD");
        leSTWCTD->setGeometry(QRect(140, 25, 113, 21));
        label_52 = new QLabel(gbTiming);
        label_52->setObjectName("label_52");
        label_52->setGeometry(QRect(260, 25, 26, 16));
        leSTWCTC = new QLineEdit(gbTiming);
        leSTWCTC->setObjectName("leSTWCTC");
        leSTWCTC->setGeometry(QRect(140, 50, 113, 21));
        leSTWCTN = new QLineEdit(gbTiming);
        leSTWCTN->setObjectName("leSTWCTN");
        leSTWCTN->setGeometry(QRect(140, 75, 113, 21));
        leSTWCTNC = new QLineEdit(gbTiming);
        leSTWCTNC->setObjectName("leSTWCTNC");
        leSTWCTNC->setGeometry(QRect(140, 100, 113, 21));
        label_53 = new QLabel(gbTiming);
        label_53->setObjectName("label_53");
        label_53->setGeometry(QRect(260, 50, 26, 16));
        label_54 = new QLabel(gbTiming);
        label_54->setObjectName("label_54");
        label_54->setGeometry(QRect(260, 75, 26, 16));
        label_69 = new QLabel(gbTiming);
        label_69->setObjectName("label_69");
        label_69->setGeometry(QRect(260, 100, 26, 16));
        label_50 = new QLabel(tabCompressor);
        label_50->setObjectName("label_50");
        label_50->setGeometry(QRect(65, 190, 59, 16));
        leSTWCORDER = new QLineEdit(tabCompressor);
        leSTWCORDER->setObjectName("leSTWCORDER");
        leSTWCORDER->setGeometry(QRect(135, 190, 113, 21));
        pbTwaveForceTrigger = new QPushButton(tabCompressor);
        pbTwaveForceTrigger->setObjectName("pbTwaveForceTrigger");
        pbTwaveForceTrigger->setGeometry(QRect(355, 170, 311, 32));
        leSTWCTBL = new QLineEdit(tabCompressor);
        leSTWCTBL->setObjectName("leSTWCTBL");
        leSTWCTBL->setGeometry(QRect(65, 240, 596, 21));
        label_51 = new QLabel(tabCompressor);
        label_51->setObjectName("label_51");
        label_51->setGeometry(QRect(65, 220, 191, 16));
        tabTWoption->addTab(tabCompressor, QString());
        tabSweep = new QWidget();
        tabSweep->setObjectName("tabSweep");
        gbTWsweepCH1 = new QGroupBox(tabSweep);
        gbTWsweepCH1->setObjectName("gbTWsweepCH1");
        gbTWsweepCH1->setGeometry(QRect(25, 5, 321, 196));
        label_70 = new QLabel(gbTWsweepCH1);
        label_70->setObjectName("label_70");
        label_70->setGeometry(QRect(10, 35, 59, 16));
        leSTWSSTRT_1 = new QLineEdit(gbTWsweepCH1);
        leSTWSSTRT_1->setObjectName("leSTWSSTRT_1");
        leSTWSSTRT_1->setGeometry(QRect(60, 30, 81, 21));
        label_71 = new QLabel(gbTWsweepCH1);
        label_71->setObjectName("label_71");
        label_71->setGeometry(QRect(290, 35, 36, 16));
        label_72 = new QLabel(gbTWsweepCH1);
        label_72->setObjectName("label_72");
        label_72->setGeometry(QRect(150, 35, 59, 16));
        leSTWSSTP_1 = new QLineEdit(gbTWsweepCH1);
        leSTWSSTP_1->setObjectName("leSTWSSTP_1");
        leSTWSSTP_1->setGeometry(QRect(200, 30, 81, 21));
        label_73 = new QLabel(gbTWsweepCH1);
        label_73->setObjectName("label_73");
        label_73->setGeometry(QRect(290, 65, 36, 16));
        leSTWSTM_1 = new QLineEdit(gbTWsweepCH1);
        leSTWSTM_1->setObjectName("leSTWSTM_1");
        leSTWSTM_1->setGeometry(QRect(110, 90, 136, 21));
        label_74 = new QLabel(gbTWsweepCH1);
        label_74->setObjectName("label_74");
        label_74->setGeometry(QRect(10, 95, 76, 16));
        label_75 = new QLabel(gbTWsweepCH1);
        label_75->setObjectName("label_75");
        label_75->setGeometry(QRect(260, 95, 36, 16));
        label_76 = new QLabel(gbTWsweepCH1);
        label_76->setObjectName("label_76");
        label_76->setGeometry(QRect(10, 125, 56, 16));
        leGTWSTA_1 = new QLineEdit(gbTWsweepCH1);
        leGTWSTA_1->setObjectName("leGTWSTA_1");
        leGTWSTA_1->setGeometry(QRect(110, 120, 136, 21));
        leGTWSTA_1->setReadOnly(true);
        pbTWsweepCH1start = new QPushButton(gbTWsweepCH1);
        pbTWsweepCH1start->setObjectName("pbTWsweepCH1start");
        pbTWsweepCH1start->setGeometry(QRect(15, 155, 113, 32));
        pbTWsweepCH1stop = new QPushButton(gbTWsweepCH1);
        pbTWsweepCH1stop->setObjectName("pbTWsweepCH1stop");
        pbTWsweepCH1stop->setGeometry(QRect(190, 155, 113, 32));
        label_134 = new QLabel(gbTWsweepCH1);
        label_134->setObjectName("label_134");
        label_134->setGeometry(QRect(10, 65, 59, 16));
        leSTWSSTRTV_1 = new QLineEdit(gbTWsweepCH1);
        leSTWSSTRTV_1->setObjectName("leSTWSSTRTV_1");
        leSTWSSTRTV_1->setGeometry(QRect(60, 60, 81, 21));
        leSTWSSTPV_1 = new QLineEdit(gbTWsweepCH1);
        leSTWSSTPV_1->setObjectName("leSTWSSTPV_1");
        leSTWSSTPV_1->setGeometry(QRect(200, 60, 81, 21));
        label_135 = new QLabel(gbTWsweepCH1);
        label_135->setObjectName("label_135");
        label_135->setGeometry(QRect(150, 65, 59, 16));
        gbTWsweepCH2 = new QGroupBox(tabSweep);
        gbTWsweepCH2->setObjectName("gbTWsweepCH2");
        gbTWsweepCH2->setGeometry(QRect(380, 5, 321, 196));
        label_77 = new QLabel(gbTWsweepCH2);
        label_77->setObjectName("label_77");
        label_77->setGeometry(QRect(10, 35, 59, 16));
        leSTWSSTRT_2 = new QLineEdit(gbTWsweepCH2);
        leSTWSSTRT_2->setObjectName("leSTWSSTRT_2");
        leSTWSSTRT_2->setGeometry(QRect(60, 30, 81, 21));
        label_78 = new QLabel(gbTWsweepCH2);
        label_78->setObjectName("label_78");
        label_78->setGeometry(QRect(290, 35, 36, 16));
        label_79 = new QLabel(gbTWsweepCH2);
        label_79->setObjectName("label_79");
        label_79->setGeometry(QRect(150, 35, 59, 16));
        leSTWSSTP_2 = new QLineEdit(gbTWsweepCH2);
        leSTWSSTP_2->setObjectName("leSTWSSTP_2");
        leSTWSSTP_2->setGeometry(QRect(200, 30, 81, 21));
        label_80 = new QLabel(gbTWsweepCH2);
        label_80->setObjectName("label_80");
        label_80->setGeometry(QRect(290, 65, 36, 16));
        leSTWSTM_2 = new QLineEdit(gbTWsweepCH2);
        leSTWSTM_2->setObjectName("leSTWSTM_2");
        leSTWSTM_2->setGeometry(QRect(110, 90, 136, 21));
        label_81 = new QLabel(gbTWsweepCH2);
        label_81->setObjectName("label_81");
        label_81->setGeometry(QRect(10, 95, 76, 16));
        label_82 = new QLabel(gbTWsweepCH2);
        label_82->setObjectName("label_82");
        label_82->setGeometry(QRect(260, 95, 36, 16));
        label_83 = new QLabel(gbTWsweepCH2);
        label_83->setObjectName("label_83");
        label_83->setGeometry(QRect(10, 125, 56, 16));
        leGTWSTA_2 = new QLineEdit(gbTWsweepCH2);
        leGTWSTA_2->setObjectName("leGTWSTA_2");
        leGTWSTA_2->setGeometry(QRect(110, 120, 136, 21));
        leGTWSTA_2->setReadOnly(true);
        pbTWsweepCH2start = new QPushButton(gbTWsweepCH2);
        pbTWsweepCH2start->setObjectName("pbTWsweepCH2start");
        pbTWsweepCH2start->setGeometry(QRect(15, 155, 113, 32));
        pbTWsweepCH2stop = new QPushButton(gbTWsweepCH2);
        pbTWsweepCH2stop->setObjectName("pbTWsweepCH2stop");
        pbTWsweepCH2stop->setGeometry(QRect(190, 155, 113, 32));
        leSTWSSTRTV_2 = new QLineEdit(gbTWsweepCH2);
        leSTWSSTRTV_2->setObjectName("leSTWSSTRTV_2");
        leSTWSSTRTV_2->setGeometry(QRect(60, 60, 81, 21));
        leSTWSSTPV_2 = new QLineEdit(gbTWsweepCH2);
        leSTWSSTPV_2->setObjectName("leSTWSSTPV_2");
        leSTWSSTPV_2->setGeometry(QRect(200, 60, 81, 21));
        label_136 = new QLabel(gbTWsweepCH2);
        label_136->setObjectName("label_136");
        label_136->setGeometry(QRect(10, 65, 59, 16));
        label_137 = new QLabel(gbTWsweepCH2);
        label_137->setObjectName("label_137");
        label_137->setGeometry(QRect(150, 65, 59, 16));
        pbTWsweepStart = new QPushButton(tabSweep);
        pbTWsweepStart->setObjectName("pbTWsweepStart");
        pbTWsweepStart->setGeometry(QRect(170, 220, 166, 32));
        pbTWsweepStop = new QPushButton(tabSweep);
        pbTWsweepStop->setObjectName("pbTWsweepStop");
        pbTWsweepStop->setGeometry(QRect(380, 220, 161, 32));
        chkSweepExtTrig = new QCheckBox(tabSweep);
        chkSweepExtTrig->setObjectName("chkSweepExtTrig");
        chkSweepExtTrig->setGeometry(QRect(25, 250, 236, 20));
        tabTWoption->addTab(tabSweep, QString());
        tabMIPS->addTab(Twave, QString());
        RFdriver = new QWidget();
        RFdriver->setObjectName("RFdriver");
        label_59 = new QLabel(RFdriver);
        label_59->setObjectName("label_59");
        label_59->setGeometry(QRect(65, 20, 196, 31));
        comboRFchan = new QComboBox(RFdriver);
        comboRFchan->setObjectName("comboRFchan");
        comboRFchan->setGeometry(QRect(245, 25, 106, 26));
        gbRFparms = new QGroupBox(RFdriver);
        gbRFparms->setObjectName("gbRFparms");
        gbRFparms->setGeometry(QRect(190, 95, 411, 311));
        label_60 = new QLabel(gbRFparms);
        label_60->setObjectName("label_60");
        label_60->setGeometry(QRect(65, 45, 151, 26));
        label_61 = new QLabel(gbRFparms);
        label_61->setObjectName("label_61");
        label_61->setGeometry(QRect(65, 80, 126, 26));
        label_62 = new QLabel(gbRFparms);
        label_62->setObjectName("label_62");
        label_62->setGeometry(QRect(65, 115, 176, 26));
        label_63 = new QLabel(gbRFparms);
        label_63->setObjectName("label_63");
        label_63->setGeometry(QRect(65, 150, 171, 26));
        leSRFFRQ = new QLineEdit(gbRFparms);
        leSRFFRQ->setObjectName("leSRFFRQ");
        leSRFFRQ->setGeometry(QRect(240, 50, 113, 21));
        leSRFDRV = new QLineEdit(gbRFparms);
        leSRFDRV->setObjectName("leSRFDRV");
        leSRFDRV->setGeometry(QRect(240, 85, 113, 21));
        leGRFPPVP = new QLineEdit(gbRFparms);
        leGRFPPVP->setObjectName("leGRFPPVP");
        leGRFPPVP->setGeometry(QRect(240, 120, 113, 21));
        leGRFPPVP->setReadOnly(true);
        leGRFPPVN = new QLineEdit(gbRFparms);
        leGRFPPVN->setObjectName("leGRFPPVN");
        leGRFPPVN->setGeometry(QRect(240, 155, 113, 21));
        leGRFPPVN->setReadOnly(true);
        leGRFPWR = new QLineEdit(gbRFparms);
        leGRFPWR->setObjectName("leGRFPWR");
        leGRFPWR->setGeometry(QRect(240, 190, 113, 21));
        leGRFPWR->setReadOnly(true);
        label_184 = new QLabel(gbRFparms);
        label_184->setObjectName("label_184");
        label_184->setGeometry(QRect(65, 185, 171, 26));
        pbAutoTune = new QPushButton(gbRFparms);
        pbAutoTune->setObjectName("pbAutoTune");
        pbAutoTune->setGeometry(QRect(45, 250, 113, 32));
        pbAutoRetune = new QPushButton(gbRFparms);
        pbAutoRetune->setObjectName("pbAutoRetune");
        pbAutoRetune->setGeometry(QRect(250, 250, 113, 32));
        pbUpdateRF = new QPushButton(RFdriver);
        pbUpdateRF->setObjectName("pbUpdateRF");
        pbUpdateRF->setGeometry(QRect(640, 370, 113, 32));
        tabMIPS->addTab(RFdriver, QString());
        FAIMS = new QWidget();
        FAIMS->setObjectName("FAIMS");
        gbFAIMS_RF = new QGroupBox(FAIMS);
        gbFAIMS_RF->setObjectName("gbFAIMS_RF");
        gbFAIMS_RF->setGeometry(QRect(50, 0, 331, 271));
        chkFMenable = new QCheckBox(gbFAIMS_RF);
        chkFMenable->setObjectName("chkFMenable");
        chkFMenable->setGeometry(QRect(20, 20, 161, 20));
        leSFMDRV = new QLineEdit(gbFAIMS_RF);
        leSFMDRV->setObjectName("leSFMDRV");
        leSFMDRV->setGeometry(QRect(200, 50, 113, 21));
        label_153 = new QLabel(gbFAIMS_RF);
        label_153->setObjectName("label_153");
        label_153->setGeometry(QRect(20, 50, 161, 16));
        label_154 = new QLabel(gbFAIMS_RF);
        label_154->setObjectName("label_154");
        label_154->setGeometry(QRect(20, 120, 171, 16));
        label_155 = new QLabel(gbFAIMS_RF);
        label_155->setObjectName("label_155");
        label_155->setGeometry(QRect(20, 140, 171, 16));
        label_156 = new QLabel(gbFAIMS_RF);
        label_156->setObjectName("label_156");
        label_156->setGeometry(QRect(20, 160, 171, 16));
        leGFMPWR = new QLineEdit(gbFAIMS_RF);
        leGFMPWR->setObjectName("leGFMPWR");
        leGFMPWR->setGeometry(QRect(200, 120, 113, 21));
        leGFMPWR->setReadOnly(true);
        leGFMPV = new QLineEdit(gbFAIMS_RF);
        leGFMPV->setObjectName("leGFMPV");
        leGFMPV->setGeometry(QRect(200, 140, 113, 21));
        leGFMPV->setReadOnly(true);
        leGFMNV = new QLineEdit(gbFAIMS_RF);
        leGFMNV->setObjectName("leGFMNV");
        leGFMNV->setGeometry(QRect(200, 160, 113, 21));
        leGFMNV->setReadOnly(true);
        leSFMSP = new QLineEdit(gbFAIMS_RF);
        leSFMSP->setObjectName("leSFMSP");
        leSFMSP->setGeometry(QRect(200, 100, 113, 21));
        label_214 = new QLabel(gbFAIMS_RF);
        label_214->setObjectName("label_214");
        label_214->setGeometry(QRect(20, 100, 161, 16));
        rbSFMLOCK_FALSE = new QRadioButton(gbFAIMS_RF);
        rbSFMLOCK_FALSE->setObjectName("rbSFMLOCK_FALSE");
        rbSFMLOCK_FALSE->setGeometry(QRect(20, 70, 100, 20));
        rbSFMLOCK_TRUE = new QRadioButton(gbFAIMS_RF);
        rbSFMLOCK_TRUE->setObjectName("rbSFMLOCK_TRUE");
        rbSFMLOCK_TRUE->setGeometry(QRect(200, 70, 100, 20));
        pbFAIMSautoTune = new QPushButton(gbFAIMS_RF);
        pbFAIMSautoTune->setObjectName("pbFAIMSautoTune");
        pbFAIMSautoTune->setGeometry(QRect(15, 190, 146, 32));
        pbFAIMSautoTuneAbort = new QPushButton(gbFAIMS_RF);
        pbFAIMSautoTuneAbort->setObjectName("pbFAIMSautoTuneAbort");
        pbFAIMSautoTuneAbort->setGeometry(QRect(175, 190, 146, 32));
        lblTuneState = new QLabel(gbFAIMS_RF);
        lblTuneState->setObjectName("lblTuneState");
        lblTuneState->setGeometry(QRect(20, 240, 121, 16));
        leGFMTSTAT = new QLineEdit(gbFAIMS_RF);
        leGFMTSTAT->setObjectName("leGFMTSTAT");
        leGFMTSTAT->setGeometry(QRect(200, 240, 113, 21));
        leGFMTSTAT->setReadOnly(true);
        chkNegTune = new QCheckBox(gbFAIMS_RF);
        chkNegTune->setObjectName("chkNegTune");
        chkNegTune->setGeometry(QRect(20, 220, 161, 20));
        gbFAIMS_DC = new QGroupBox(FAIMS);
        gbFAIMS_DC->setObjectName("gbFAIMS_DC");
        gbFAIMS_DC->setGeometry(QRect(50, 270, 331, 191));
        leSFMBIAS = new QLineEdit(gbFAIMS_DC);
        leSFMBIAS->setObjectName("leSFMBIAS");
        leSFMBIAS->setGeometry(QRect(120, 40, 80, 21));
        label_157 = new QLabel(gbFAIMS_DC);
        label_157->setObjectName("label_157");
        label_157->setGeometry(QRect(20, 40, 59, 16));
        label_158 = new QLabel(gbFAIMS_DC);
        label_158->setObjectName("label_158");
        label_158->setGeometry(QRect(20, 65, 59, 16));
        label_159 = new QLabel(gbFAIMS_DC);
        label_159->setObjectName("label_159");
        label_159->setGeometry(QRect(20, 90, 71, 16));
        leGFMBIASA = new QLineEdit(gbFAIMS_DC);
        leGFMBIASA->setObjectName("leGFMBIASA");
        leGFMBIASA->setGeometry(QRect(230, 40, 80, 21));
        leGFMBIASA->setReadOnly(true);
        label_160 = new QLabel(gbFAIMS_DC);
        label_160->setObjectName("label_160");
        label_160->setGeometry(QRect(130, 20, 71, 16));
        label_161 = new QLabel(gbFAIMS_DC);
        label_161->setObjectName("label_161");
        label_161->setGeometry(QRect(250, 20, 51, 16));
        leGFMCVA = new QLineEdit(gbFAIMS_DC);
        leGFMCVA->setObjectName("leGFMCVA");
        leGFMCVA->setGeometry(QRect(230, 65, 80, 21));
        leGFMCVA->setReadOnly(true);
        leSFMCV = new QLineEdit(gbFAIMS_DC);
        leSFMCV->setObjectName("leSFMCV");
        leSFMCV->setGeometry(QRect(120, 65, 80, 21));
        leGFMOFFA = new QLineEdit(gbFAIMS_DC);
        leGFMOFFA->setObjectName("leGFMOFFA");
        leGFMOFFA->setGeometry(QRect(230, 90, 80, 21));
        leGFMOFFA->setReadOnly(true);
        leSFMOFF = new QLineEdit(gbFAIMS_DC);
        leSFMOFF->setObjectName("leSFMOFF");
        leSFMOFF->setGeometry(QRect(120, 90, 80, 21));
        lblCurtianV = new QLabel(gbFAIMS_DC);
        lblCurtianV->setObjectName("lblCurtianV");
        lblCurtianV->setGeometry(QRect(20, 115, 71, 16));
        leSHV_1 = new QLineEdit(gbFAIMS_DC);
        leSHV_1->setObjectName("leSHV_1");
        leSHV_1->setGeometry(QRect(120, 115, 80, 21));
        leGHVV_1 = new QLineEdit(gbFAIMS_DC);
        leGHVV_1->setObjectName("leGHVV_1");
        leGHVV_1->setGeometry(QRect(230, 115, 80, 21));
        leGHVV_1->setReadOnly(true);
        chkCurtianIndEna = new QCheckBox(gbFAIMS_DC);
        chkCurtianIndEna->setObjectName("chkCurtianIndEna");
        chkCurtianIndEna->setGeometry(QRect(20, 140, 201, 20));
        chkCurtianEna = new QCheckBox(gbFAIMS_DC);
        chkCurtianEna->setObjectName("chkCurtianEna");
        chkCurtianEna->setGeometry(QRect(20, 160, 201, 20));
        tabScanMode = new QTabWidget(FAIMS);
        tabScanMode->setObjectName("tabScanMode");
        tabScanMode->setGeometry(QRect(450, 5, 321, 551));
        CVparking = new QWidget();
        CVparking->setObjectName("CVparking");
        frmCVparking = new QFrame(CVparking);
        frmCVparking->setObjectName("frmCVparking");
        frmCVparking->setGeometry(QRect(0, 0, 311, 506));
        frmCVparking->setFrameShape(QFrame::NoFrame);
        frmCVparking->setFrameShadow(QFrame::Plain);
        frmCVparking->setLineWidth(0);
        gbCurrentValues = new QGroupBox(frmCVparking);
        gbCurrentValues->setObjectName("gbCurrentValues");
        gbCurrentValues->setGeometry(QRect(15, 330, 281, 181));
        label_140 = new QLabel(gbCurrentValues);
        label_140->setObjectName("label_140");
        label_140->setGeometry(QRect(20, 30, 59, 16));
        label_141 = new QLabel(gbCurrentValues);
        label_141->setObjectName("label_141");
        label_141->setGeometry(QRect(20, 60, 81, 16));
        label_151 = new QLabel(gbCurrentValues);
        label_151->setObjectName("label_151");
        label_151->setGeometry(QRect(20, 120, 71, 16));
        label_152 = new QLabel(gbCurrentValues);
        label_152->setObjectName("label_152");
        label_152->setGeometry(QRect(20, 150, 71, 16));
        leFMstatus = new QLineEdit(gbCurrentValues);
        leFMstatus->setObjectName("leFMstatus");
        leFMstatus->setGeometry(QRect(110, 30, 151, 21));
        leFMstatus->setReadOnly(true);
        leFMelasped = new QLineEdit(gbCurrentValues);
        leFMelasped->setObjectName("leFMelasped");
        leFMelasped->setGeometry(QRect(110, 60, 151, 21));
        leFMelasped->setReadOnly(true);
        leFMcvVolts = new QLineEdit(gbCurrentValues);
        leFMcvVolts->setObjectName("leFMcvVolts");
        leFMcvVolts->setGeometry(QRect(110, 120, 151, 21));
        leFMcvVolts->setReadOnly(true);
        leFMbiasVolts = new QLineEdit(gbCurrentValues);
        leFMbiasVolts->setObjectName("leFMbiasVolts");
        leFMbiasVolts->setGeometry(QRect(110, 150, 151, 21));
        leFMbiasVolts->setReadOnly(true);
        label_163 = new QLabel(gbCurrentValues);
        label_163->setObjectName("label_163");
        label_163->setGeometry(QRect(20, 90, 71, 16));
        leFMcompound = new QLineEdit(gbCurrentValues);
        leFMcompound->setObjectName("leFMcompound");
        leFMcompound->setGeometry(QRect(110, 90, 151, 21));
        leFMcompound->setReadOnly(true);
        label_139 = new QLabel(frmCVparking);
        label_139->setObjectName("label_139");
        label_139->setGeometry(QRect(45, 265, 111, 16));
        pbFMloadCSV = new QPushButton(frmCVparking);
        pbFMloadCSV->setObjectName("pbFMloadCSV");
        pbFMloadCSV->setGeometry(QRect(55, 225, 201, 32));
        pbFMstart = new QPushButton(frmCVparking);
        pbFMstart->setObjectName("pbFMstart");
        pbFMstart->setGeometry(QRect(55, 295, 201, 32));
        comboFMtrig = new QComboBox(frmCVparking);
        comboFMtrig->setObjectName("comboFMtrig");
        comboFMtrig->setGeometry(QRect(165, 260, 121, 26));
        textCVparkList = new QTextEdit(frmCVparking);
        textCVparkList->setObjectName("textCVparkList");
        textCVparkList->setGeometry(QRect(35, 40, 251, 181));
        textCVparkList->setLineWrapMode(QTextEdit::NoWrap);
        label_138 = new QLabel(frmCVparking);
        label_138->setObjectName("label_138");
        label_138->setGeometry(QRect(35, 0, 251, 41));
        label_138->setWordWrap(true);
        tabScanMode->addTab(CVparking, QString());
        LinearScan = new QWidget();
        LinearScan->setObjectName("LinearScan");
        gbLinearScan = new QGroupBox(LinearScan);
        gbLinearScan->setObjectName("gbLinearScan");
        gbLinearScan->setGeometry(QRect(20, 175, 276, 141));
        leSFMCVSTART = new QLineEdit(gbLinearScan);
        leSFMCVSTART->setObjectName("leSFMCVSTART");
        leSFMCVSTART->setGeometry(QRect(145, 30, 113, 21));
        label_201 = new QLabel(gbLinearScan);
        label_201->setObjectName("label_201");
        label_201->setGeometry(QRect(15, 30, 60, 16));
        label_202 = new QLabel(gbLinearScan);
        label_202->setObjectName("label_202");
        label_202->setGeometry(QRect(15, 55, 60, 16));
        label_203 = new QLabel(gbLinearScan);
        label_203->setObjectName("label_203");
        label_203->setGeometry(QRect(15, 80, 106, 16));
        label_204 = new QLabel(gbLinearScan);
        label_204->setObjectName("label_204");
        label_204->setGeometry(QRect(15, 105, 111, 16));
        leSFMCVEND = new QLineEdit(gbLinearScan);
        leSFMCVEND->setObjectName("leSFMCVEND");
        leSFMCVEND->setGeometry(QRect(145, 55, 113, 21));
        leSFMDUR = new QLineEdit(gbLinearScan);
        leSFMDUR->setObjectName("leSFMDUR");
        leSFMDUR->setGeometry(QRect(145, 80, 113, 21));
        leSFMLOOPS = new QLineEdit(gbLinearScan);
        leSFMLOOPS->setObjectName("leSFMLOOPS");
        leSFMLOOPS->setGeometry(QRect(145, 105, 113, 21));
        label_205 = new QLabel(LinearScan);
        label_205->setObjectName("label_205");
        label_205->setGeometry(QRect(20, 395, 111, 16));
        pbFMstartLinear = new QPushButton(LinearScan);
        pbFMstartLinear->setObjectName("pbFMstartLinear");
        pbFMstartLinear->setGeometry(QRect(55, 455, 201, 32));
        comboFMlinearTrig = new QComboBox(LinearScan);
        comboFMlinearTrig->setObjectName("comboFMlinearTrig");
        comboFMlinearTrig->setGeometry(QRect(150, 390, 121, 26));
        label_212 = new QLabel(LinearScan);
        label_212->setObjectName("label_212");
        label_212->setGeometry(QRect(15, -5, 291, 186));
        label_212->setMidLineWidth(0);
        label_212->setWordWrap(true);
        pbFMabortLinear = new QPushButton(LinearScan);
        pbFMabortLinear->setObjectName("pbFMabortLinear");
        pbFMabortLinear->setGeometry(QRect(55, 490, 201, 32));
        label_213 = new QLabel(LinearScan);
        label_213->setObjectName("label_213");
        label_213->setGeometry(QRect(15, 320, 286, 76));
        label_213->setWordWrap(true);
        label_218 = new QLabel(LinearScan);
        label_218->setObjectName("label_218");
        label_218->setGeometry(QRect(20, 425, 111, 16));
        comboFMlinearTrigOut = new QComboBox(LinearScan);
        comboFMlinearTrigOut->setObjectName("comboFMlinearTrigOut");
        comboFMlinearTrigOut->setGeometry(QRect(150, 420, 121, 26));
        tabScanMode->addTab(LinearScan, QString());
        StepScan = new QWidget();
        StepScan->setObjectName("StepScan");
        gbStepScan = new QGroupBox(StepScan);
        gbStepScan->setObjectName("gbStepScan");
        gbStepScan->setGeometry(QRect(20, 175, 276, 161));
        leSFMCVSTART_ = new QLineEdit(gbStepScan);
        leSFMCVSTART_->setObjectName("leSFMCVSTART_");
        leSFMCVSTART_->setGeometry(QRect(155, 30, 113, 21));
        label_206 = new QLabel(gbStepScan);
        label_206->setObjectName("label_206");
        label_206->setGeometry(QRect(10, 35, 60, 16));
        label_207 = new QLabel(gbStepScan);
        label_207->setObjectName("label_207");
        label_207->setGeometry(QRect(10, 55, 60, 16));
        label_208 = new QLabel(gbStepScan);
        label_208->setObjectName("label_208");
        label_208->setGeometry(QRect(10, 80, 141, 16));
        label_209 = new QLabel(gbStepScan);
        label_209->setObjectName("label_209");
        label_209->setGeometry(QRect(10, 105, 141, 16));
        leSFMCVEND_ = new QLineEdit(gbStepScan);
        leSFMCVEND_->setObjectName("leSFMCVEND_");
        leSFMCVEND_->setGeometry(QRect(155, 55, 113, 21));
        leSFMSTPTM = new QLineEdit(gbStepScan);
        leSFMSTPTM->setObjectName("leSFMSTPTM");
        leSFMSTPTM->setGeometry(QRect(155, 80, 113, 21));
        leSFMSTEPS = new QLineEdit(gbStepScan);
        leSFMSTEPS->setObjectName("leSFMSTEPS");
        leSFMSTEPS->setGeometry(QRect(155, 105, 113, 21));
        leSFMLOOPS_ = new QLineEdit(gbStepScan);
        leSFMLOOPS_->setObjectName("leSFMLOOPS_");
        leSFMLOOPS_->setGeometry(QRect(155, 130, 113, 21));
        label_211 = new QLabel(gbStepScan);
        label_211->setObjectName("label_211");
        label_211->setGeometry(QRect(10, 130, 141, 16));
        label_210 = new QLabel(StepScan);
        label_210->setObjectName("label_210");
        label_210->setGeometry(QRect(30, 405, 111, 16));
        pbFMstartStep = new QPushButton(StepScan);
        pbFMstartStep->setObjectName("pbFMstartStep");
        pbFMstartStep->setGeometry(QRect(50, 460, 201, 32));
        comboFMstepTrig = new QComboBox(StepScan);
        comboFMstepTrig->setObjectName("comboFMstepTrig");
        comboFMstepTrig->setGeometry(QRect(160, 400, 121, 26));
        pbFMabortStep = new QPushButton(StepScan);
        pbFMabortStep->setObjectName("pbFMabortStep");
        pbFMabortStep->setGeometry(QRect(50, 495, 201, 32));
        label_215 = new QLabel(StepScan);
        label_215->setObjectName("label_215");
        label_215->setGeometry(QRect(15, -5, 291, 186));
        label_215->setMidLineWidth(0);
        label_215->setWordWrap(true);
        label_216 = new QLabel(StepScan);
        label_216->setObjectName("label_216");
        label_216->setGeometry(QRect(15, 335, 286, 76));
        label_216->setWordWrap(true);
        label_219 = new QLabel(StepScan);
        label_219->setObjectName("label_219");
        label_219->setGeometry(QRect(30, 435, 111, 16));
        comboFMstepTrigOut = new QComboBox(StepScan);
        comboFMstepTrigOut->setObjectName("comboFMstepTrigOut");
        comboFMstepTrigOut->setGeometry(QRect(160, 430, 121, 26));
        tabScanMode->addTab(StepScan, QString());
        LogFile = new QLineEdit(FAIMS);
        LogFile->setObjectName("LogFile");
        LogFile->setGeometry(QRect(70, 515, 331, 21));
        label_217 = new QLabel(FAIMS);
        label_217->setObjectName("label_217");
        label_217->setGeometry(QRect(10, 515, 59, 16));
        pbSelectLogFile = new QPushButton(FAIMS);
        pbSelectLogFile->setObjectName("pbSelectLogFile");
        pbSelectLogFile->setGeometry(QRect(10, 475, 161, 32));
        tabMIPS->addTab(FAIMS, QString());
        Filament = new QWidget();
        Filament->setObjectName("Filament");
        gpFilament1 = new QGroupBox(Filament);
        gpFilament1->setObjectName("gpFilament1");
        gpFilament1->setGeometry(QRect(40, 30, 311, 211));
        chkEnableFilament1 = new QCheckBox(gpFilament1);
        chkEnableFilament1->setObjectName("chkEnableFilament1");
        chkEnableFilament1->setGeometry(QRect(20, 30, 86, 20));
        leSFLI_1 = new QLineEdit(gpFilament1);
        leSFLI_1->setObjectName("leSFLI_1");
        leSFLI_1->setGeometry(QRect(90, 80, 80, 21));
        leGFLAI_1 = new QLineEdit(gpFilament1);
        leGFLAI_1->setObjectName("leGFLAI_1");
        leGFLAI_1->setGeometry(QRect(190, 80, 80, 21));
        leGFLAI_1->setReadOnly(true);
        leGFLASV_1 = new QLineEdit(gpFilament1);
        leGFLASV_1->setObjectName("leGFLASV_1");
        leGFLASV_1->setGeometry(QRect(190, 110, 80, 21));
        leGFLASV_1->setReadOnly(true);
        leSFLSV_1 = new QLineEdit(gpFilament1);
        leSFLSV_1->setObjectName("leSFLSV_1");
        leSFLSV_1->setGeometry(QRect(90, 110, 80, 21));
        leGFLV_1 = new QLineEdit(gpFilament1);
        leGFLV_1->setObjectName("leGFLV_1");
        leGFLV_1->setGeometry(QRect(189, 140, 80, 21));
        leGFLV_1->setReadOnly(true);
        leGFLPWR_1 = new QLineEdit(gpFilament1);
        leGFLPWR_1->setObjectName("leGFLPWR_1");
        leGFLPWR_1->setGeometry(QRect(189, 170, 80, 21));
        leGFLPWR_1->setReadOnly(true);
        label_164 = new QLabel(gpFilament1);
        label_164->setObjectName("label_164");
        label_164->setGeometry(QRect(20, 80, 61, 16));
        label_165 = new QLabel(gpFilament1);
        label_165->setObjectName("label_165");
        label_165->setGeometry(QRect(100, 60, 51, 16));
        label_166 = new QLabel(gpFilament1);
        label_166->setObjectName("label_166");
        label_166->setGeometry(QRect(210, 60, 41, 16));
        label_167 = new QLabel(gpFilament1);
        label_167->setObjectName("label_167");
        label_167->setGeometry(QRect(21, 112, 61, 16));
        label_168 = new QLabel(gpFilament1);
        label_168->setObjectName("label_168");
        label_168->setGeometry(QRect(119, 142, 71, 16));
        label_169 = new QLabel(gpFilament1);
        label_169->setObjectName("label_169");
        label_169->setGeometry(QRect(120, 172, 61, 16));
        label_170 = new QLabel(gpFilament1);
        label_170->setObjectName("label_170");
        label_170->setGeometry(QRect(278, 81, 21, 16));
        label_171 = new QLabel(gpFilament1);
        label_171->setObjectName("label_171");
        label_171->setGeometry(QRect(279, 112, 21, 16));
        label_172 = new QLabel(gpFilament1);
        label_172->setObjectName("label_172");
        label_172->setGeometry(QRect(278, 142, 21, 16));
        label_173 = new QLabel(gpFilament1);
        label_173->setObjectName("label_173");
        label_173->setGeometry(QRect(278, 172, 21, 16));
        gpFilament2 = new QGroupBox(Filament);
        gpFilament2->setObjectName("gpFilament2");
        gpFilament2->setGeometry(QRect(440, 30, 311, 211));
        chkEnableFilament2 = new QCheckBox(gpFilament2);
        chkEnableFilament2->setObjectName("chkEnableFilament2");
        chkEnableFilament2->setGeometry(QRect(20, 30, 86, 20));
        leSFLI_2 = new QLineEdit(gpFilament2);
        leSFLI_2->setObjectName("leSFLI_2");
        leSFLI_2->setGeometry(QRect(90, 80, 80, 21));
        leGFLAI_2 = new QLineEdit(gpFilament2);
        leGFLAI_2->setObjectName("leGFLAI_2");
        leGFLAI_2->setGeometry(QRect(190, 80, 80, 21));
        leGFLAI_2->setReadOnly(true);
        leGFLASV_2 = new QLineEdit(gpFilament2);
        leGFLASV_2->setObjectName("leGFLASV_2");
        leGFLASV_2->setGeometry(QRect(190, 110, 80, 21));
        leGFLASV_2->setReadOnly(true);
        leSFLSV_2 = new QLineEdit(gpFilament2);
        leSFLSV_2->setObjectName("leSFLSV_2");
        leSFLSV_2->setGeometry(QRect(90, 110, 80, 21));
        leGFLV_2 = new QLineEdit(gpFilament2);
        leGFLV_2->setObjectName("leGFLV_2");
        leGFLV_2->setGeometry(QRect(189, 140, 80, 21));
        leGFLV_2->setReadOnly(true);
        leGFLPWR_2 = new QLineEdit(gpFilament2);
        leGFLPWR_2->setObjectName("leGFLPWR_2");
        leGFLPWR_2->setGeometry(QRect(189, 170, 80, 21));
        leGFLPWR_2->setReadOnly(true);
        label_174 = new QLabel(gpFilament2);
        label_174->setObjectName("label_174");
        label_174->setGeometry(QRect(20, 80, 61, 16));
        label_175 = new QLabel(gpFilament2);
        label_175->setObjectName("label_175");
        label_175->setGeometry(QRect(100, 60, 51, 16));
        label_176 = new QLabel(gpFilament2);
        label_176->setObjectName("label_176");
        label_176->setGeometry(QRect(210, 60, 41, 16));
        label_177 = new QLabel(gpFilament2);
        label_177->setObjectName("label_177");
        label_177->setGeometry(QRect(21, 112, 61, 16));
        label_178 = new QLabel(gpFilament2);
        label_178->setObjectName("label_178");
        label_178->setGeometry(QRect(119, 142, 71, 16));
        label_179 = new QLabel(gpFilament2);
        label_179->setObjectName("label_179");
        label_179->setGeometry(QRect(120, 172, 61, 16));
        label_180 = new QLabel(gpFilament2);
        label_180->setObjectName("label_180");
        label_180->setGeometry(QRect(278, 81, 21, 16));
        label_181 = new QLabel(gpFilament2);
        label_181->setObjectName("label_181");
        label_181->setGeometry(QRect(279, 112, 21, 16));
        label_182 = new QLabel(gpFilament2);
        label_182->setObjectName("label_182");
        label_182->setGeometry(QRect(278, 142, 21, 16));
        label_183 = new QLabel(gpFilament2);
        label_183->setObjectName("label_183");
        label_183->setGeometry(QRect(278, 172, 21, 16));
        tabMIPS->addTab(Filament, QString());
        PSG = new QWidget();
        PSG->setObjectName("PSG");
        gbPulseSequence = new QGroupBox(PSG);
        gbPulseSequence->setObjectName("gbPulseSequence");
        gbPulseSequence->setGeometry(QRect(5, 10, 776, 76));
        pbLoadFromFile = new QPushButton(gbPulseSequence);
        pbLoadFromFile->setObjectName("pbLoadFromFile");
        pbLoadFromFile->setGeometry(QRect(15, 30, 151, 32));
        pbEditCurrent = new QPushButton(gbPulseSequence);
        pbEditCurrent->setObjectName("pbEditCurrent");
        pbEditCurrent->setGeometry(QRect(210, 30, 151, 32));
        pbCreateNew = new QPushButton(gbPulseSequence);
        pbCreateNew->setObjectName("pbCreateNew");
        pbCreateNew->setGeometry(QRect(415, 30, 151, 32));
        pbSaveToFile = new QPushButton(gbPulseSequence);
        pbSaveToFile->setObjectName("pbSaveToFile");
        pbSaveToFile->setGeometry(QRect(610, 30, 151, 32));
        gbSequenceGenerationControl = new QGroupBox(PSG);
        gbSequenceGenerationControl->setObjectName("gbSequenceGenerationControl");
        gbSequenceGenerationControl->setGeometry(QRect(5, 110, 771, 106));
        comboClock = new QComboBox(gbSequenceGenerationControl);
        comboClock->setObjectName("comboClock");
        comboClock->setGeometry(QRect(120, 35, 141, 26));
        label_30 = new QLabel(gbSequenceGenerationControl);
        label_30->setObjectName("label_30");
        label_30->setGeometry(QRect(15, 35, 61, 26));
        label_31 = new QLabel(gbSequenceGenerationControl);
        label_31->setObjectName("label_31");
        label_31->setGeometry(QRect(15, 60, 86, 31));
        comboTrigger = new QComboBox(gbSequenceGenerationControl);
        comboTrigger->setObjectName("comboTrigger");
        comboTrigger->setGeometry(QRect(120, 65, 141, 26));
        label_32 = new QLabel(gbSequenceGenerationControl);
        label_32->setObjectName("label_32");
        label_32->setGeometry(QRect(385, 30, 231, 41));
        label_32->setWordWrap(true);
        leExternClock = new QLineEdit(gbSequenceGenerationControl);
        leExternClock->setObjectName("leExternClock");
        leExternClock->setGeometry(QRect(625, 35, 113, 21));
        pbDownload = new QPushButton(PSG);
        pbDownload->setObjectName("pbDownload");
        pbDownload->setGeometry(QRect(0, 410, 161, 32));
        pbViewTable = new QPushButton(PSG);
        pbViewTable->setObjectName("pbViewTable");
        pbViewTable->setGeometry(QRect(155, 410, 191, 32));
        pbTrigger = new QPushButton(PSG);
        pbTrigger->setObjectName("pbTrigger");
        pbTrigger->setGeometry(QRect(530, 410, 121, 32));
        label_33 = new QLabel(PSG);
        label_33->setObjectName("label_33");
        label_33->setGeometry(QRect(15, 245, 176, 61));
        label_33->setWordWrap(true);
        leSequenceNumber = new QLineEdit(PSG);
        leSequenceNumber->setObjectName("leSequenceNumber");
        leSequenceNumber->setGeometry(QRect(205, 265, 76, 21));
        chkAutoAdvance = new QCheckBox(PSG);
        chkAutoAdvance->setObjectName("chkAutoAdvance");
        chkAutoAdvance->setGeometry(QRect(40, 320, 281, 46));
        groupBox_4 = new QGroupBox(PSG);
        groupBox_4->setObjectName("groupBox_4");
        groupBox_4->setGeometry(QRect(340, 240, 436, 131));
        label_34 = new QLabel(groupBox_4);
        label_34->setObjectName("label_34");
        label_34->setGeometry(QRect(20, 30, 176, 26));
        label_35 = new QLabel(groupBox_4);
        label_35->setObjectName("label_35");
        label_35->setGeometry(QRect(20, 60, 121, 26));
        label_36 = new QLabel(groupBox_4);
        label_36->setObjectName("label_36");
        label_36->setGeometry(QRect(20, 90, 96, 26));
        leTimePoint = new QLineEdit(groupBox_4);
        leTimePoint->setObjectName("leTimePoint");
        leTimePoint->setGeometry(QRect(205, 35, 76, 21));
        leChannel = new QLineEdit(groupBox_4);
        leChannel->setObjectName("leChannel");
        leChannel->setGeometry(QRect(205, 65, 76, 21));
        leValue = new QLineEdit(groupBox_4);
        leValue->setObjectName("leValue");
        leValue->setGeometry(QRect(205, 95, 76, 21));
        pbRead = new QPushButton(groupBox_4);
        pbRead->setObjectName("pbRead");
        pbRead->setGeometry(QRect(310, 40, 111, 32));
        pbWrite = new QPushButton(groupBox_4);
        pbWrite->setObjectName("pbWrite");
        pbWrite->setGeometry(QRect(310, 80, 111, 32));
        pbVisPulseSequence = new QPushButton(PSG);
        pbVisPulseSequence->setObjectName("pbVisPulseSequence");
        pbVisPulseSequence->setGeometry(QRect(340, 410, 191, 32));
        pbExitTableMode = new QPushButton(PSG);
        pbExitTableMode->setObjectName("pbExitTableMode");
        pbExitTableMode->setGeometry(QRect(650, 410, 141, 32));
        tabMIPS->addTab(PSG, QString());
        MIPS->setCentralWidget(centralWidget);
        menuBar = new QMenuBar(MIPS);
        menuBar->setObjectName("menuBar");
        menuBar->setGeometry(QRect(0, 0, 797, 24));
        menuAbout = new QMenu(menuBar);
        menuAbout->setObjectName("menuAbout");
        menuTerminal = new QMenu(menuBar);
        menuTerminal->setObjectName("menuTerminal");
        menuFile = new QMenu(menuBar);
        menuFile->setObjectName("menuFile");
        menuTools = new QMenu(menuBar);
        menuTools->setObjectName("menuTools");
        MIPS->setMenuBar(menuBar);
        mainToolBar = new QToolBar(MIPS);
        mainToolBar->setObjectName("mainToolBar");
        MIPS->addToolBar(Qt::ToolBarArea::TopToolBarArea, mainToolBar);
        statusBar = new QStatusBar(MIPS);
        statusBar->setObjectName("statusBar");
        MIPS->setStatusBar(statusBar);
        QWidget::setTabOrder(pbConfigure, pbDisconnect);
        QWidget::setTabOrder(pbDisconnect, leGCHAN_DCB);
        QWidget::setTabOrder(leGCHAN_DCB, chkSDIO_A);
        QWidget::setTabOrder(chkSDIO_A, chkSDIO_B);
        QWidget::setTabOrder(chkSDIO_B, chkSDIO_C);
        QWidget::setTabOrder(chkSDIO_C, chkSDIO_D);
        QWidget::setTabOrder(chkSDIO_D, chkSDIO_E);
        QWidget::setTabOrder(chkSDIO_E, chkSDIO_F);
        QWidget::setTabOrder(chkSDIO_F, chkSDIO_G);
        QWidget::setTabOrder(chkSDIO_G, chkSDIO_H);
        QWidget::setTabOrder(chkSDIO_H, chkSDIO_L);
        QWidget::setTabOrder(chkSDIO_L, chkSDIO_P);
        QWidget::setTabOrder(chkSDIO_P, chkSDIO_J);
        QWidget::setTabOrder(chkSDIO_J, chkSDIO_I);
        QWidget::setTabOrder(chkSDIO_I, chkSDIO_N);
        QWidget::setTabOrder(chkSDIO_N, chkSDIO_M);
        QWidget::setTabOrder(chkSDIO_M, chkSDIO_K);
        QWidget::setTabOrder(chkSDIO_K, chkSDIO_O);
        QWidget::setTabOrder(chkSDIO_O, chkGDIO_Q);
        QWidget::setTabOrder(chkGDIO_Q, chkGDIO_R);
        QWidget::setTabOrder(chkGDIO_R, chkGDIO_U);
        QWidget::setTabOrder(chkGDIO_U, chkGDIO_V);
        QWidget::setTabOrder(chkGDIO_V, chkGDIO_T);
        QWidget::setTabOrder(chkGDIO_T, chkGDIO_W);
        QWidget::setTabOrder(chkGDIO_W, chkGDIO_S);
        QWidget::setTabOrder(chkGDIO_S, chkGDIO_X);
        QWidget::setTabOrder(chkGDIO_X, pbTrigHigh);
        QWidget::setTabOrder(pbTrigHigh, pbTrigLow);
        QWidget::setTabOrder(pbTrigLow, pbTrigPulse);
        QWidget::setTabOrder(pbTrigPulse, pbDIOupdate);
        QWidget::setTabOrder(pbDIOupdate, leSFREQ);
        QWidget::setTabOrder(leSFREQ, leSWIDTH);
        QWidget::setTabOrder(leSWIDTH, Burst);
        QWidget::setTabOrder(Burst, pbRFgenerate);
        QWidget::setTabOrder(pbRFgenerate, tabMIPS);
        QWidget::setTabOrder(tabMIPS, pbConnect);
        QWidget::setTabOrder(pbConnect, leSDCB_3);
        QWidget::setTabOrder(leSDCB_3, leSDCB_4);
        QWidget::setTabOrder(leSDCB_4, leSDCB_5);
        QWidget::setTabOrder(leSDCB_5, leSDCB_6);
        QWidget::setTabOrder(leSDCB_6, leSDCB_7);
        QWidget::setTabOrder(leSDCB_7, leSDCB_8);
        QWidget::setTabOrder(leSDCB_8, leGDCBV_1);
        QWidget::setTabOrder(leGDCBV_1, leGDCBV_2);
        QWidget::setTabOrder(leGDCBV_2, leGDCBV_3);
        QWidget::setTabOrder(leGDCBV_3, leGDCBV_4);
        QWidget::setTabOrder(leGDCBV_4, leGDCBV_5);
        QWidget::setTabOrder(leGDCBV_5, leGDCBV_6);
        QWidget::setTabOrder(leGDCBV_6, leGDCBV_7);
        QWidget::setTabOrder(leGDCBV_7, leGDCBV_8);
        QWidget::setTabOrder(leGDCBV_8, leGDCMIN_1);
        QWidget::setTabOrder(leGDCMIN_1, leGDCMAX_1);
        QWidget::setTabOrder(leGDCMAX_1, leSDCBOF_1);
        QWidget::setTabOrder(leSDCBOF_1, pbDCbiasUpdate);
        QWidget::setTabOrder(pbDCbiasUpdate, leSDCB_9);
        QWidget::setTabOrder(leSDCB_9, leSDCB_10);
        QWidget::setTabOrder(leSDCB_10, leSDCB_11);
        QWidget::setTabOrder(leSDCB_11, leSDCB_12);
        QWidget::setTabOrder(leSDCB_12, leSDCB_13);
        QWidget::setTabOrder(leSDCB_13, leSDCB_14);
        QWidget::setTabOrder(leSDCB_14, leSDCB_15);
        QWidget::setTabOrder(leSDCB_15, leSDCB_16);
        QWidget::setTabOrder(leSDCB_16, leGDCBV_9);
        QWidget::setTabOrder(leGDCBV_9, leGDCBV_10);
        QWidget::setTabOrder(leGDCBV_10, leGDCBV_11);
        QWidget::setTabOrder(leGDCBV_11, leGDCBV_12);
        QWidget::setTabOrder(leGDCBV_12, leGDCBV_13);
        QWidget::setTabOrder(leGDCBV_13, leGDCBV_14);
        QWidget::setTabOrder(leGDCBV_14, leGDCBV_15);
        QWidget::setTabOrder(leGDCBV_15, leGDCBV_16);
        QWidget::setTabOrder(leGDCBV_16, leGDCMIN_9);
        QWidget::setTabOrder(leGDCMIN_9, leGDCMAX_9);
        QWidget::setTabOrder(leGDCMAX_9, leSDCBOF_9);
        QWidget::setTabOrder(leSDCBOF_9, leSDCB_1);
        QWidget::setTabOrder(leSDCB_1, chkPowerEnable);
        QWidget::setTabOrder(chkPowerEnable, leSDCB_2);
        QWidget::setTabOrder(leSDCB_2, tabARB);
        QWidget::setTabOrder(tabARB, leSWFREQ);
        QWidget::setTabOrder(leSWFREQ, leSWFVRNG);
        QWidget::setTabOrder(leSWFVRNG, leSWFVAUX);
        QWidget::setTabOrder(leSWFVAUX, leSWFVOFF);
        QWidget::setTabOrder(leSWFVOFF, comboSWFTYP);
        QWidget::setTabOrder(comboSWFTYP, rbSWFDIR_FWD);
        QWidget::setTabOrder(rbSWFDIR_FWD, rbSWFDIR_REV);
        QWidget::setTabOrder(rbSWFDIR_REV, leSARBCTD);
        QWidget::setTabOrder(leSARBCTD, leSARBCTC);
        QWidget::setTabOrder(leSARBCTC, leSARBCTN);
        QWidget::setTabOrder(leSARBCTN, leSARBCTNC);
        QWidget::setTabOrder(leSARBCTNC, pbARBforceTrigger);
        QWidget::setTabOrder(pbARBforceTrigger, leSARBCTBL);
        QWidget::setTabOrder(leSARBCTBL, rbSARBCMODE_NORMAL);
        QWidget::setTabOrder(rbSARBCMODE_NORMAL, rbSARBCMODE_COMPRESS);
        QWidget::setTabOrder(rbSARBCMODE_COMPRESS, rbSARBCSW_CLOSE);
        QWidget::setTabOrder(rbSARBCSW_CLOSE, rbSARBCSW_OPEN);
        QWidget::setTabOrder(rbSARBCSW_OPEN, leSARBCORDER);
        QWidget::setTabOrder(leSARBCORDER, pbARBtwaveUpdate);
        QWidget::setTabOrder(pbARBtwaveUpdate, leSWFREQ_1);
        QWidget::setTabOrder(leSWFREQ_1, leSWFVRNG_1);
        QWidget::setTabOrder(leSWFVRNG_1, leSWFVAUX_1);
        QWidget::setTabOrder(leSWFVAUX_1, leSWFVOFF_1);
        QWidget::setTabOrder(leSWFVOFF_1, leSARBBUF_1);
        QWidget::setTabOrder(leSARBBUF_1, leSARBNUM_1);
        QWidget::setTabOrder(leSARBNUM_1, leLevel);
        QWidget::setTabOrder(leLevel, leChan);
        QWidget::setTabOrder(leChan, pbSetChannel);
        QWidget::setTabOrder(pbSetChannel, leRangeLevel);
        QWidget::setTabOrder(leRangeLevel, leRangeStart);
        QWidget::setTabOrder(leRangeStart, leRangeStop);
        QWidget::setTabOrder(leRangeStop, leRangeChan);
        QWidget::setTabOrder(leRangeChan, pbSetRangeChannel);
        QWidget::setTabOrder(pbSetRangeChannel, pbARBtrigger);
        QWidget::setTabOrder(pbARBtrigger, pbARBupdate);
        QWidget::setTabOrder(pbARBupdate, pbARBviewLog);
        QWidget::setTabOrder(pbARBviewLog, pbARBclearLog);
        QWidget::setTabOrder(pbARBclearLog, leSWFREQ_2);
        QWidget::setTabOrder(leSWFREQ_2, leSWFVRNG_2);
        QWidget::setTabOrder(leSWFVRNG_2, leSWFVAUX_2);
        QWidget::setTabOrder(leSWFVAUX_2, leSWFVOFF_2);
        QWidget::setTabOrder(leSWFVOFF_2, leSARBBUF_2);
        QWidget::setTabOrder(leSARBBUF_2, leSARBNUM_2);
        QWidget::setTabOrder(leSARBNUM_2, leLevel_2);
        QWidget::setTabOrder(leLevel_2, leChan_2);
        QWidget::setTabOrder(leChan_2, pbSetChannel_2);
        QWidget::setTabOrder(pbSetChannel_2, leRangeLevel_2);
        QWidget::setTabOrder(leRangeLevel_2, leRangeStart_2);
        QWidget::setTabOrder(leRangeStart_2, leRangeStop_2);
        QWidget::setTabOrder(leRangeStop_2, leRangeChan_2);
        QWidget::setTabOrder(leRangeChan_2, pbSetRangeChannel_2);
        QWidget::setTabOrder(pbSetRangeChannel_2, pbARBtrigger_2);
        QWidget::setTabOrder(pbARBtrigger_2, leSTWF_1);
        QWidget::setTabOrder(leSTWF_1, leSTWSEQ_1);
        QWidget::setTabOrder(leSTWSEQ_1, leSTWPV_1);
        QWidget::setTabOrder(leSTWPV_1, leSTWG1V_1);
        QWidget::setTabOrder(leSTWG1V_1, leSTWG2V_1);
        QWidget::setTabOrder(leSTWG2V_1, rbSTWDIR_1_FWD);
        QWidget::setTabOrder(rbSTWDIR_1_FWD, rbSTWDIR_1_REV);
        QWidget::setTabOrder(rbSTWDIR_1_REV, leSTWF_2);
        QWidget::setTabOrder(leSTWF_2, leSTWSEQ_2);
        QWidget::setTabOrder(leSTWSEQ_2, leSTWPV_2);
        QWidget::setTabOrder(leSTWPV_2, leSTWG1V_2);
        QWidget::setTabOrder(leSTWG1V_2, leSTWG2V_2);
        QWidget::setTabOrder(leSTWG2V_2, rbSTWDIR_2_FWD);
        QWidget::setTabOrder(rbSTWDIR_2_FWD, rbSTWDIR_2_REV);
        QWidget::setTabOrder(rbSTWDIR_2_REV, pbTwaveUpdate);
        QWidget::setTabOrder(pbTwaveUpdate, tabTWoption);
        QWidget::setTabOrder(tabTWoption, rbSTWCMODE_NORMAL);
        QWidget::setTabOrder(rbSTWCMODE_NORMAL, rbSTWCMODE_COMPRESS);
        QWidget::setTabOrder(rbSTWCMODE_COMPRESS, rbSTWCSW_CLOSE);
        QWidget::setTabOrder(rbSTWCSW_CLOSE, rbSTWCSW_OPEN);
        QWidget::setTabOrder(rbSTWCSW_OPEN, leSTWCTD);
        QWidget::setTabOrder(leSTWCTD, leSTWCTC);
        QWidget::setTabOrder(leSTWCTC, leSTWCTN);
        QWidget::setTabOrder(leSTWCTN, leSTWCTNC);
        QWidget::setTabOrder(leSTWCTNC, leSTWCORDER);
        QWidget::setTabOrder(leSTWCORDER, pbTwaveForceTrigger);
        QWidget::setTabOrder(pbTwaveForceTrigger, leSTWCTBL);
        QWidget::setTabOrder(leSTWCTBL, leSTWSSTRT_1);
        QWidget::setTabOrder(leSTWSSTRT_1, leSTWSSTP_1);
        QWidget::setTabOrder(leSTWSSTP_1, leSTWSTM_1);
        QWidget::setTabOrder(leSTWSTM_1, leGTWSTA_1);
        QWidget::setTabOrder(leGTWSTA_1, pbTWsweepCH1start);
        QWidget::setTabOrder(pbTWsweepCH1start, pbTWsweepCH1stop);
        QWidget::setTabOrder(pbTWsweepCH1stop, leSTWSSTRTV_1);
        QWidget::setTabOrder(leSTWSSTRTV_1, leSTWSSTPV_1);
        QWidget::setTabOrder(leSTWSSTPV_1, leSTWSSTRT_2);
        QWidget::setTabOrder(leSTWSSTRT_2, leSTWSSTP_2);
        QWidget::setTabOrder(leSTWSSTP_2, leSTWSTM_2);
        QWidget::setTabOrder(leSTWSTM_2, leGTWSTA_2);
        QWidget::setTabOrder(leGTWSTA_2, pbTWsweepCH2start);
        QWidget::setTabOrder(pbTWsweepCH2start, pbTWsweepCH2stop);
        QWidget::setTabOrder(pbTWsweepCH2stop, leSTWSSTRTV_2);
        QWidget::setTabOrder(leSTWSSTRTV_2, leSTWSSTPV_2);
        QWidget::setTabOrder(leSTWSSTPV_2, pbTWsweepStart);
        QWidget::setTabOrder(pbTWsweepStart, pbTWsweepStop);
        QWidget::setTabOrder(pbTWsweepStop, comboRFchan);
        QWidget::setTabOrder(comboRFchan, leSRFFRQ);
        QWidget::setTabOrder(leSRFFRQ, leSRFDRV);
        QWidget::setTabOrder(leSRFDRV, leGRFPPVP);
        QWidget::setTabOrder(leGRFPPVP, leGRFPPVN);
        QWidget::setTabOrder(leGRFPPVN, leGRFPWR);
        QWidget::setTabOrder(leGRFPWR, pbUpdateRF);
        QWidget::setTabOrder(pbUpdateRF, textCVparkList);
        QWidget::setTabOrder(textCVparkList, comboFMtrig);
        QWidget::setTabOrder(comboFMtrig, pbFMstart);
        QWidget::setTabOrder(pbFMstart, leFMstatus);
        QWidget::setTabOrder(leFMstatus, leFMelasped);
        QWidget::setTabOrder(leFMelasped, leFMcvVolts);
        QWidget::setTabOrder(leFMcvVolts, leFMbiasVolts);
        QWidget::setTabOrder(leFMbiasVolts, leFMcompound);
        QWidget::setTabOrder(leFMcompound, pbFMloadCSV);
        QWidget::setTabOrder(pbFMloadCSV, chkFMenable);
        QWidget::setTabOrder(chkFMenable, leSFMDRV);
        QWidget::setTabOrder(leSFMDRV, leGFMPWR);
        QWidget::setTabOrder(leGFMPWR, leGFMPV);
        QWidget::setTabOrder(leGFMPV, leGFMNV);
        QWidget::setTabOrder(leGFMNV, leSFMBIAS);
        QWidget::setTabOrder(leSFMBIAS, leGFMBIASA);
        QWidget::setTabOrder(leGFMBIASA, leGFMCVA);
        QWidget::setTabOrder(leGFMCVA, leSFMCV);
        QWidget::setTabOrder(leSFMCV, leGFMOFFA);
        QWidget::setTabOrder(leGFMOFFA, leSFMOFF);
        QWidget::setTabOrder(leSFMOFF, chkEnableFilament1);
        QWidget::setTabOrder(chkEnableFilament1, leSFLI_1);
        QWidget::setTabOrder(leSFLI_1, leGFLAI_1);
        QWidget::setTabOrder(leGFLAI_1, leGFLASV_1);
        QWidget::setTabOrder(leGFLASV_1, leSFLSV_1);
        QWidget::setTabOrder(leSFLSV_1, leGFLV_1);
        QWidget::setTabOrder(leGFLV_1, leGFLPWR_1);
        QWidget::setTabOrder(leGFLPWR_1, chkEnableFilament2);
        QWidget::setTabOrder(chkEnableFilament2, leSFLI_2);
        QWidget::setTabOrder(leSFLI_2, leGFLAI_2);
        QWidget::setTabOrder(leGFLAI_2, leGFLASV_2);
        QWidget::setTabOrder(leGFLASV_2, leSFLSV_2);
        QWidget::setTabOrder(leSFLSV_2, leGFLV_2);
        QWidget::setTabOrder(leGFLV_2, leGFLPWR_2);
        QWidget::setTabOrder(leGFLPWR_2, pbLoadFromFile);
        QWidget::setTabOrder(pbLoadFromFile, pbEditCurrent);
        QWidget::setTabOrder(pbEditCurrent, pbCreateNew);
        QWidget::setTabOrder(pbCreateNew, pbSaveToFile);
        QWidget::setTabOrder(pbSaveToFile, comboClock);
        QWidget::setTabOrder(comboClock, comboTrigger);
        QWidget::setTabOrder(comboTrigger, leExternClock);
        QWidget::setTabOrder(leExternClock, pbDownload);
        QWidget::setTabOrder(pbDownload, pbViewTable);
        QWidget::setTabOrder(pbViewTable, pbTrigger);
        QWidget::setTabOrder(pbTrigger, leSequenceNumber);
        QWidget::setTabOrder(leSequenceNumber, chkAutoAdvance);
        QWidget::setTabOrder(chkAutoAdvance, leTimePoint);
        QWidget::setTabOrder(leTimePoint, leChannel);
        QWidget::setTabOrder(leChannel, leValue);
        QWidget::setTabOrder(leValue, pbRead);
        QWidget::setTabOrder(pbRead, pbWrite);

        menuBar->addAction(menuAbout->menuAction());
        menuBar->addAction(menuFile->menuAction());
        menuBar->addAction(menuTerminal->menuAction());
        menuBar->addAction(menuTools->menuAction());
        menuAbout->addAction(actionAbout);
        menuAbout->addAction(actionProperties);
        menuAbout->addSeparator();
        menuAbout->addAction(actionMIPS_commands);
        menuAbout->addAction(actionHelp);
        menuTerminal->addAction(actionClear);
        menuTerminal->addAction(actionMessage_repeat);
        menuTerminal->addSeparator();
        menuTerminal->addAction(actionGet_file_from_MIPS);
        menuTerminal->addAction(actionSend_file_to_MIPS);
        menuTerminal->addSeparator();
        menuTerminal->addAction(actionRead_EEPROM);
        menuTerminal->addAction(actionWrite_EEPROM);
        menuTerminal->addSeparator();
        menuTerminal->addAction(actionRead_ARB_FLASH);
        menuTerminal->addAction(actionWrite_ARB_FLASH);
        menuTerminal->addAction(actionARB_upload);
        menuFile->addAction(actionOpen);
        menuFile->addAction(actionSave);
        menuTools->addAction(actionProgram_MIPS);
        menuTools->addAction(actionSave_current_MIPS_firmware);
        menuTools->addAction(actionSet_bootloader_boot_flag);
        menuTools->addAction(actionProgram_RFmega);
        menuTools->addSeparator();
        menuTools->addAction(actionSelect);
        menuTools->addSeparator();
        menuTools->addAction(actionScripting);

        retranslateUi(MIPS);

        tabMIPS->setCurrentIndex(0);
        tabARB->setCurrentIndex(0);
        tabTWoption->setCurrentIndex(0);
        tabScanMode->setCurrentIndex(1);


        QMetaObject::connectSlotsByName(MIPS);
    } // setupUi

    void retranslateUi(QMainWindow *MIPS)
    {
        MIPS->setWindowTitle(QString());
        actionAbout->setText(QCoreApplication::translate("MIPS", "About", nullptr));
        actionClear->setText(QCoreApplication::translate("MIPS", "Clear", nullptr));
        actionOpen->setText(QCoreApplication::translate("MIPS", "Load", nullptr));
        actionSave->setText(QCoreApplication::translate("MIPS", "Save", nullptr));
        actionProgram_MIPS->setText(QCoreApplication::translate("MIPS", "Program MIPS", nullptr));
        actionSave_current_MIPS_firmware->setText(QCoreApplication::translate("MIPS", "Save current MIPS firmware", nullptr));
        actionSet_bootloader_boot_flag->setText(QCoreApplication::translate("MIPS", "Set bootloader boot flag", nullptr));
        actionMIPS_commands->setText(QCoreApplication::translate("MIPS", "MIPS commands", nullptr));
        actionHelp->setText(QCoreApplication::translate("MIPS", "Help", nullptr));
        actionMessage_repeat->setText(QCoreApplication::translate("MIPS", "Message repeat", nullptr));
        actionGet_file_from_MIPS->setText(QCoreApplication::translate("MIPS", "Get file from MIPS", nullptr));
        actionSend_file_to_MIPS->setText(QCoreApplication::translate("MIPS", "Send file to MIPS", nullptr));
        actionRead_EEPROM->setText(QCoreApplication::translate("MIPS", "Read EEPROM", nullptr));
        actionWrite_EEPROM->setText(QCoreApplication::translate("MIPS", "Write EEPROM", nullptr));
        actionRead_ARB_FLASH->setText(QCoreApplication::translate("MIPS", "Read ARB FLASH", nullptr));
        actionWrite_ARB_FLASH->setText(QCoreApplication::translate("MIPS", "Write ARB FLASH", nullptr));
        actionARB_upload->setText(QCoreApplication::translate("MIPS", "ARB upload", nullptr));
        actionSelect->setText(QCoreApplication::translate("MIPS", "Load configuration...", nullptr));
        actionScripting->setText(QCoreApplication::translate("MIPS", "Scripting...", nullptr));
        actionProperties->setText(QCoreApplication::translate("MIPS", "Properties", nullptr));
        actionProgram_RFmega->setText(QCoreApplication::translate("MIPS", "Program RFmega", nullptr));
        lblMIPSimage->setText(QString());
        lblMIPSconfigTitle->setText(QCoreApplication::translate("MIPS", "MIPS configuration:", nullptr));
        lblMIPSconfig->setText(QString());
#if QT_CONFIG(tooltip)
        pbConnect->setToolTip(QCoreApplication::translate("MIPS", "Press this button to connect to MIPS.", nullptr));
#endif // QT_CONFIG(tooltip)
        pbConnect->setText(QCoreApplication::translate("MIPS", "Connect to MIPS", nullptr));
#if QT_CONFIG(tooltip)
        pbConfigure->setToolTip(QCoreApplication::translate("MIPS", "Press this button to configure the serial port before connecting to MIPS.", nullptr));
#endif // QT_CONFIG(tooltip)
        pbConfigure->setText(QCoreApplication::translate("MIPS", "Configure port", nullptr));
#if QT_CONFIG(tooltip)
        pbDisconnect->setToolTip(QCoreApplication::translate("MIPS", "Press to disconnect from MIPS.", nullptr));
#endif // QT_CONFIG(tooltip)
        pbDisconnect->setText(QCoreApplication::translate("MIPS", "Disconnect", nullptr));
        lblMIPSconfigTitle_2->setText(QCoreApplication::translate("MIPS", "MIPS host name, for\n"
"network connected systems.", nullptr));
        lblMIPSconnectionNotes->setText(QCoreApplication::translate("MIPS", "MIPS is currently not connected to this application. Establish a connection using one of the following options:\n"
"\n"
"1.) Manually select a MIPS system by selecting a serial port using the Configure port button to select port and parameters and then pressing the Connect to MIPS button. If a name is entered into the MIPS host name box then this displayed name will be used to make a network connection, leave this box blank to make a USB serial port connection.\n"
"\n"
"2.) Press the Find MIPS and Connect button and this application will search for all connected MIPS systems and establish connections. If more that one system is found you will see a selection box that will allow you to toggle between MIPS systems. Additionally you can enter multiple network names for connected MIPS system and this application will connect to all the systems if found. Make sure the host name box is empty to use the USB serial ports.\n"
"\n"
"Please note, the Program MIPS function will only work with a single serial connection to"
                        " a MIPS system.\n"
"\n"
"", nullptr));
#if QT_CONFIG(tooltip)
        pbSearchandConnect->setToolTip(QCoreApplication::translate("MIPS", "Press this button to search for all USB connected MIPS systems and connect.", nullptr));
#endif // QT_CONFIG(tooltip)
        pbSearchandConnect->setText(QCoreApplication::translate("MIPS", "Find MIPS and Connect", nullptr));
#if QT_CONFIG(tooltip)
        comboSystems->setToolTip(QCoreApplication::translate("MIPS", "Communicate with the selected MIPS system", nullptr));
#endif // QT_CONFIG(tooltip)
        lblSystems->setText(QCoreApplication::translate("MIPS", "Multiple MIPS systems found and connected. Select desired system.", nullptr));
        tabMIPS->setTabText(tabMIPS->indexOf(System), QCoreApplication::translate("MIPS", "System", nullptr));
        tabMIPS->setTabText(tabMIPS->indexOf(Terminal), QCoreApplication::translate("MIPS", "Terminal", nullptr));
        gbADCdigitizer->setTitle(QCoreApplication::translate("MIPS", "ADC digitizer", nullptr));
        label_194->setText(QCoreApplication::translate("MIPS", "Channel", nullptr));
        label_195->setText(QCoreApplication::translate("MIPS", "Samples", nullptr));
        label_196->setText(QCoreApplication::translate("MIPS", "Vectors", nullptr));
        label_197->setText(QCoreApplication::translate("MIPS", "Rate", nullptr));
        pbADCinit->setText(QCoreApplication::translate("MIPS", "ADC setup", nullptr));
        pbADCtrigger->setText(QCoreApplication::translate("MIPS", "ADC trigger", nullptr));
        pbADCabort->setText(QCoreApplication::translate("MIPS", "ADC abort", nullptr));
        chkADCzoomX->setText(QCoreApplication::translate("MIPS", "Zoom and drag X axis", nullptr));
        chkADCzoomY->setText(QCoreApplication::translate("MIPS", "Zoom and drag Y axis", nullptr));
        tabMIPS->setTabText(tabMIPS->indexOf(ADC), QCoreApplication::translate("MIPS", "ADC", nullptr));
        gbDigitalOut->setTitle(QCoreApplication::translate("MIPS", "Ditital outputs", nullptr));
        chkSDIO_A->setText(QCoreApplication::translate("MIPS", "A", nullptr));
        chkSDIO_B->setText(QCoreApplication::translate("MIPS", "B", nullptr));
        chkSDIO_C->setText(QCoreApplication::translate("MIPS", "C", nullptr));
        chkSDIO_D->setText(QCoreApplication::translate("MIPS", "D", nullptr));
        chkSDIO_E->setText(QCoreApplication::translate("MIPS", "E", nullptr));
        chkSDIO_F->setText(QCoreApplication::translate("MIPS", "F", nullptr));
        chkSDIO_G->setText(QCoreApplication::translate("MIPS", "G", nullptr));
        chkSDIO_H->setText(QCoreApplication::translate("MIPS", "H", nullptr));
        chkSDIO_L->setText(QCoreApplication::translate("MIPS", "L", nullptr));
        chkSDIO_P->setText(QCoreApplication::translate("MIPS", "P", nullptr));
        chkSDIO_J->setText(QCoreApplication::translate("MIPS", "J", nullptr));
        chkSDIO_I->setText(QCoreApplication::translate("MIPS", "I", nullptr));
        chkSDIO_N->setText(QCoreApplication::translate("MIPS", "N", nullptr));
        chkSDIO_M->setText(QCoreApplication::translate("MIPS", "M", nullptr));
        chkSDIO_K->setText(QCoreApplication::translate("MIPS", "K", nullptr));
        chkSDIO_O->setText(QCoreApplication::translate("MIPS", "O", nullptr));
        gbDigitalIn->setTitle(QCoreApplication::translate("MIPS", "Digital inputs", nullptr));
        chkGDIO_Q->setText(QCoreApplication::translate("MIPS", "Q, Clock", nullptr));
        chkGDIO_R->setText(QCoreApplication::translate("MIPS", "R, Trig", nullptr));
        chkGDIO_U->setText(QCoreApplication::translate("MIPS", "U", nullptr));
        chkGDIO_V->setText(QCoreApplication::translate("MIPS", "V", nullptr));
        chkGDIO_T->setText(QCoreApplication::translate("MIPS", "T", nullptr));
        chkGDIO_W->setText(QCoreApplication::translate("MIPS", "W", nullptr));
        chkGDIO_S->setText(QCoreApplication::translate("MIPS", "S", nullptr));
        chkGDIO_X->setText(QCoreApplication::translate("MIPS", "X", nullptr));
        pbTrigHigh->setText(QCoreApplication::translate("MIPS", "Triggger output high", nullptr));
        pbTrigLow->setText(QCoreApplication::translate("MIPS", "Trigger output low", nullptr));
        pbTrigPulse->setText(QCoreApplication::translate("MIPS", "Trigger output pulse", nullptr));
        pbDIOupdate->setText(QCoreApplication::translate("MIPS", "Update", nullptr));
        gbFreqGen->setTitle(QCoreApplication::translate("MIPS", "Trigger output frequency generator", nullptr));
        label_84->setText(QCoreApplication::translate("MIPS", "Frequency", nullptr));
        label_85->setText(QCoreApplication::translate("MIPS", "Hz", nullptr));
        label_86->setText(QCoreApplication::translate("MIPS", "Pulse width", nullptr));
        label_87->setText(QCoreApplication::translate("MIPS", "uSec", nullptr));
        label_88->setText(QCoreApplication::translate("MIPS", "Number of cycles", nullptr));
#if QT_CONFIG(tooltip)
        Burst->setToolTip(QCoreApplication::translate("MIPS", "Enter number of cycles, 0 to stop, -1 = forever.", nullptr));
#endif // QT_CONFIG(tooltip)
        Burst->setText(QCoreApplication::translate("MIPS", "1", nullptr));
        pbRFgenerate->setText(QCoreApplication::translate("MIPS", "Generate", nullptr));
        groupBox->setTitle(QCoreApplication::translate("MIPS", "Remote UI navigation", nullptr));
        pbUPsmall->setText(QCoreApplication::translate("MIPS", ">", nullptr));
        pbUPlarge->setText(QCoreApplication::translate("MIPS", ">", nullptr));
        pbDOWNsmall->setText(QCoreApplication::translate("MIPS", ">", nullptr));
        pbDOWNlarge->setText(QCoreApplication::translate("MIPS", ">", nullptr));
        pbSelect->setText(QCoreApplication::translate("MIPS", "Select", nullptr));
        chkRemoteNav->setText(QCoreApplication::translate("MIPS", "Enable\n"
"remote\n"
"navigation", nullptr));
        tabMIPS->setTabText(tabMIPS->indexOf(DigitalIO), QCoreApplication::translate("MIPS", "Digital IO", nullptr));
        gbDCbias1->setTitle(QCoreApplication::translate("MIPS", "DC bias channels 1 to 8", nullptr));
        label->setText(QCoreApplication::translate("MIPS", "CH 1", nullptr));
        label_2->setText(QCoreApplication::translate("MIPS", "CH 2", nullptr));
        label_3->setText(QCoreApplication::translate("MIPS", "CH 3", nullptr));
        label_4->setText(QCoreApplication::translate("MIPS", "CH 4", nullptr));
        label_5->setText(QCoreApplication::translate("MIPS", "CH 5", nullptr));
        label_6->setText(QCoreApplication::translate("MIPS", "CH 6", nullptr));
        label_7->setText(QCoreApplication::translate("MIPS", "CH 7", nullptr));
        label_8->setText(QCoreApplication::translate("MIPS", "CH 8", nullptr));
        label_9->setText(QCoreApplication::translate("MIPS", "Setpoint", nullptr));
        label_10->setText(QCoreApplication::translate("MIPS", "Read back", nullptr));
        label_11->setText(QCoreApplication::translate("MIPS", "DC bias module range", nullptr));
        label_12->setText(QCoreApplication::translate("MIPS", "Minimum", nullptr));
        label_13->setText(QCoreApplication::translate("MIPS", "Maximum", nullptr));
        label_14->setText(QCoreApplication::translate("MIPS", "Offset", nullptr));
        label_198->setText(QCoreApplication::translate("MIPS", "Group", nullptr));
        pbDCbiasUpdate->setText(QCoreApplication::translate("MIPS", "Update", nullptr));
        gbDCbias2->setTitle(QCoreApplication::translate("MIPS", "DC bias channels 9 to 16", nullptr));
        label_15->setText(QCoreApplication::translate("MIPS", "CH 9", nullptr));
        label_16->setText(QCoreApplication::translate("MIPS", "CH 10", nullptr));
        label_17->setText(QCoreApplication::translate("MIPS", "CH 11", nullptr));
        label_18->setText(QCoreApplication::translate("MIPS", "CH 12", nullptr));
        label_19->setText(QCoreApplication::translate("MIPS", "CH 13", nullptr));
        label_20->setText(QCoreApplication::translate("MIPS", "CH 14", nullptr));
        label_21->setText(QCoreApplication::translate("MIPS", "CH 15", nullptr));
        label_22->setText(QCoreApplication::translate("MIPS", "CH 16", nullptr));
        label_23->setText(QCoreApplication::translate("MIPS", "Setpoint", nullptr));
        label_24->setText(QCoreApplication::translate("MIPS", "Read back", nullptr));
        label_25->setText(QCoreApplication::translate("MIPS", "DC bias module range", nullptr));
        label_26->setText(QCoreApplication::translate("MIPS", "Minimum", nullptr));
        label_27->setText(QCoreApplication::translate("MIPS", "Maximum", nullptr));
        label_28->setText(QCoreApplication::translate("MIPS", "Offset", nullptr));
        label_199->setText(QCoreApplication::translate("MIPS", "Group", nullptr));
        leGCHAN_DCB->setText(QString());
        label_29->setText(QCoreApplication::translate("MIPS", "Total number of DC bias channels", nullptr));
        chkPowerEnable->setText(QCoreApplication::translate("MIPS", "Power supply\n"
"enabled", nullptr));
        chkDCBautoUpdate->setText(QCoreApplication::translate("MIPS", "Auto update", nullptr));
        gbDCbias3->setTitle(QCoreApplication::translate("MIPS", "DC bias channels 17 to 24", nullptr));
        label_124->setText(QCoreApplication::translate("MIPS", "CH 17", nullptr));
        label_125->setText(QCoreApplication::translate("MIPS", "CH 18", nullptr));
        label_126->setText(QCoreApplication::translate("MIPS", "CH 19", nullptr));
        label_127->setText(QCoreApplication::translate("MIPS", "CH 20", nullptr));
        label_128->setText(QCoreApplication::translate("MIPS", "CH 21", nullptr));
        label_129->setText(QCoreApplication::translate("MIPS", "CH 22", nullptr));
        label_130->setText(QCoreApplication::translate("MIPS", "CH 23", nullptr));
        label_131->setText(QCoreApplication::translate("MIPS", "CH 24", nullptr));
        label_132->setText(QCoreApplication::translate("MIPS", "Setpoint", nullptr));
        label_162->setText(QCoreApplication::translate("MIPS", "Read back", nullptr));
        label_186->setText(QCoreApplication::translate("MIPS", "DC bias module range", nullptr));
        label_187->setText(QCoreApplication::translate("MIPS", "Minimum", nullptr));
        label_188->setText(QCoreApplication::translate("MIPS", "Maximum", nullptr));
        label_189->setText(QCoreApplication::translate("MIPS", "Offset", nullptr));
        label_200->setText(QCoreApplication::translate("MIPS", "Group", nullptr));
        tabMIPS->setTabText(tabMIPS->indexOf(DCbias), QCoreApplication::translate("MIPS", "DCbias", nullptr));
        gbARBtwaveParms->setTitle(QCoreApplication::translate("MIPS", "ARB Twave parameters", nullptr));
        label_115->setText(QCoreApplication::translate("MIPS", "Frequency", nullptr));
        label_116->setText(QCoreApplication::translate("MIPS", "Amplitude", nullptr));
        label_117->setText(QCoreApplication::translate("MIPS", "Aux output", nullptr));
        label_118->setText(QCoreApplication::translate("MIPS", "Offset output", nullptr));
        label_119->setText(QCoreApplication::translate("MIPS", "Hz", nullptr));
        label_120->setText(QCoreApplication::translate("MIPS", "Vp-p", nullptr));
        label_121->setText(QCoreApplication::translate("MIPS", "V", nullptr));
        label_122->setText(QCoreApplication::translate("MIPS", "V", nullptr));
        label_123->setText(QCoreApplication::translate("MIPS", "Waveform", nullptr));
        rbSWFDIR_FWD->setText(QCoreApplication::translate("MIPS", "Forward", nullptr));
        rbSWFDIR_REV->setText(QCoreApplication::translate("MIPS", "Reverse", nullptr));
        label_185->setText(QCoreApplication::translate("MIPS", "ARB Twave channel", nullptr));
#if QT_CONFIG(tooltip)
        gbDualOutput->setToolTip(QCoreApplication::translate("MIPS", "Enabled by the system when the ARB channel has two output boards attached", nullptr));
#endif // QT_CONFIG(tooltip)
        gbDualOutput->setTitle(QCoreApplication::translate("MIPS", "Dual output board offset", nullptr));
        label_190->setText(QCoreApplication::translate("MIPS", "Board A", nullptr));
#if QT_CONFIG(tooltip)
        leSARBOFFA->setToolTip(QCoreApplication::translate("MIPS", "Voltage offset for board A, -10 to 10 volts", nullptr));
#endif // QT_CONFIG(tooltip)
        label_191->setText(QCoreApplication::translate("MIPS", "Board B", nullptr));
#if QT_CONFIG(tooltip)
        leSARBOFFB->setToolTip(QCoreApplication::translate("MIPS", "Voltage offset for board B, -10 to 10 volts", nullptr));
#endif // QT_CONFIG(tooltip)
        label_192->setText(QCoreApplication::translate("MIPS", "V", nullptr));
        label_193->setText(QCoreApplication::translate("MIPS", "V", nullptr));
        pbEditARBwf->setText(QCoreApplication::translate("MIPS", "Edit ARB Waveform", nullptr));
        gbARBcompressor->setTitle(QCoreApplication::translate("MIPS", "Compressor", nullptr));
        label_133->setText(QCoreApplication::translate("MIPS", "Order", nullptr));
        gbARBtiming->setTitle(QCoreApplication::translate("MIPS", "Multi-pass cycle times", nullptr));
        label_142->setText(QCoreApplication::translate("MIPS", "Trigger delay", nullptr));
        label_143->setText(QCoreApplication::translate("MIPS", "Compress time", nullptr));
        label_144->setText(QCoreApplication::translate("MIPS", "Normal time", nullptr));
        label_145->setText(QCoreApplication::translate("MIPS", "Non compress time", nullptr));
        label_146->setText(QCoreApplication::translate("MIPS", "mS", nullptr));
        label_147->setText(QCoreApplication::translate("MIPS", "mS", nullptr));
        label_148->setText(QCoreApplication::translate("MIPS", "mS", nullptr));
        label_149->setText(QCoreApplication::translate("MIPS", "mS", nullptr));
        pbARBforceTrigger->setText(QCoreApplication::translate("MIPS", "Force Multi-pass trigger", nullptr));
        label_150->setText(QCoreApplication::translate("MIPS", "Multi-pass compressor table", nullptr));
        gbARBmode->setTitle(QCoreApplication::translate("MIPS", "Mode", nullptr));
        rbSARBCMODE_NORMAL->setText(QCoreApplication::translate("MIPS", "Normal", nullptr));
        rbSARBCMODE_COMPRESS->setText(QCoreApplication::translate("MIPS", "Compress", nullptr));
        gbARBswitch->setTitle(QCoreApplication::translate("MIPS", "Switch", nullptr));
        rbSARBCSW_CLOSE->setText(QCoreApplication::translate("MIPS", "Close", nullptr));
        rbSARBCSW_OPEN->setText(QCoreApplication::translate("MIPS", "Open", nullptr));
        pbARBtwaveUpdate->setText(QCoreApplication::translate("MIPS", "Update", nullptr));
        chkARBautoUpdate->setText(QCoreApplication::translate("MIPS", "Auto update", nullptr));
        tabARB->setTabText(tabARB->indexOf(TwaveMode), QCoreApplication::translate("MIPS", "Twave mode", nullptr));
        gbARBmodule1->setTitle(QCoreApplication::translate("MIPS", "ARB module 1", nullptr));
        label_89->setText(QCoreApplication::translate("MIPS", "Frequency", nullptr));
        label_90->setText(QCoreApplication::translate("MIPS", "Amplitude Vp-p", nullptr));
        label_91->setText(QCoreApplication::translate("MIPS", "Buffer length", nullptr));
        label_92->setText(QCoreApplication::translate("MIPS", "Buffer number", nullptr));
        label_93->setText(QCoreApplication::translate("MIPS", "Aux output", nullptr));
        label_94->setText(QCoreApplication::translate("MIPS", "Offset output", nullptr));
        groupBox_2->setTitle(QCoreApplication::translate("MIPS", "Set channel level", nullptr));
        leLevel->setText(QCoreApplication::translate("MIPS", "0", nullptr));
        label_95->setText(QCoreApplication::translate("MIPS", "Channel, 1 - 8", nullptr));
        leChan->setText(QCoreApplication::translate("MIPS", "0", nullptr));
        label_96->setText(QCoreApplication::translate("MIPS", "Level, % of peak, -100 to 100", nullptr));
        pbSetChannel->setText(QCoreApplication::translate("MIPS", "Set", nullptr));
        label_97->setText(QCoreApplication::translate("MIPS", "Enter 0 for all channels", nullptr));
        groupBox_3->setTitle(QCoreApplication::translate("MIPS", "Set channel range", nullptr));
        label_98->setText(QCoreApplication::translate("MIPS", "Level, % of peak, -100 to 100", nullptr));
        leRangeLevel->setText(QCoreApplication::translate("MIPS", "50", nullptr));
        label_99->setText(QCoreApplication::translate("MIPS", "Start index", nullptr));
        label_100->setText(QCoreApplication::translate("MIPS", "Stop index", nullptr));
        leRangeStart->setText(QCoreApplication::translate("MIPS", "1", nullptr));
        leRangeStop->setText(QCoreApplication::translate("MIPS", "10", nullptr));
        leRangeChan->setText(QCoreApplication::translate("MIPS", "1", nullptr));
        label_101->setText(QCoreApplication::translate("MIPS", "Channel, 1 - 8", nullptr));
        pbSetRangeChannel->setText(QCoreApplication::translate("MIPS", "Set", nullptr));
        pbARBtrigger->setText(QCoreApplication::translate("MIPS", "Trigger", nullptr));
        pbARBupdate->setText(QCoreApplication::translate("MIPS", "Update", nullptr));
        pbARBviewLog->setText(QCoreApplication::translate("MIPS", "View Log", nullptr));
        pbARBclearLog->setText(QCoreApplication::translate("MIPS", "Clear Log", nullptr));
        gbARBmodule2->setTitle(QCoreApplication::translate("MIPS", "ARB module 2", nullptr));
        label_102->setText(QCoreApplication::translate("MIPS", "Frequency", nullptr));
        label_103->setText(QCoreApplication::translate("MIPS", "Amplitude Vp-p", nullptr));
        label_104->setText(QCoreApplication::translate("MIPS", "Buffer length", nullptr));
        label_105->setText(QCoreApplication::translate("MIPS", "Buffer number", nullptr));
        label_106->setText(QCoreApplication::translate("MIPS", "Aux output", nullptr));
        label_107->setText(QCoreApplication::translate("MIPS", "Offset output", nullptr));
        groupBox_5->setTitle(QCoreApplication::translate("MIPS", "Set channel level", nullptr));
        leLevel_2->setText(QCoreApplication::translate("MIPS", "0", nullptr));
        label_108->setText(QCoreApplication::translate("MIPS", "Channel, 1 - 8", nullptr));
        leChan_2->setText(QCoreApplication::translate("MIPS", "0", nullptr));
        label_109->setText(QCoreApplication::translate("MIPS", "Level, % of peak, -100 to 100", nullptr));
        pbSetChannel_2->setText(QCoreApplication::translate("MIPS", "Set", nullptr));
        label_110->setText(QCoreApplication::translate("MIPS", "Enter 0 for all channels", nullptr));
        groupBox_6->setTitle(QCoreApplication::translate("MIPS", "Set channel range", nullptr));
        label_111->setText(QCoreApplication::translate("MIPS", "Level, % of peak, -100 to 100", nullptr));
        leRangeLevel_2->setText(QCoreApplication::translate("MIPS", "50", nullptr));
        label_112->setText(QCoreApplication::translate("MIPS", "Start index", nullptr));
        label_113->setText(QCoreApplication::translate("MIPS", "Stop index", nullptr));
        leRangeStart_2->setText(QCoreApplication::translate("MIPS", "1", nullptr));
        leRangeStop_2->setText(QCoreApplication::translate("MIPS", "10", nullptr));
        leRangeChan_2->setText(QCoreApplication::translate("MIPS", "1", nullptr));
        label_114->setText(QCoreApplication::translate("MIPS", "Channel, 1 - 8", nullptr));
        pbSetRangeChannel_2->setText(QCoreApplication::translate("MIPS", "Set", nullptr));
        pbARBtrigger_2->setText(QCoreApplication::translate("MIPS", "Trigger", nullptr));
        tabARB->setTabText(tabARB->indexOf(ARBmode), QCoreApplication::translate("MIPS", "ARB mode", nullptr));
        tabMIPS->setTabText(tabMIPS->indexOf(ARB), QCoreApplication::translate("MIPS", "ARB", nullptr));
        gbTwaveCH1->setTitle(QCoreApplication::translate("MIPS", "Twave channel 1", nullptr));
        label_37->setText(QCoreApplication::translate("MIPS", "Frequency", nullptr));
        label_38->setText(QCoreApplication::translate("MIPS", "Sequence", nullptr));
        label_39->setText(QCoreApplication::translate("MIPS", "Pulse voltage", nullptr));
        label_40->setText(QCoreApplication::translate("MIPS", "Guard 1", nullptr));
        label_41->setText(QCoreApplication::translate("MIPS", "Guard 2", nullptr));
        label_42->setText(QCoreApplication::translate("MIPS", "Hz", nullptr));
        label_43->setText(QCoreApplication::translate("MIPS", "V", nullptr));
        label_44->setText(QCoreApplication::translate("MIPS", "V", nullptr));
        label_45->setText(QCoreApplication::translate("MIPS", "V", nullptr));
        rbSTWDIR_1_FWD->setText(QCoreApplication::translate("MIPS", "Foward", nullptr));
        rbSTWDIR_1_REV->setText(QCoreApplication::translate("MIPS", "Reverse", nullptr));
        gbTwaveCH2->setTitle(QCoreApplication::translate("MIPS", "Twave channel 2", nullptr));
        label_55->setText(QCoreApplication::translate("MIPS", "Frequency", nullptr));
        label_56->setText(QCoreApplication::translate("MIPS", "Sequence", nullptr));
        label_57->setText(QCoreApplication::translate("MIPS", "Pulse voltage", nullptr));
        label_58->setText(QCoreApplication::translate("MIPS", "Guard 1", nullptr));
        label_64->setText(QCoreApplication::translate("MIPS", "Guard 2", nullptr));
        label_65->setText(QCoreApplication::translate("MIPS", "Hz", nullptr));
        label_66->setText(QCoreApplication::translate("MIPS", "V", nullptr));
        label_67->setText(QCoreApplication::translate("MIPS", "V", nullptr));
        label_68->setText(QCoreApplication::translate("MIPS", "V", nullptr));
        rbSTWDIR_2_FWD->setText(QCoreApplication::translate("MIPS", "Foward", nullptr));
        rbSTWDIR_2_REV->setText(QCoreApplication::translate("MIPS", "Reverse", nullptr));
        pbTwaveUpdate->setText(QCoreApplication::translate("MIPS", "Update", nullptr));
        gbMode->setTitle(QCoreApplication::translate("MIPS", "Mode", nullptr));
        rbSTWCMODE_NORMAL->setText(QCoreApplication::translate("MIPS", "Normal", nullptr));
        rbSTWCMODE_COMPRESS->setText(QCoreApplication::translate("MIPS", "Compress", nullptr));
        gbSwitch->setTitle(QCoreApplication::translate("MIPS", "Switch", nullptr));
        rbSTWCSW_CLOSE->setText(QCoreApplication::translate("MIPS", "Close", nullptr));
        rbSTWCSW_OPEN->setText(QCoreApplication::translate("MIPS", "Open", nullptr));
        gbTiming->setTitle(QCoreApplication::translate("MIPS", "Multi-pass cycle times", nullptr));
        label_46->setText(QCoreApplication::translate("MIPS", "Trigger delay", nullptr));
        label_47->setText(QCoreApplication::translate("MIPS", "Compress time", nullptr));
        label_48->setText(QCoreApplication::translate("MIPS", "Normal time", nullptr));
        label_49->setText(QCoreApplication::translate("MIPS", "Non compress time", nullptr));
        label_52->setText(QCoreApplication::translate("MIPS", "mS", nullptr));
        label_53->setText(QCoreApplication::translate("MIPS", "mS", nullptr));
        label_54->setText(QCoreApplication::translate("MIPS", "mS", nullptr));
        label_69->setText(QCoreApplication::translate("MIPS", "mS", nullptr));
        label_50->setText(QCoreApplication::translate("MIPS", "Order", nullptr));
        pbTwaveForceTrigger->setText(QCoreApplication::translate("MIPS", "Force Multi-pass trigger", nullptr));
        label_51->setText(QCoreApplication::translate("MIPS", "Multi-pass compressor table", nullptr));
        tabTWoption->setTabText(tabTWoption->indexOf(tabCompressor), QCoreApplication::translate("MIPS", "Compressor", nullptr));
        gbTWsweepCH1->setTitle(QCoreApplication::translate("MIPS", "Twave channel 1", nullptr));
        label_70->setText(QCoreApplication::translate("MIPS", "Start F", nullptr));
        label_71->setText(QCoreApplication::translate("MIPS", "Hz", nullptr));
        label_72->setText(QCoreApplication::translate("MIPS", "Stop F", nullptr));
        label_73->setText(QCoreApplication::translate("MIPS", "V", nullptr));
        label_74->setText(QCoreApplication::translate("MIPS", "Sweep time", nullptr));
        label_75->setText(QCoreApplication::translate("MIPS", "Sec", nullptr));
        label_76->setText(QCoreApplication::translate("MIPS", "Status", nullptr));
        pbTWsweepCH1start->setText(QCoreApplication::translate("MIPS", "Start", nullptr));
        pbTWsweepCH1stop->setText(QCoreApplication::translate("MIPS", "Stop", nullptr));
        label_134->setText(QCoreApplication::translate("MIPS", "Start V", nullptr));
        label_135->setText(QCoreApplication::translate("MIPS", "Stop V", nullptr));
        gbTWsweepCH2->setTitle(QCoreApplication::translate("MIPS", "Twave channel 2", nullptr));
        label_77->setText(QCoreApplication::translate("MIPS", "Start F", nullptr));
        label_78->setText(QCoreApplication::translate("MIPS", "Hz", nullptr));
        label_79->setText(QCoreApplication::translate("MIPS", "Stop F", nullptr));
        label_80->setText(QCoreApplication::translate("MIPS", "V", nullptr));
        label_81->setText(QCoreApplication::translate("MIPS", "Sweep time", nullptr));
        label_82->setText(QCoreApplication::translate("MIPS", "Sec", nullptr));
        label_83->setText(QCoreApplication::translate("MIPS", "Status", nullptr));
        pbTWsweepCH2start->setText(QCoreApplication::translate("MIPS", "Start", nullptr));
        pbTWsweepCH2stop->setText(QCoreApplication::translate("MIPS", "Stop", nullptr));
        label_136->setText(QCoreApplication::translate("MIPS", "Start V", nullptr));
        label_137->setText(QCoreApplication::translate("MIPS", "Stop V", nullptr));
        pbTWsweepStart->setText(QCoreApplication::translate("MIPS", "Start both channels", nullptr));
        pbTWsweepStop->setText(QCoreApplication::translate("MIPS", "Stop both channels", nullptr));
        chkSweepExtTrig->setText(QCoreApplication::translate("MIPS", "Start with external trigger, R input", nullptr));
        tabTWoption->setTabText(tabTWoption->indexOf(tabSweep), QCoreApplication::translate("MIPS", "Sweep", nullptr));
        tabMIPS->setTabText(tabMIPS->indexOf(Twave), QCoreApplication::translate("MIPS", "Twave", nullptr));
        label_59->setText(QCoreApplication::translate("MIPS", "Select RF channel", nullptr));
        gbRFparms->setTitle(QCoreApplication::translate("MIPS", "RF parameters", nullptr));
        label_60->setText(QCoreApplication::translate("MIPS", "Frequency, Hz", nullptr));
        label_61->setText(QCoreApplication::translate("MIPS", "Drive, %", nullptr));
        label_62->setText(QCoreApplication::translate("MIPS", "RF+ output, Vpp", nullptr));
        label_63->setText(QCoreApplication::translate("MIPS", "RF- output, Vpp", nullptr));
        label_184->setText(QCoreApplication::translate("MIPS", "Power, watts", nullptr));
        pbAutoTune->setText(QCoreApplication::translate("MIPS", "Auto Tune", nullptr));
        pbAutoRetune->setText(QCoreApplication::translate("MIPS", "Auto Re-tune", nullptr));
        pbUpdateRF->setText(QCoreApplication::translate("MIPS", "Update", nullptr));
        tabMIPS->setTabText(tabMIPS->indexOf(RFdriver), QCoreApplication::translate("MIPS", "RFdriver", nullptr));
        gbFAIMS_RF->setTitle(QCoreApplication::translate("MIPS", "FAIMS RF", nullptr));
        chkFMenable->setText(QCoreApplication::translate("MIPS", "Enable RF generation", nullptr));
        label_153->setText(QCoreApplication::translate("MIPS", "Drive level, %", nullptr));
        label_154->setText(QCoreApplication::translate("MIPS", "Total power, watts", nullptr));
        label_155->setText(QCoreApplication::translate("MIPS", "Positive peak output, KV", nullptr));
        label_156->setText(QCoreApplication::translate("MIPS", "Negative peak output, KV", nullptr));
        label_214->setText(QCoreApplication::translate("MIPS", "Voltage setpoint, KV", nullptr));
        rbSFMLOCK_FALSE->setText(QCoreApplication::translate("MIPS", "Manual", nullptr));
        rbSFMLOCK_TRUE->setText(QCoreApplication::translate("MIPS", "Lock", nullptr));
        pbFAIMSautoTune->setText(QCoreApplication::translate("MIPS", "Auto Tune", nullptr));
        pbFAIMSautoTuneAbort->setText(QCoreApplication::translate("MIPS", "Auto Tune Abort", nullptr));
        lblTuneState->setText(QCoreApplication::translate("MIPS", "Auto tune state", nullptr));
#if QT_CONFIG(tooltip)
        chkNegTune->setToolTip(QCoreApplication::translate("MIPS", "Check this box before selecting auto tune if you want to tune for negative DV peak.", nullptr));
#endif // QT_CONFIG(tooltip)
        chkNegTune->setText(QCoreApplication::translate("MIPS", "Tune for neg peak", nullptr));
        gbFAIMS_DC->setTitle(QCoreApplication::translate("MIPS", "DC voltage control", nullptr));
        label_157->setText(QCoreApplication::translate("MIPS", "DC bias", nullptr));
        label_158->setText(QCoreApplication::translate("MIPS", "DC CV", nullptr));
        label_159->setText(QCoreApplication::translate("MIPS", "DC Offset", nullptr));
        label_160->setText(QCoreApplication::translate("MIPS", "Setpoint", nullptr));
        label_161->setText(QCoreApplication::translate("MIPS", "Actual", nullptr));
        lblCurtianV->setText(QCoreApplication::translate("MIPS", "Curtain V", nullptr));
#if QT_CONFIG(tooltip)
        chkCurtianIndEna->setToolTip(QCoreApplication::translate("MIPS", "Check this box if you do not want FAIMS enable and disable to effect the curtian supply.", nullptr));
#endif // QT_CONFIG(tooltip)
        chkCurtianIndEna->setText(QCoreApplication::translate("MIPS", "Curtain enable independent", nullptr));
#if QT_CONFIG(tooltip)
        chkCurtianEna->setToolTip(QCoreApplication::translate("MIPS", "Enable and disable the curtian supply.", nullptr));
#endif // QT_CONFIG(tooltip)
        chkCurtianEna->setText(QCoreApplication::translate("MIPS", "Curtain enable", nullptr));
        gbCurrentValues->setTitle(QCoreApplication::translate("MIPS", "Current values", nullptr));
        label_140->setText(QCoreApplication::translate("MIPS", "Status", nullptr));
        label_141->setText(QCoreApplication::translate("MIPS", "Elasped mins", nullptr));
        label_151->setText(QCoreApplication::translate("MIPS", "CV, volts", nullptr));
        label_152->setText(QCoreApplication::translate("MIPS", "Bias, volts", nullptr));
        label_163->setText(QCoreApplication::translate("MIPS", "Compound", nullptr));
        label_139->setText(QCoreApplication::translate("MIPS", "Enternal trigger", nullptr));
        pbFMloadCSV->setText(QCoreApplication::translate("MIPS", "Load csv file", nullptr));
        pbFMstart->setText(QCoreApplication::translate("MIPS", "Start", nullptr));
        label_138->setText(QCoreApplication::translate("MIPS", "List of compounds, RT, RT window, CV, and Bias.", nullptr));
        tabScanMode->setTabText(tabScanMode->indexOf(CVparking), QCoreApplication::translate("MIPS", "CV parking", nullptr));
        gbLinearScan->setTitle(QCoreApplication::translate("MIPS", "Scan parameters", nullptr));
        label_201->setText(QCoreApplication::translate("MIPS", "CV start", nullptr));
        label_202->setText(QCoreApplication::translate("MIPS", "CV end", nullptr));
        label_203->setText(QCoreApplication::translate("MIPS", "Duration in sec", nullptr));
        label_204->setText(QCoreApplication::translate("MIPS", "Number of loops", nullptr));
        label_205->setText(QCoreApplication::translate("MIPS", "Enternal trigger", nullptr));
        pbFMstartLinear->setText(QCoreApplication::translate("MIPS", "Start", nullptr));
        label_212->setText(QCoreApplication::translate("MIPS", "This is the linear scan configuration dialog. This function allows you to define a starting and ending CV voltage and duration in seconds for the scan. When the scan starts the MIPS FAIMS system will automatically scan the CV from the starting voltage to the ending voltage in a linear fashion. Additionally the defined scan can be repeated the number of times defined in loop. The scan can be started manually or via an external trigger defined below.", nullptr));
        pbFMabortLinear->setText(QCoreApplication::translate("MIPS", "Abort", nullptr));
        label_213->setText(QCoreApplication::translate("MIPS", "Select an external trigger input on MIPS or none to manually start the scan. When start is pressed the system will start scanning or wait for the trigger you selected before starting.", nullptr));
        label_218->setText(QCoreApplication::translate("MIPS", "Start output", nullptr));
        tabScanMode->setTabText(tabScanMode->indexOf(LinearScan), QCoreApplication::translate("MIPS", "Linear scan", nullptr));
        gbStepScan->setTitle(QCoreApplication::translate("MIPS", "Scan parameters", nullptr));
        label_206->setText(QCoreApplication::translate("MIPS", "CV start", nullptr));
        label_207->setText(QCoreApplication::translate("MIPS", "CV end", nullptr));
        label_208->setText(QCoreApplication::translate("MIPS", "Step duration in mSec", nullptr));
        label_209->setText(QCoreApplication::translate("MIPS", "Total number of steps", nullptr));
        label_211->setText(QCoreApplication::translate("MIPS", "Loops", nullptr));
        label_210->setText(QCoreApplication::translate("MIPS", "Enternal trigger", nullptr));
        pbFMstartStep->setText(QCoreApplication::translate("MIPS", "Start", nullptr));
        pbFMabortStep->setText(QCoreApplication::translate("MIPS", "Abort", nullptr));
        label_215->setText(QCoreApplication::translate("MIPS", "This is the step scan configuration dialog. This function allows you to define a starting and ending CV voltage, number of steps, and step duration for the scan. When the scan starts the MIPS FAIMS system will automatically scan the CV from the starting voltage to the ending voltage in a step wise fashion. Additionally the defined scan can be repeated the number of times defined in loop. The scan can be started manually or via an external trigger defined below.", nullptr));
        label_216->setText(QCoreApplication::translate("MIPS", "Select an external trigger input on MIPS or none to manually start the scan. When start is pressed the system will start scanning or wait for the trigger you selected before starting.", nullptr));
        label_219->setText(QCoreApplication::translate("MIPS", "Start output", nullptr));
        tabScanMode->setTabText(tabScanMode->indexOf(StepScan), QCoreApplication::translate("MIPS", "Step scan", nullptr));
        label_217->setText(QCoreApplication::translate("MIPS", "Log file", nullptr));
        pbSelectLogFile->setText(QCoreApplication::translate("MIPS", "Select log file name", nullptr));
        tabMIPS->setTabText(tabMIPS->indexOf(FAIMS), QCoreApplication::translate("MIPS", "FAIMS", nullptr));
        gpFilament1->setTitle(QCoreApplication::translate("MIPS", "Filament channel 1", nullptr));
        chkEnableFilament1->setText(QCoreApplication::translate("MIPS", "Enable", nullptr));
        label_164->setText(QCoreApplication::translate("MIPS", "Filament I", nullptr));
        label_165->setText(QCoreApplication::translate("MIPS", "Setpoint", nullptr));
        label_166->setText(QCoreApplication::translate("MIPS", "Actual", nullptr));
        label_167->setText(QCoreApplication::translate("MIPS", "Supply V", nullptr));
        label_168->setText(QCoreApplication::translate("MIPS", "Filament V", nullptr));
        label_169->setText(QCoreApplication::translate("MIPS", "Power", nullptr));
        label_170->setText(QCoreApplication::translate("MIPS", "A", nullptr));
        label_171->setText(QCoreApplication::translate("MIPS", "V", nullptr));
        label_172->setText(QCoreApplication::translate("MIPS", "V", nullptr));
        label_173->setText(QCoreApplication::translate("MIPS", "W", nullptr));
        gpFilament2->setTitle(QCoreApplication::translate("MIPS", "Filament channel 2", nullptr));
        chkEnableFilament2->setText(QCoreApplication::translate("MIPS", "Enable", nullptr));
        label_174->setText(QCoreApplication::translate("MIPS", "Filament I", nullptr));
        label_175->setText(QCoreApplication::translate("MIPS", "Setpoint", nullptr));
        label_176->setText(QCoreApplication::translate("MIPS", "Actual", nullptr));
        label_177->setText(QCoreApplication::translate("MIPS", "Supply V", nullptr));
        label_178->setText(QCoreApplication::translate("MIPS", "Filament V", nullptr));
        label_179->setText(QCoreApplication::translate("MIPS", "Power", nullptr));
        label_180->setText(QCoreApplication::translate("MIPS", "A", nullptr));
        label_181->setText(QCoreApplication::translate("MIPS", "V", nullptr));
        label_182->setText(QCoreApplication::translate("MIPS", "V", nullptr));
        label_183->setText(QCoreApplication::translate("MIPS", "W", nullptr));
        tabMIPS->setTabText(tabMIPS->indexOf(Filament), QCoreApplication::translate("MIPS", "Filament", nullptr));
        gbPulseSequence->setTitle(QCoreApplication::translate("MIPS", "Pulse sequence", nullptr));
#if QT_CONFIG(tooltip)
        pbLoadFromFile->setToolTip(QCoreApplication::translate("MIPS", "Allows you to select and file that holds a pulse sequence.", nullptr));
#endif // QT_CONFIG(tooltip)
        pbLoadFromFile->setText(QCoreApplication::translate("MIPS", "Load from file", nullptr));
#if QT_CONFIG(tooltip)
        pbEditCurrent->setToolTip(QCoreApplication::translate("MIPS", "Edit the current pulse sequence.", nullptr));
#endif // QT_CONFIG(tooltip)
        pbEditCurrent->setText(QCoreApplication::translate("MIPS", "Edit current", nullptr));
#if QT_CONFIG(tooltip)
        pbCreateNew->setToolTip(QCoreApplication::translate("MIPS", "Create a new pulse sequence.", nullptr));
#endif // QT_CONFIG(tooltip)
        pbCreateNew->setText(QCoreApplication::translate("MIPS", "Create new", nullptr));
#if QT_CONFIG(tooltip)
        pbSaveToFile->setToolTip(QCoreApplication::translate("MIPS", "Save the current pulse sequence to a file.", nullptr));
#endif // QT_CONFIG(tooltip)
        pbSaveToFile->setText(QCoreApplication::translate("MIPS", "Save to file", nullptr));
        gbSequenceGenerationControl->setTitle(QCoreApplication::translate("MIPS", "Sequence generation control", nullptr));
#if QT_CONFIG(tooltip)
        comboClock->setToolTip(QCoreApplication::translate("MIPS", "Define the clock source for sequence generation.", nullptr));
#endif // QT_CONFIG(tooltip)
        label_30->setText(QCoreApplication::translate("MIPS", "Clock", nullptr));
        label_31->setText(QCoreApplication::translate("MIPS", "Trigger", nullptr));
#if QT_CONFIG(tooltip)
        comboTrigger->setToolTip(QCoreApplication::translate("MIPS", "Defines the trigger source to start a pulse sequnce.", nullptr));
#endif // QT_CONFIG(tooltip)
        label_32->setText(QCoreApplication::translate("MIPS", "External clock frequency, for reference only", nullptr));
#if QT_CONFIG(tooltip)
        leExternClock->setToolTip(QCoreApplication::translate("MIPS", "This value is not currently used. ", nullptr));
#endif // QT_CONFIG(tooltip)
        leExternClock->setText(QCoreApplication::translate("MIPS", "6250", nullptr));
#if QT_CONFIG(tooltip)
        pbDownload->setToolTip(QCoreApplication::translate("MIPS", "Download the current pulse sequence to MIPS.", nullptr));
#endif // QT_CONFIG(tooltip)
        pbDownload->setText(QCoreApplication::translate("MIPS", "Download to MIPS", nullptr));
        pbViewTable->setText(QCoreApplication::translate("MIPS", "View table command", nullptr));
#if QT_CONFIG(tooltip)
        pbTrigger->setToolTip(QCoreApplication::translate("MIPS", "Issues a command to force a sequence to start.", nullptr));
#endif // QT_CONFIG(tooltip)
        pbTrigger->setText(QCoreApplication::translate("MIPS", "Trigger", nullptr));
        label_33->setText(QCoreApplication::translate("MIPS", "Select pulse sequence number", nullptr));
#if QT_CONFIG(tooltip)
        leSequenceNumber->setToolTip(QCoreApplication::translate("MIPS", "Up to 5 sequences can be loaded into MIPS this selects the one you are working with.", nullptr));
#endif // QT_CONFIG(tooltip)
        leSequenceNumber->setText(QCoreApplication::translate("MIPS", "1", nullptr));
        chkAutoAdvance->setText(QCoreApplication::translate("MIPS", "Advance pulse sequence\n"
"number on each trigger", nullptr));
#if QT_CONFIG(tooltip)
        groupBox_4->setToolTip(QCoreApplication::translate("MIPS", "These controls allow you to change a output value at a time point. This can be done while a sequence is running.", nullptr));
#endif // QT_CONFIG(tooltip)
        groupBox_4->setTitle(QCoreApplication::translate("MIPS", "Edit loaded pulse sequence time point", nullptr));
        label_34->setText(QCoreApplication::translate("MIPS", "Time point counts", nullptr));
        label_35->setText(QCoreApplication::translate("MIPS", "Channel", nullptr));
        label_36->setText(QCoreApplication::translate("MIPS", "Value", nullptr));
#if QT_CONFIG(tooltip)
        leTimePoint->setToolTip(QCoreApplication::translate("MIPS", "Count value of the time point you wish to address.", nullptr));
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        leChannel->setToolTip(QCoreApplication::translate("MIPS", "DC bias channel 1 through 16 or Digital output A through P.", nullptr));
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        leValue->setToolTip(QCoreApplication::translate("MIPS", "Value read or value you wish to write to the selected channel.", nullptr));
#endif // QT_CONFIG(tooltip)
        pbRead->setText(QCoreApplication::translate("MIPS", "Read", nullptr));
        pbWrite->setText(QCoreApplication::translate("MIPS", "Write", nullptr));
        pbVisPulseSequence->setText(QCoreApplication::translate("MIPS", "Visualize pulse sequence", nullptr));
#if QT_CONFIG(tooltip)
        pbExitTableMode->setToolTip(QCoreApplication::translate("MIPS", "Issues a command to force a sequence to start.", nullptr));
#endif // QT_CONFIG(tooltip)
        pbExitTableMode->setText(QCoreApplication::translate("MIPS", "Exit Table Mode", nullptr));
        tabMIPS->setTabText(tabMIPS->indexOf(PSG), QCoreApplication::translate("MIPS", "Pulse Sequence Generation", nullptr));
        menuAbout->setTitle(QCoreApplication::translate("MIPS", "Help", nullptr));
        menuTerminal->setTitle(QCoreApplication::translate("MIPS", "Terminal", nullptr));
        menuFile->setTitle(QCoreApplication::translate("MIPS", "File", nullptr));
        menuTools->setTitle(QCoreApplication::translate("MIPS", "Tools", nullptr));
    } // retranslateUi

};

namespace Ui {
    class MIPS: public Ui_MIPS {};
} // namespace Ui

QT_END_NAMESPACE

#endif // UI_MIPS_H
